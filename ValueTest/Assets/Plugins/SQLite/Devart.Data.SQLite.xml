<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>Devart.Data.SQLite</name>
    <version>5.5.649.0</version>
    <fullname>Devart.Data.SQLite, Version=5.5.649.0, Culture=neutral, PublicKeyToken=09af7300eec23701</fullname>
  </assembly>
  <members>
    <member name="N:Devart.Common">
      <summary>The <see cref="N:Devart.Common" /> namespace contains classes shared by the Devart data providers. </summary>
    </member>
    <member name="T:Devart.Common.DbConnectionBase">
      <summary>Represents an open connection to a server. </summary>
    </member>
    <member name="M:Devart.Common.DbConnectionBase.BeginOpen(System.AsyncCallback,System.Object)">
      <summary>Starts an asynchronous invocation of an <see cref="M:Devart.Common.DbConnectionBase.Open" /> method. </summary>
      <keywords>DbConnectionBase.BeginOpen method </keywords>
      <param name="callback">The delegate to call when the asynchronous invoke is complete. If callback is a null reference (Nothing in Visual Basic), the delegate is not called. </param>
      <param name="stateObject">State information that is passed on to the delegate. </param>
      <returns>An <see cref="T:System.IAsyncResult" /> interface that represents the asynchronous operation started by calling this method. </returns>
    </member>
    <member name="M:Devart.Common.DbConnectionBase.ChangeDatabase(System.String)">
      <summary>Changes the current database associated with an open <see cref="T:Devart.Common.DbConnectionBase" />. </summary>
      <keywords>DbConnectionBase.ChangeDatabase method </keywords>
      <param name="value">The database name. </param>
    </member>
    <member name="M:Devart.Common.DbConnectionBase.Close()">
      <summary>Closes the connection to the database. This is the preferred method of closing any open connection. </summary>
      <keywords>DbConnectionBase.Close method </keywords>
    </member>
    <member name="P:Devart.Common.DbConnectionBase.ConnectionString">
      <summary>Gets or sets the string used to open a server connection. </summary>
      <keywords>DbConnectionBase.ConnectionString property </keywords>
      <value>The connection string that includes parameters needed to establish the initial connection. The default value is an empty string (""). </value>
    </member>
    <member name="P:Devart.Common.DbConnectionBase.ConnectionTimeout">
      <summary>Gets or sets the time to wait while trying to establish a connection before terminating the attempt and generating an error. </summary>
      <keywords>DbConnectionBase.ConnectionTimeout property </keywords>
      <value>The time (in seconds) to wait for a connection to open. The default value is 15 seconds. </value>
    </member>
    <member name="P:Devart.Common.DbConnectionBase.DataSource">
      <summary>Gets or sets name of the server to which to connect. </summary>
      <keywords>DbConnectionBase.DataSource property </keywords>
      <value>Gets or sets name of the server to which to connect. The default value is an empty string (""). </value>
    </member>
    <member name="P:Devart.Common.DbConnectionBase.Database">
      <summary>Gets or sets the name of the current database or the database to be used once a connection is open. </summary>
      <keywords>DbConnectionBase.Database property </keywords>
      <value>The name of the current database or the name of the database to be used once a connection is open. The default value is an empty string (""). </value>
    </member>
    <member name="P:Devart.Common.DbConnectionBase.DesignTimeVisible">
      <summary>Indicates whether the component is visible in design time. </summary>
      <keywords>DbConnectionBase.DesignTimeVisible property </keywords>
    </member>
    <member name="M:Devart.Common.DbConnectionBase.EndOpen(System.IAsyncResult)">
      <summary>Ends an asynchronous invocation of the <see cref="M:Devart.Common.DbConnectionBase.Open" /> method. </summary>
      <keywords>DbConnectionBase.EndOpen method </keywords>
      <param name="result">The <see cref="T:System.IAsyncResult" /> returned from <see cref="M:Devart.Common.DbConnectionBase.BeginOpen" />. </param>
    </member>
    <member name="M:Devart.Common.DbConnectionBase.EnlistTransaction(System.Transactions.Transaction)">
      <summary>Enlists in the specified transaction. </summary>
      <keywords>DbConnectionBase.EnlistTransaction method </keywords>
      <param name="transaction">A reference to an existing <b>System.Transactions.Transaction</b> in which to enlist. </param>
    </member>
    <member name="M:Devart.Common.DbConnectionBase.GetSchema()">
      <summary>Returns list of metadata collections and number of restrictions for a collection. </summary>
      <keywords>DbConnectionBase.GetSchema method </keywords>
      <returns>A <see cref="T:System.Data.DataTable" /> object. </returns>
      <overloads>Provides information about server schema objects. </overloads>
    </member>
    <member name="M:Devart.Common.DbConnectionBase.GetSchema(System.String)">
      <summary>Provides information about server schema objects. </summary>
      <keywords>DbConnectionBase.GetSchema method </keywords>
      <param name="collectionName">Name of the collection to get information about. </param>
      <returns>A <see cref="T:System.Data.DataTable" /> object. </returns>
    </member>
    <member name="M:Devart.Common.DbConnectionBase.GetSchema(System.String,System.String[])">
      <summary>Returns detailed information about a server schema object. </summary>
      <keywords>DbConnectionBase.GetSchema method </keywords>
      <param name="collectionName">Name of the collection to get information about. </param>
      <param name="restrictionValues">Array of strings representing collection restrictions. In some cases last array members may be omitted. </param>
      <returns>A <see cref="T:System.Data.DataTable" /> object. </returns>
    </member>
    <member name="P:Devart.Common.DbConnectionBase.InDistributedTransaction">
      <summary>Indicates whether the connection is enlisted in a distributed transaction. </summary>
      <keywords>DbConnectionBase.InDistributedTransaction property </keywords>
      <value><see langword="true" /> if the connection is enlisted in a distributed transaction; otherwise, <see langword="false" />. </value>
    </member>
    <member name="P:Devart.Common.DbConnectionBase.Name">
      <summary>Gets or sets name of the component. </summary>
      <keywords>DbConnectionBase.Name property </keywords>
    </member>
    <member name="M:Devart.Common.DbConnectionBase.Open()">
      <summary>Opens a data source connection with the property settings specified by the <see cref="P:Devart.Common.DbConnectionBase.ConnectionString" />. </summary>
      <keywords>DbConnectionBase.Open method </keywords>
    </member>
    <member name="P:Devart.Common.DbConnectionBase.Owner">
      <summary>Gets or sets a form or other container that the <see cref="T:Devart.Common.DbConnectionBase" /> instance belongs to. </summary>
      <keywords>DbConnectionBase.Owner property </keywords>
      <value>A form or other container that the object belongs to. </value>
    </member>
    <member name="P:Devart.Common.DbConnectionBase.ServerVersion">
      <summary>Gets a string containing the version of the instance of the server to which the client is connected. </summary>
      <keywords>DbConnectionBase.ServerVersion property </keywords>
      <value>The version of the server instance. </value>
    </member>
    <member name="P:Devart.Common.DbConnectionBase.State">
      <summary>Gets the current state of the connection. </summary>
      <keywords>DbConnectionBase.State property </keywords>
      <value>A bitwise combination of the <see cref="T:System.Data.ConnectionState" /> values. The default value is Closed. </value>
    </member>
    <member name="E:Devart.Common.DbConnectionBase.StateChange">
      <summary>Occurs when the state of the connection changes. </summary>
      <keywords>DbConnectionBase.StateChange event </keywords>
    </member>
    <member name="E:Devart.Common.DbConnectionBase.TransactionStateChanged">
      <summary>Occurs when the state of the transaction is changed. </summary>
      <keywords>DbConnectionBase.TransactionStateChanged event </keywords>
    </member>
    <member name="E:Devart.Common.DbConnectionBase.TransactionStateChanging">
      <summary>Occurs when the state of the transaction is changing. </summary>
      <keywords>DbConnectionBase.TransactionStateChanging event </keywords>
    </member>
    <member name="T:Devart.Common.DbMonitorHelper">
      <summary>Allows to monitor dynamic SQL execution in applications that use .NET data providers. </summary>
    </member>
    <member name="T:Devart.Common.ParserBehavior">
      <summary>Defines behavior for <see cref="M:Devart.Data.SQLite.SQLiteSelectStatement.Parse(System.String,Devart.Common.ParserBehavior)" />. </summary>
    </member>
    <member name="F:Devart.Common.ParserBehavior.All">
      <summary>Parse all statement clauses. </summary>
    </member>
    <member name="F:Devart.Common.ParserBehavior.Columns">
      <summary>Parse select-list. </summary>
    </member>
    <member name="F:Devart.Common.ParserBehavior.GroupBy">
      <summary>Parse GROUP BY clause. </summary>
    </member>
    <member name="F:Devart.Common.ParserBehavior.Having">
      <summary>Parse HAVING clause. </summary>
    </member>
    <member name="F:Devart.Common.ParserBehavior.None">
      <summary>Do not parse any clause. </summary>
    </member>
    <member name="F:Devart.Common.ParserBehavior.OrderBy">
      <summary>Parse ORDER BY clause. </summary>
    </member>
    <member name="F:Devart.Common.ParserBehavior.Tables">
      <summary>Parse FROM clause. </summary>
    </member>
    <member name="F:Devart.Common.ParserBehavior.Where">
      <summary>Parse WHERE clause. </summary>
    </member>
    <member name="T:Devart.Common.SelectColumn">
      <summary>Represents a column or an expression in SELECT, GROUP BY and ORDER BY clauses of a SQL statement. </summary>
    </member>
    <member name="M:Devart.Common.SelectColumn.#ctor(System.String)">
      <summary>Creates and initializes new instance of <see cref="T:Devart.Common.SelectColumn" /> with the specified column name (expression text). </summary>
      <param name="name"> </param>
      <overloads>Creates and initializes new instance of <see cref="T:Devart.Common.SelectColumn" />. </overloads>
    </member>
    <member name="M:Devart.Common.SelectColumn.#ctor(System.String,System.String,System.String,System.String)">
      <summary>Creates and initializes new instance of <see cref="T:Devart.Common.SelectColumn" /> with the specified schema name, table name, column name (expression text) and an alias. </summary>
      <param name="schema">The schema that the column belongs to. </param>
      <param name="table">The table or view that the column belongs to. </param>
      <param name="name">The name of the column or expression text. </param>
      <param name="alias">The column alias. </param>
    </member>
    <member name="M:Devart.Common.SelectColumn.#ctor(System.String,System.String,System.String,System.String,System.String)">
      <summary>Creates and initializes new instance of <see cref="T:Devart.Common.SelectColumn" /> with the specified schema name, table name, column name (expression text) and an alias. </summary>
      <param name="database">The database that the column belongs to. </param>
      <param name="schema">The schema that the column belongs to. </param>
      <param name="table">The table or view that the column belongs to. </param>
      <param name="name">The name of the column or expression text. </param>
      <param name="alias">The column alias. </param>
    </member>
    <member name="P:Devart.Common.SelectColumn.Alias">
      <summary>Gets or sets column alias. </summary>
      <keywords>SelectColumn.Alias property </keywords>
      <value>Column alias. </value>
    </member>
    <member name="P:Devart.Common.SelectColumn.Database">
      <summary>Gets or sets database that the column belongs to. </summary>
      <keywords>SelectColumn.Database property </keywords>
      <value>A database that the column belongs to. </value>
    </member>
    <member name="M:Devart.Common.SelectColumn.Equals(System.Object)">
      <summary>Determines whether two <see cref="T:Devart.Common.SelectColumn" /> objects are identical. </summary>
      <keywords>SelectColumn.Equals method </keywords>
      <param name="obj">A <see cref="T:Devart.Common.SelectColumn" /> object to compare with. </param>
      <returns>
        <see langword="true" />, if the given <paramref name="obj" /> object equals to the current <see cref="T:Devart.Common.SelectColumn" /> instance. </returns>
    </member>
    <member name="P:Devart.Common.SelectColumn.Expression">
      <summary>Gets or sets the SQL expression that the column represents. </summary>
      <keywords>SelectColumn.Expression property </keywords>
      <value>The SQL expression. </value>
    </member>
    <member name="M:Devart.Common.SelectColumn.GetHashCode()">
      <summary>Returns hash code of the current instance. </summary>
      <keywords>SelectColumn.GetHashCode method </keywords>
    </member>
    <member name="P:Devart.Common.SelectColumn.Name">
      <summary>Gets or sets name of the column. </summary>
      <keywords>SelectColumn.Name property </keywords>
      <value>The name of the column. </value>
    </member>
    <member name="P:Devart.Common.SelectColumn.Schema">
      <summary>Gets or sets schema that the column belongs to. </summary>
      <keywords>SelectColumn.Schema property </keywords>
      <value>A schema that the column belongs to. </value>
    </member>
    <member name="P:Devart.Common.SelectColumn.Table">
      <summary>Gets or sets table or view that the column belongs to. </summary>
      <keywords>SelectColumn.Table property </keywords>
      <value>A table or view that the column belongs to. </value>
    </member>
    <member name="M:Devart.Common.SelectColumn.ToString()">
      <summary>Returns the current <see cref="T:Devart.Common.SelectColumn" /> object in the text form. </summary>
      <keywords>SelectColumn.ToString method </keywords>
      <returns>Text representation of the current <see cref="T:Devart.Common.SelectColumn" /> object. </returns>
    </member>
    <member name="T:Devart.Common.SelectColumnCollection">
      <summary>Represents a collection of columns and expressions in a <see cref="T:Devart.Common.SelectStatement" /> object. </summary>
    </member>
    <member name="M:Devart.Common.SelectColumnCollection.Add(Devart.Common.SelectColumn)">
      <summary>Adds the specified <see cref="T:Devart.Common.SelectColumn" /> to the <see cref="T:Devart.Common.SelectColumnCollection" />. </summary>
      <keywords>SelectColumnCollection.Add method </keywords>
      <param name="value">The <see cref="T:Devart.Common.SelectColumn" /> to add to the collection. </param>
      <returns>Index of the new <see cref="T:Devart.Common.SelectColumn" /> object. </returns>
      <overloads>Adds the specified <see cref="T:Devart.Common.SelectColumn" /> to the <see cref="T:Devart.Common.SelectColumnCollection" />. </overloads>
    </member>
    <member name="M:Devart.Common.SelectColumnCollection.Add(System.String)">
      <summary>Creates a new <see cref="T:Devart.Common.SelectColumn" /> object with the name specified and adds it to the collection. </summary>
      <keywords>SelectColumnCollection.Add method </keywords>
      <param name="name">The name of the column which the <see cref="T:Devart.Common.SelectColumn" /> object should represent. </param>
      <returns>The <see cref="T:Devart.Common.SelectColumn" /> object created. </returns>
    </member>
    <member name="M:Devart.Common.SelectColumnCollection.Add(System.String,System.Boolean)">
      <summary>Creates a new <see cref="T:Devart.Common.SelectColumn" /> object with the name specified and adds it to the collection. </summary>
      <keywords>SelectColumnCollection.Add method </keywords>
      <param name="name">The name of the column that the <see cref="T:Devart.Common.SelectColumn" /> object should represent. </param>
      <param name="quote">Specifies whether the column name should be quoted. </param>
      <returns>The <see cref="T:Devart.Common.SelectColumn" /> object created. </returns>
    </member>
    <member name="M:Devart.Common.SelectColumnCollection.Add(System.String,System.String,System.String,System.String)">
      <summary>Adds a newly created <see cref="T:Devart.Common.SelectColumn" /> object with the specified schema, table, name, and alias to the collection. </summary>
      <keywords>SelectColumnCollection.Add method </keywords>
      <param name="schema">The schema which the table containing this column belongs to. </param>
      <param name="table">The name of the table containing the column. </param>
      <param name="name">The name of the column that the <see cref="T:Devart.Common.SelectColumn" /> object should represent. </param>
      <param name="alias">The alias of the column. </param>
      <returns>The <see cref="T:Devart.Common.SelectColumn" /> object created. </returns>
    </member>
    <member name="M:Devart.Common.SelectColumnCollection.Add(System.String,System.String,System.String,System.String,System.Boolean)">
      <summary>Adds a newly created <see cref="T:Devart.Common.SelectColumn" /> object with the specified schema, table, name, and alias to the collection. </summary>
      <keywords>SelectColumnCollection.Add method </keywords>
      <param name="schema">The schema which the table containing this column belongs to. </param>
      <param name="table">The name of the table containing the column. </param>
      <param name="name">The name of the column that the <see cref="T:Devart.Common.SelectColumn" /> object should represent. </param>
      <param name="alias">The alias of the column. </param>
      <param name="quote">Specifies if the column parameters should be quoted. </param>
      <returns>The <see cref="T:Devart.Common.SelectColumn" /> object created. </returns>
    </member>
    <member name="M:Devart.Common.SelectColumnCollection.Add(System.String,System.String,System.String,System.String,System.String)">
      <summary>Adds a newly created <see cref="T:Devart.Common.SelectColumn" /> object with the specified database, schema, table, name, and alias to the collection. </summary>
      <keywords>SelectColumnCollection.Add method </keywords>
      <param name="database">The database which the table containing this column belongs to. </param>
      <param name="schema">The schema which the table containing this column belongs to. </param>
      <param name="table">The name of the table containing the column. </param>
      <param name="name">The name of the column that the <see cref="T:Devart.Common.SelectColumn" /> object should represent. </param>
      <param name="alias">The alias of the column. </param>
      <returns>The <see cref="T:Devart.Common.SelectColumn" /> object created. </returns>
    </member>
    <member name="M:Devart.Common.SelectColumnCollection.Add(System.String,System.String,System.String,System.String,System.String,System.Boolean)">
      <summary>Adds a newly created <see cref="T:Devart.Common.SelectColumn" /> object with the specified database, schema, table, name, and alias to the collection. </summary>
      <keywords>SelectColumnCollection.Add method </keywords>
      <param name="database">The database which the table containing this column belongs to. </param>
      <param name="schema">The schema which the table containing this column belongs to. </param>
      <param name="table">The name of the table containing the column. </param>
      <param name="name">The name of the column which the <see cref="T:Devart.Common.SelectColumn" /> object should represent. </param>
      <param name="alias">The alias of the column. </param>
      <param name="quote">Specifies if the column parameters should be quoted. </param>
      <returns>The <see cref="T:Devart.Common.SelectColumn" /> object created. </returns>
    </member>
    <member name="M:Devart.Common.SelectColumnCollection.Contains(Devart.Common.SelectColumn)">
      <summary>Gets a value indicating whether a <see cref="T:Devart.Common.SelectColumn" /> object exists in the collection. </summary>
      <keywords>SelectColumnCollection.Contains method </keywords>
      <param name="value">The value of the <see cref="T:Devart.Common.SelectColumn" /> object to find. </param>
      <returns>
        <see langword="true" /> if the collection contains the <see cref="T:Devart.Common.SelectColumn" />; otherwise, <see langword="false" />. </returns>
    </member>
    <member name="M:Devart.Common.SelectColumnCollection.CopyTo(Devart.Common.SelectColumn[],System.Int32)">
      <summary>Copies <see cref="T:Devart.Common.SelectColumn" /> objects from the <see cref="T:Devart.Common.SelectColumnCollection" /> to the specified array. </summary>
      <keywords>SelectColumnCollection.CopyTo method </keywords>
      <param name="array">The array into which to copy the <see cref="T:Devart.Common.SelectColumn" /> objects. </param>
      <param name="index">The zero-based index of the array. </param>
    </member>
    <member name="M:Devart.Common.SelectColumnCollection.IndexOf(Devart.Common.SelectColumn)">
      <summary>Gets the location in the collection of the <see cref="T:Devart.Common.SelectColumn" /> object. </summary>
      <keywords>SelectColumnCollection.IndexOf method </keywords>
      <param name="value">The <see cref="T:Devart.Common.SelectColumn" /> object to find. </param>
      <returns>The zero-based location of the <see cref="T:Devart.Common.SelectColumn" /> in the collection. </returns>
    </member>
    <member name="M:Devart.Common.SelectColumnCollection.Insert(System.Int32,Devart.Common.SelectColumn)">
      <summary>Inserts a <see cref="T:Devart.Common.SelectColumn" /> into the collection at the specified index. </summary>
      <keywords>SelectColumnCollection.Insert method </keywords>
      <param name="index">The zero-based index where the table is to be inserted within the collection. </param>
      <param name="value">The <see cref="T:Devart.Common.SelectColumn" /> to add to the collection. </param>
    </member>
    <member name="P:Devart.Common.SelectColumnCollection.Item(System.Int32)">
      <summary>Gets or sets the <see cref="T:Devart.Common.SelectColumn" /> at the specified index. </summary>
      <keywords>SelectColumnCollection.Item property </keywords>
      <param name="index">The zero-based index of the table. </param>
      <value>The <see cref="T:Devart.Common.SelectColumn" /> at the specified index. </value>
    </member>
    <member name="M:Devart.Common.SelectColumnCollection.Remove(Devart.Common.SelectColumn)">
      <summary>Removes the specified <see cref="T:Devart.Common.SelectColumn" /> object from the collection. </summary>
      <keywords>SelectColumnCollection.Remove method </keywords>
      <param name="value">The <see cref="T:Devart.Common.SelectColumn" /> object to remove from the collection. </param>
    </member>
    <member name="T:Devart.Common.SelectStatement">
      <summary>Composes, modifies and parses SELECT statements. </summary>
    </member>
    <member name="M:Devart.Common.SelectStatement.AddHavingCondition(System.String)">
      <summary>Adds new condition to HAVING clause of the statement, represented by the <see cref="P:Devart.Common.SelectStatement.Having" /> property. </summary>
      <keywords>SelectStatement.AddHavingCondition method </keywords>
      <param name="condition">A new condition to add. </param>
    </member>
    <member name="M:Devart.Common.SelectStatement.AddWhereCondition(System.String)">
      <summary>Adds new condition to WHERE clause of the statement, represented by the <see cref="P:Devart.Common.SelectStatement.Where" /> property. </summary>
      <keywords>SelectStatement.AddWhereCondition method </keywords>
      <param name="condition">A new condition to add. </param>
    </member>
    <member name="P:Devart.Common.SelectStatement.All">
      <summary>Gets or sets the value, indicating if the all records are selected or only the unique ones. </summary>
      <keywords>SelectStatement.All property </keywords>
      <value><see langword="true" />, if the result set should contain all the rows; otherwise, <see langword="false" />. </value>
    </member>
    <member name="M:Devart.Common.SelectStatement.Clear()">
      <summary>Clears all parts of the <see cref="T:Devart.Common.SelectStatement" />. </summary>
      <keywords>SelectStatement.Clear method </keywords>
    </member>
    <member name="P:Devart.Common.SelectStatement.Columns">
      <summary>Contains list of columns and expressions used in the select-list of the current <see cref="T:Devart.Common.SelectStatement" /> object. </summary>
      <keywords>SelectStatement.Columns property </keywords>
      <value>A <see cref="T:Devart.Common.SelectColumnCollection" /> that represents list of columns and expressions used in the SELECT clause. </value>
    </member>
    <member name="P:Devart.Common.SelectStatement.Distinct">
      <summary>Gets or sets whether statement should request unique rows only. </summary>
      <keywords>SelectStatement.Distinct property </keywords>
      <value>
        <see langword="true" />, if the result set should contain unique rows only; otherwise, <see langword="false" />. </value>
    </member>
    <member name="P:Devart.Common.SelectStatement.GroupBy">
      <summary>Contains list of columns used in the GROUP BY clause of the current <see cref="T:Devart.Common.SelectStatement" /> object. </summary>
      <keywords>SelectStatement.GroupBy property </keywords>
      <value>A <see cref="T:Devart.Common.SelectColumnCollection" /> that represents list of columns used in the GROUP BY clause. </value>
    </member>
    <member name="P:Devart.Common.SelectStatement.Having">
      <summary>Gets or sets HAVING clause of the statement. </summary>
      <keywords>SelectStatement.Having property </keywords>
      <value>The HAVING clause of the statement. </value>
    </member>
    <member name="P:Devart.Common.SelectStatement.OrderBy">
      <summary>Contains list of columns used in the ORDER BY clause of the current <see cref="T:Devart.Common.SelectStatement" /> object. </summary>
      <keywords>SelectStatement.OrderBy property </keywords>
      <value>A <see cref="T:Devart.Common.SelectColumnCollection" /> that represents list of columns used in the ORDER BY clause. </value>
    </member>
    <member name="P:Devart.Common.SelectStatement.Tables">
      <summary>Contains list of tables and subqueries used in the FROM clause of the current <see cref="T:Devart.Common.SelectStatement" /> object. </summary>
      <keywords>SelectStatement.Tables property </keywords>
      <value>A <see cref="T:Devart.Common.SelectTableCollection" /> that represents list of tables and subqueries used in the FROM clause. </value>
    </member>
    <member name="M:Devart.Common.SelectStatement.ToString()">
      <summary>Returns SQL statement in the text form. </summary>
      <keywords>SelectStatement.ToString method </keywords>
      <returns>The text of SQL statement that is equivalent to current state of the <see cref="T:Devart.Common.SelectStatement" /> object. </returns>
    </member>
    <member name="P:Devart.Common.SelectStatement.Where">
      <summary>Gets or sets WHERE clause of the statement. </summary>
      <keywords>SelectStatement.Where property </keywords>
      <value>The WHERE clause of the statement. </value>
    </member>
    <member name="T:Devart.Common.SelectStatementNode">
      <summary>An abstract SQL element. </summary>
    </member>
    <member name="M:Devart.Common.SelectStatementNode.#ctor()">
      <summary>Creates and initializes new instance of <see cref="T:Devart.Common.SelectStatementNode" />. </summary>
    </member>
    <member name="T:Devart.Common.SelectTable">
      <summary>Represents a table or a subquery in the FROM clause of a SELECT statement. </summary>
    </member>
    <member name="M:Devart.Common.SelectTable.#ctor(System.String)">
      <summary>Creates and initializes new instance of <see cref="T:Devart.Common.SelectTable" /> with the specified table name (subquery text). </summary>
      <param name="name">The name of the table or subquery text. </param>
      <overloads>Creates and initializes new instance of <see cref="T:Devart.Common.SelectTable" />. </overloads>
    </member>
    <member name="M:Devart.Common.SelectTable.#ctor(System.String,System.String,System.String)">
      <summary>Creates and initializes new instance of <see cref="T:Devart.Common.SelectTable" /> with the specified schema, table name (subquery text) and alias. </summary>
      <param name="schema">The name of the table schema. </param>
      <param name="name">The name of the table or subquery text. </param>
      <param name="alias">The alias for the table or expression. </param>
    </member>
    <member name="M:Devart.Common.SelectTable.#ctor(System.String,System.String,System.String,System.String)">
      <summary>Creates and initializes new instance of <see cref="T:Devart.Common.SelectTable" /> with the specified schema, table name (subquery text) and alias. </summary>
      <param name="database">The name of the table database. </param>
      <param name="schema">The name of the table schema. </param>
      <param name="name">The name of the table or subquery text. </param>
      <param name="alias">The alias for the table or expression. </param>
    </member>
    <member name="P:Devart.Common.SelectTable.Alias">
      <summary>Gets or sets table alias. </summary>
      <keywords>SelectTable.Alias property </keywords>
      <value>Table alias. </value>
    </member>
    <member name="P:Devart.Common.SelectTable.Database">
      <summary>Gets or sets the name of the table database. </summary>
      <keywords>SelectTable.Database property </keywords>
      <value>The name of the table database. </value>
    </member>
    <member name="M:Devart.Common.SelectTable.Equals(System.Object)">
      <summary>Determines whether two <see cref="T:Devart.Common.SelectTable" /> objects are identical. </summary>
      <keywords>SelectTable.Equals method </keywords>
      <param name="obj">A <see cref="T:Devart.Common.SelectColumn" /> object to compare with. </param>
      <returns>
        <see langword="true" />, if the given <paramref name="obj" /> object equals to the current <see cref="T:Devart.Common.SelectTable" /> instance. </returns>
    </member>
    <member name="M:Devart.Common.SelectTable.GetHashCode()">
      <summary>Returns hash code of the current instance. </summary>
      <keywords>SelectTable.GetHashCode method </keywords>
    </member>
    <member name="P:Devart.Common.SelectTable.JoinClause">
      <summary>Gets or sets a JOIN clause for the <see cref="T:Devart.Common.SelectTable" />. </summary>
      <keywords>SelectTable.JoinClause property </keywords>
      <value>The JOIN clause. </value>
    </member>
    <member name="P:Devart.Common.SelectTable.JoinCondition">
      <summary>Gets or sets a JOIN ON clause for the <see cref="T:Devart.Common.SelectTable" />. </summary>
      <keywords>SelectTable.JoinCondition property </keywords>
      <value>The JOIN ON clause. </value>
    </member>
    <member name="P:Devart.Common.SelectTable.Name">
      <summary>Gets or sets name of the table or subquery text. </summary>
      <keywords>SelectTable.Name property </keywords>
      <value>The name of the table or subquery text. </value>
    </member>
    <member name="P:Devart.Common.SelectTable.Schema">
      <summary>Gets or sets the name of the table schema. </summary>
      <keywords>SelectTable.Schema property </keywords>
      <value>The name of the table schema. </value>
    </member>
    <member name="P:Devart.Common.SelectTable.SubQuery">
      <summary>Gets the subquery text that the <see cref="T:Devart.Common.SelectTable" /> represents. </summary>
      <keywords>SelectTable.SubQuery property </keywords>
      <value>The subquery text. </value>
    </member>
    <member name="M:Devart.Common.SelectTable.ToString()">
      <summary>Returns the current <see cref="T:Devart.Common.SelectTable" /> object in the text form. </summary>
      <keywords>SelectTable.ToString method </keywords>
      <returns>Text representation of the current <see cref="T:Devart.Common.SelectTable" /> object. </returns>
    </member>
    <member name="T:Devart.Common.SelectTableCollection">
      <summary>Represents a collection of tables and subqueries in a <see cref="T:Devart.Common.SelectStatement" /> object. </summary>
    </member>
    <member name="M:Devart.Common.SelectTableCollection.Add(Devart.Common.SelectTable)">
      <summary>Adds the specified <see cref="T:Devart.Common.SelectTable" /> to the <see cref="T:Devart.Common.SelectTableCollection" />. </summary>
      <keywords>SelectTableCollection.Add method </keywords>
      <param name="value">The <see cref="T:Devart.Common.SelectTable" /> to add to the collection. </param>
      <returns>Index of the new <see cref="T:Devart.Common.SelectTable" /> object. </returns>
      <overloads>Adds the specified <see cref="T:Devart.Common.SelectTable" /> to the <see cref="T:Devart.Common.SelectTableCollection" />. </overloads>
    </member>
    <member name="M:Devart.Common.SelectTableCollection.Add(System.String)">
      <summary>Creates a new <see cref="T:Devart.Common.SelectTable" /> object with the name specified and adds it to the collection. </summary>
      <keywords>SelectTableCollection.Add method </keywords>
      <param name="name">The name of the table that the <see cref="T:Devart.Common.SelectTable" /> object should represent. </param>
      <returns>The <see cref="T:Devart.Common.SelectTable" /> object created. </returns>
    </member>
    <member name="M:Devart.Common.SelectTableCollection.Add(System.String,System.Boolean)">
      <summary>Creates a new <see cref="T:Devart.Common.SelectTable" /> object with the name specified and adds it to the collection. </summary>
      <keywords>SelectTableCollection.Add method </keywords>
      <param name="name">The name of the table that the <see cref="T:Devart.Common.SelectTable" /> object should represent. </param>
      <param name="quoted">Specifies whether the table name should be quoted. </param>
      <returns>The <see cref="T:Devart.Common.SelectTable" /> object created. </returns>
    </member>
    <member name="M:Devart.Common.SelectTableCollection.Add(System.String,System.String,System.String)">
      <summary>Adds a newly created <see cref="T:Devart.Common.SelectTable" /> object with the specified schema, name, and alias to the collection. </summary>
      <keywords>SelectTableCollection.Add method </keywords>
      <param name="schema">The schema, which the table belongs to. </param>
      <param name="name">The name of the table that the <see cref="T:Devart.Common.SelectTable" /> object should represent. </param>
      <param name="alias">The alias of the table. </param>
      <returns>The <see cref="T:Devart.Common.SelectTable" /> object created. </returns>
    </member>
    <member name="M:Devart.Common.SelectTableCollection.Add(System.String,System.String,System.String,System.Boolean)">
      <summary>Adds a newly created <see cref="T:Devart.Common.SelectTable" /> object with the specified schema, name, and alias to the collection. </summary>
      <keywords>SelectTableCollection.Add method </keywords>
      <param name="schema">The schema, which the table belongs to. </param>
      <param name="name">The name of the table that the <see cref="T:Devart.Common.SelectTable" /> object should represent. </param>
      <param name="alias">The alias of the table. </param>
      <param name="quote">Specifies if the table parameters should be quoted. </param>
      <returns>The <see cref="T:Devart.Common.SelectTable" /> object created. </returns>
    </member>
    <member name="M:Devart.Common.SelectTableCollection.Add(System.String,System.String,System.String,System.String)">
      <summary>Adds a newly created <see cref="T:Devart.Common.SelectTable" /> object with the specified database, schema, name, and alias to the collection. </summary>
      <keywords>SelectTableCollection.Add method </keywords>
      <param name="database">The database, which the table belongs to. </param>
      <param name="schema">The schema, which the table belongs to. </param>
      <param name="name">The name of the table that the <see cref="T:Devart.Common.SelectTable" /> object should represent. </param>
      <param name="alias">The alias of the table. </param>
      <returns>The <see cref="T:Devart.Common.SelectTable" /> object created. </returns>
    </member>
    <member name="M:Devart.Common.SelectTableCollection.Add(System.String,System.String,System.String,System.String,System.Boolean)">
      <summary>Adds a newly created <see cref="T:Devart.Common.SelectTable" /> object with the specified database, schema, name, and alias to the collection. </summary>
      <keywords>SelectTableCollection.Add method </keywords>
      <param name="database">The database, which the table belongs to. </param>
      <param name="schema">The schema, which the table belongs to. </param>
      <param name="name">The name of the table that the <see cref="T:Devart.Common.SelectTable" /> object should represent. </param>
      <param name="alias">The alias of the table. </param>
      <param name="quote">Specifies if the table parameters should be quoted. </param>
      <returns>The <see cref="T:Devart.Common.SelectTable" /> object created. </returns>
    </member>
    <member name="M:Devart.Common.SelectTableCollection.Contains(Devart.Common.SelectTable)">
      <summary>Gets a value indicating whether a <see cref="T:Devart.Common.SelectTable" /> object exists in the collection. </summary>
      <keywords>SelectTableCollection.Contains method </keywords>
      <param name="value">The value of the <see cref="T:Devart.Common.SelectTable" /> object to find. </param>
      <returns>
        <see langword="true" /> if the collection contains the <see cref="T:Devart.Common.SelectTable" />; otherwise, <see langword="false" />. </returns>
    </member>
    <member name="M:Devart.Common.SelectTableCollection.CopyTo(Devart.Common.SelectTable[],System.Int32)">
      <summary>Copies <see cref="T:Devart.Common.SelectTable" /> objects from the <see cref="T:Devart.Common.SelectTableCollection" /> to the specified array. </summary>
      <keywords>SelectTableCollection.CopyTo method </keywords>
      <param name="array">The array into which to copy the <see cref="T:Devart.Common.SelectTable" /> objects. </param>
      <param name="index">The zero-based index of the array. </param>
    </member>
    <member name="M:Devart.Common.SelectTableCollection.IndexOf(Devart.Common.SelectTable)">
      <summary>Gets the location in the collection of the <see cref="T:Devart.Common.SelectTable" /> object. </summary>
      <keywords>SelectTableCollection.IndexOf method </keywords>
      <param name="value">The <see cref="T:Devart.Common.SelectTable" /> object to find. </param>
      <returns>The zero-based location of the <see cref="T:Devart.Common.SelectTable" /> in the collection. </returns>
    </member>
    <member name="M:Devart.Common.SelectTableCollection.Insert(System.Int32,Devart.Common.SelectTable)">
      <summary>Inserts a <see cref="T:Devart.Common.SelectTable" /> into the collection at the specified index. </summary>
      <keywords>SelectTableCollection.Insert method </keywords>
      <param name="index">The zero-based index where the table is to be inserted within the collection. </param>
      <param name="value">The <see cref="T:Devart.Common.SelectTable" /> to add to the collection. </param>
    </member>
    <member name="P:Devart.Common.SelectTableCollection.Item(System.Int32)">
      <summary>Gets or sets the <see cref="T:Devart.Common.SelectTable" /> at the specified index. </summary>
      <keywords>SelectTableCollection.Item property </keywords>
      <param name="index">The zero-based index of the table. </param>
      <value>The <see cref="T:Devart.Common.SelectTable" /> at the specified index. </value>
    </member>
    <member name="M:Devart.Common.SelectTableCollection.Remove(Devart.Common.SelectTable)">
      <summary>Removes the specified <see cref="T:Devart.Common.SelectTable" /> object from the collection. </summary>
      <keywords>SelectTableCollection.Remove method </keywords>
      <param name="value">The <see cref="T:Devart.Common.SelectTable" /> object to remove from the collection. </param>
    </member>
    <member name="N:Devart.Data.SQLite">
      <summary>This namespace contains classes with provider-specific functionality. </summary>
    </member>
    <member name="T:Devart.Data.SQLite.AutoVacuumMode">
      <summary>Determines the auto-vacuum flag in the database. </summary>
    </member>
    <member name="F:Devart.Data.SQLite.AutoVacuumMode.Full">
      <summary>The "freelist" pages are moved to the end of the file and the file is truncated to remove the freelist pages at every commit. </summary>
    </member>
    <member name="F:Devart.Data.SQLite.AutoVacuumMode.Incremental">
      <summary>A separate <b>incremental_vacuum</b> pragma must be invoked to cause the vacuum to occur. </summary>
    </member>
    <member name="F:Devart.Data.SQLite.AutoVacuumMode.None">
      <summary>Unused database file pages are added to a "freelist" are reused for subsequent inserts. The database file does not shrink. This is the default mode. </summary>
    </member>
    <member name="T:Devart.Data.SQLite.EncryptionMode">
      <summary>Determines whether the database is encrypted and kind of the database encryption. </summary>
    </member>
    <member name="F:Devart.Data.SQLite.EncryptionMode.CEROD">
      <summary>The SQLite database uses the CEROD encryption. The SQLite Compressed and Encrypted Read-Only Database (CEROD) Extension is an add-on to the public domain version of SQLite that allows an application to read compressed and encrypted database files in addition to ordinary SQLite database files. Password from the ConnectionString is used for the database. </summary>
    </member>
    <member name="F:Devart.Data.SQLite.EncryptionMode.None">
      <summary>The SQLite database is not encrypted. </summary>
    </member>
    <member name="F:Devart.Data.SQLite.EncryptionMode.SEE">
      <summary>The SQLite database uses the SEE encryption. The SQLite Encryption Extension (SEE) is an add-on to the public domain version of SQLite that allows an application to read and write encrypted database files. Password from the ConnectionString is used for the database. For more information about SEE see <a href="http://www.hwaci.com/sw/sqlite/see.html">the SQLite Encryption Extension web page</a>. </summary>
    </member>
    <member name="F:Devart.Data.SQLite.EncryptionMode.SQLCipher">
      <summary>The SQLite database uses the SQLCipher encryption. SQLCipher is an open source extension to SQLite that provides transparent 256-bit AES encryption of database files. Password from the ConnectionString is used for the database. For more information about SEE see <a href="https://www.zetetic.net/sqlcipher/">the SQLCipher web page</a>. </summary>
    </member>
    <member name="F:Devart.Data.SQLite.EncryptionMode.SQLiteCrypt">
      <summary>The SQLite database uses the SQLiteCrypt encryption. The SQLiteCrypt is an add-on to the public domain version of SQLite that adds transparent AES 256 encryption support for SQLite. In order to connect to such a database, you need to set the Password and SQLiteCrypt License Key connection string parameters. </summary>
    </member>
    <member name="T:Devart.Data.SQLite.JournalMode">
      <summary>Determines the journal mode for database. </summary>
    </member>
    <member name="F:Devart.Data.SQLite.JournalMode.Default">
      <summary>SQLite default Journal Mode is used. </summary>
    </member>
    <member name="F:Devart.Data.SQLite.JournalMode.Delete">
      <summary>In the Delete mode, the rollback journal is deleted at the conclusion of each transaction. </summary>
    </member>
    <member name="F:Devart.Data.SQLite.JournalMode.Memory">
      <summary>The MEMORY journaling mode stores the rollback journal in volatile RAM. It may be used to reduce disk I/O but that decreases database safety and integrity. If the application using SQLite crashes in the middle of a transaction in this mode, the database file may become corrupt. </summary>
    </member>
    <member name="F:Devart.Data.SQLite.JournalMode.Off">
      <summary>In this mode rollback journal is completely disabled. The ROLLBACK command does not work; it behaves in an undefined way. Don't use the ROLLBACK command in this mode. </summary>
    </member>
    <member name="F:Devart.Data.SQLite.JournalMode.Persist">
      <summary>In the Persist mode rollback journal file is not deleted when the transaction is commited. Its first block filled with zeroes to prevent other connections rolling back from this journal. May optimize performance on platforms where deleting or truncating a file is much more expensive than overwriting the first block of a file with zeros. </summary>
    </member>
    <member name="F:Devart.Data.SQLite.JournalMode.Truncate">
      <summary>In the Truncate mode rollback journal file is truncated instead of deleting when the transaction is commited. May be used for gaining better performance, because on many systems, truncating a file is much faster than deleting the file. </summary>
    </member>
    <member name="F:Devart.Data.SQLite.JournalMode.WAL">
      <summary>In the WAL mode, <a href="https://www.sqlite.org/wal.html">Write-Ahead Logging</a> is used instead of the standard rollback journal. This means that when database data is updated,  the original content is preserved in the database file, and the changes are appended into a separate WAL file and eventually are transferred to the database. </summary>
    </member>
    <member name="T:Devart.Data.SQLite.LockingMode">
      <summary>Determines whether the database is locked or not. </summary>
    </member>
    <member name="F:Devart.Data.SQLite.LockingMode.Exclusive">
      <summary>The database connection never releases file locks. The first time the database is read in exclusive mode, a shared lock is obtained and held. The first time the database is written, an exclusive lock is obtained and held. </summary>
    </member>
    <member name="F:Devart.Data.SQLite.LockingMode.Normal">
      <summary>The database connection unlocks the database file at the conclusion of each read or write transaction. This is the default behavior. </summary>
    </member>
    <member name="T:Devart.Data.SQLite.SQLiteAggregateFunction">
      <summary>Base class for user-defined aggregate functions. </summary>
    </member>
    <member name="M:Devart.Data.SQLite.SQLiteAggregateFunction.#ctor(System.String,System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:Devart.Data.SQLite.SQLiteAggregateFunction" /> class. </summary>
      <param name="name">User-defined function name to register. </param>
      <param name="argumentCount">Number of arguments, the user-defined function accepts. </param>
    </member>
    <member name="M:Devart.Data.SQLite.SQLiteAggregateFunction.Complete(Devart.Data.SQLite.SQLiteConnection,System.Object)">
      <summary>Should process the accumulated value after all records were processed. </summary>
      <keywords>SQLiteAggregateFunction.Complete method </keywords>
      <param name="connection">The connection to register the function in. </param>
      <param name="contextData">Data, that was accumulated in the <see cref="M:Devart.Data.SQLite.SQLiteAggregateFunction.Step(System.Object[],Devart.Data.SQLite.SQLiteConnection,System.Object@)" /> method calls. </param>
      <returns>The result of the user-defined function. </returns>
    </member>
    <member name="M:Devart.Data.SQLite.SQLiteAggregateFunction.Step(System.Object[],Devart.Data.SQLite.SQLiteConnection,System.Object@)">
      <summary>Should implement the way of acumulating and storing result. </summary>
      <keywords>SQLiteAggregateFunction.Step method </keywords>
      <param name="args">User-defined function arguments. </param>
      <param name="connection">The connection to register the function in. </param>
      <param name="contextData">This parameter for storing data between the iterations. You should explicitely initialize it when the Step is called for the first time. </param>
    </member>
    <member name="T:Devart.Data.SQLite.SQLiteAggregateFunction`1">
      <summary>Generic base class for user-defined aggregate functions without parameters. </summary>
      <typeparam name="TResult">Type of the user-defined function result. </typeparam>
    </member>
    <member name="M:Devart.Data.SQLite.SQLiteAggregateFunction`1.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:Devart.Data.SQLite.SQLiteAggregateFunction`1" /> class. </summary>
      <param name="name">User-defined function name to register. </param>
    </member>
    <member name="M:Devart.Data.SQLite.SQLiteAggregateFunction`1.Complete(Devart.Data.SQLite.SQLiteConnection,System.Object)">
      <summary>Should process the accumulated value after all records were processed. </summary>
      <keywords>SQLiteAggregateFunction`1.Complete method </keywords>
      <param name="connection">The connection to register the function in. </param>
      <param name="contextData">Data, that was accumulated in the <see cref="M:Devart.Data.SQLite.SQLiteAggregateFunction`1.Step(Devart.Data.SQLite.SQLiteConnection,TResult@)" /> method calls. </param>
      <returns>The result of the user-defined function. </returns>
    </member>
    <member name="M:Devart.Data.SQLite.SQLiteAggregateFunction`1.Complete(Devart.Data.SQLite.SQLiteConnection,`0)">
      <summary>Should process the accumulated value after all records were processed. </summary>
      <keywords>SQLiteAggregateFunction`1.Complete method </keywords>
      <param name="connection">The connection to register the function in. </param>
      <param name="contextData">Data, that was accumulated in the <see cref="M:Devart.Data.SQLite.SQLiteAggregateFunction`1.Step(Devart.Data.SQLite.SQLiteConnection,TResult@)" /> method calls. </param>
      <returns>The result of the user-defined function. </returns>
    </member>
    <member name="M:Devart.Data.SQLite.SQLiteAggregateFunction`1.Step(Devart.Data.SQLite.SQLiteConnection,TResult@)">
      <summary>Should implement the way of acumulating and storing result. </summary>
      <keywords>SQLiteAggregateFunction`1.Step method </keywords>
      <param name="connection">The connection to register the function in. </param>
      <param name="contextData">This parameter for storing data between the iterations. You should explicitely initialize it when the Step is called for the first time. </param>
    </member>
    <member name="M:Devart.Data.SQLite.SQLiteAggregateFunction`1.Step(System.Object[],Devart.Data.SQLite.SQLiteConnection,System.Object@)">
      <summary>Should implement the way of acumulating and storing result. </summary>
      <keywords>SQLiteAggregateFunction`1.Step method </keywords>
      <param name="args">User-defined function arguments. </param>
      <param name="connection">The connection to register the function in. </param>
      <param name="contextData">This parameter for storing data between the iterations. You should explicitely initialize it when the Step is called for the first time. </param>
    </member>
    <member name="T:Devart.Data.SQLite.SQLiteAggregateFunction`2">
      <summary>Generic base class for user-defined aggregate functions with one parameter. </summary>
      <typeparam name="T1">Type of the user-defined function parameter. </typeparam>
      <typeparam name="TResult">Type of the user-defined function result. </typeparam>
    </member>
    <member name="M:Devart.Data.SQLite.SQLiteAggregateFunction`2.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:Devart.Data.SQLite.SQLiteAggregateFunction`2" /> class. </summary>
      <param name="name">User-defined function name to register. </param>
    </member>
    <member name="M:Devart.Data.SQLite.SQLiteAggregateFunction`2.Complete(Devart.Data.SQLite.SQLiteConnection,System.Object)">
      <summary>Should process the accumulated value after all records were processed. </summary>
      <keywords>SQLiteAggregateFunction`2.Complete method </keywords>
      <param name="connection">The connection to register the function in. </param>
      <param name="contextData">Data, that was accumulated in the <see cref="M:Devart.Data.SQLite.SQLiteAggregateFunction`2.Step(`0,Devart.Data.SQLite.SQLiteConnection,TResult@)" /> method calls. </param>
      <returns>The result of the user-defined function. </returns>
    </member>
    <member name="M:Devart.Data.SQLite.SQLiteAggregateFunction`2.Complete(Devart.Data.SQLite.SQLiteConnection,`1)">
      <summary>Should process the accumulated value after all records were processed. </summary>
      <keywords>SQLiteAggregateFunction`2.Complete method </keywords>
      <param name="connection">The connection to register the function in. </param>
      <param name="contextData">Data, that was accumulated in the <see cref="M:Devart.Data.SQLite.SQLiteAggregateFunction`2.Step(`0,Devart.Data.SQLite.SQLiteConnection,TResult@)" /> method calls. </param>
      <returns>The result of the user-defined function. </returns>
    </member>
    <member name="M:Devart.Data.SQLite.SQLiteAggregateFunction`2.Step(System.Object[],Devart.Data.SQLite.SQLiteConnection,System.Object@)">
      <summary>Should implement the way of acumulating and storing result. </summary>
      <keywords>SQLiteAggregateFunction`2.Step method </keywords>
      <param name="args">User-defined function arguments. </param>
      <param name="connection">The connection to register the function in. </param>
      <param name="contextData">This parameter for storing data between the iterations. You should explicitely initialize it when the Step is called for the first time. </param>
    </member>
    <member name="M:Devart.Data.SQLite.SQLiteAggregateFunction`2.Step(`0,Devart.Data.SQLite.SQLiteConnection,TResult@)">
      <summary>Should implement the way of acumulating and storing result. </summary>
      <keywords>SQLiteAggregateFunction`2.Step method </keywords>
      <param name="arg1">User-defined function parameter value. </param>
      <param name="connection">The connection to register the function in. </param>
      <param name="contextData">This parameter for storing data between the iterations. You should explicitely initialize it when the Step is called for the first time. </param>
    </member>
    <member name="T:Devart.Data.SQLite.SQLiteAggregateFunction`3">
      <summary>Generic base class for user-defined aggregate functions with two parameters. </summary>
      <typeparam name="T1">Type of the first user-defined function parameter. </typeparam>
      <typeparam name="T2">Type of the second user-defined function parameter. </typeparam>
      <typeparam name="TResult">Type of the user-defined function result. </typeparam>
    </member>
    <member name="M:Devart.Data.SQLite.SQLiteAggregateFunction`3.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:Devart.Data.SQLite.SQLiteAggregateFunction`3" /> class. </summary>
      <param name="name">User-defined function name to register. </param>
    </member>
    <member name="M:Devart.Data.SQLite.SQLiteAggregateFunction`3.Complete(Devart.Data.SQLite.SQLiteConnection,System.Object)">
      <summary>Should process the accumulated value after all records were processed. </summary>
      <keywords>SQLiteAggregateFunction`3.Complete method </keywords>
      <param name="connection">The connection to register the function in. </param>
      <param name="contextData">Data, that was accumulated in the <see cref="M:Devart.Data.SQLite.SQLiteAggregateFunction`3.Step(`0,`1,Devart.Data.SQLite.SQLiteConnection,TResult@)" /> method calls. </param>
      <returns>The result of the user-defined function. </returns>
    </member>
    <member name="M:Devart.Data.SQLite.SQLiteAggregateFunction`3.Complete(Devart.Data.SQLite.SQLiteConnection,`2)">
      <summary>Should process the accumulated value after all records were processed. </summary>
      <keywords>SQLiteAggregateFunction`3.Complete method </keywords>
      <param name="connection">The connection to register the function in. </param>
      <param name="contextData">Data, that was accumulated in the <see cref="M:Devart.Data.SQLite.SQLiteAggregateFunction`3.Step(`0,`1,Devart.Data.SQLite.SQLiteConnection,TResult@)" /> method calls. </param>
      <returns>The result of the user-defined function. </returns>
    </member>
    <member name="M:Devart.Data.SQLite.SQLiteAggregateFunction`3.Step(System.Object[],Devart.Data.SQLite.SQLiteConnection,System.Object@)">
      <summary>Should implement the way of acumulating and storing result. </summary>
      <keywords>SQLiteAggregateFunction`3.Step method </keywords>
      <param name="args">User-defined function arguments. </param>
      <param name="connection">The connection to register the function in. </param>
      <param name="contextData">This parameter for storing data between the iterations. You should explicitely initialize it when the Step is called for the first time. </param>
    </member>
    <member name="M:Devart.Data.SQLite.SQLiteAggregateFunction`3.Step(`0,`1,Devart.Data.SQLite.SQLiteConnection,TResult@)">
      <summary>Should implement the way of acumulating and storing result. </summary>
      <keywords>SQLiteAggregateFunction`3.Step method </keywords>
      <param name="arg1">Value of the first user-defined function parameter. </param>
      <param name="arg2">Value of the second user-defined function parameter. </param>
      <param name="connection">The connection to register the function in. </param>
      <param name="contextData">This parameter for storing data between the iterations. You should explicitely initialize it when the Step is called for the first time. </param>
    </member>
    <member name="T:Devart.Data.SQLite.SQLiteAggregateFunction`4">
      <summary>Generic base class for user-defined aggregate functions with three parameters. </summary>
      <typeparam name="T1">Type of the first user-defined function parameter. </typeparam>
      <typeparam name="T2">Type of the second user-defined function parameter. </typeparam>
      <typeparam name="T3">Type of the third user-defined function parameter. </typeparam>
      <typeparam name="TResult">Type of the user-defined function result. </typeparam>
    </member>
    <member name="M:Devart.Data.SQLite.SQLiteAggregateFunction`4.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:Devart.Data.SQLite.SQLiteAggregateFunction`4" /> class. </summary>
      <param name="name">User-defined function name to register. </param>
    </member>
    <member name="M:Devart.Data.SQLite.SQLiteAggregateFunction`4.Complete(Devart.Data.SQLite.SQLiteConnection,System.Object)">
      <summary>Should process the accumulated value after all records were processed. </summary>
      <keywords>SQLiteAggregateFunction`4.Complete method </keywords>
      <param name="connection">The connection to register the function in. </param>
      <param name="contextData">Data, that was accumulated in the <see cref="M:Devart.Data.SQLite.SQLiteAggregateFunction`4.Step(`0,`1,`2,Devart.Data.SQLite.SQLiteConnection,TResult@)" /> method calls. </param>
      <returns>The result of the user-defined function. </returns>
    </member>
    <member name="M:Devart.Data.SQLite.SQLiteAggregateFunction`4.Complete(Devart.Data.SQLite.SQLiteConnection,`3)">
      <summary>Should process the accumulated value after all records were processed. </summary>
      <keywords>SQLiteAggregateFunction`4.Complete method </keywords>
      <param name="connection">The connection to register the function in. </param>
      <param name="contextData">Data, that was accumulated in the <see cref="M:Devart.Data.SQLite.SQLiteAggregateFunction`4.Step(`0,`1,`2,Devart.Data.SQLite.SQLiteConnection,TResult@)" /> method calls. </param>
      <returns>The result of the user-defined function. </returns>
    </member>
    <member name="M:Devart.Data.SQLite.SQLiteAggregateFunction`4.Step(System.Object[],Devart.Data.SQLite.SQLiteConnection,System.Object@)">
      <summary>Should implement the way of acumulating and storing result. </summary>
      <keywords>SQLiteAggregateFunction`4.Step method </keywords>
      <param name="args">User-defined function arguments. </param>
      <param name="connection">The connection to register the function in. </param>
      <param name="contextData">This parameter for storing data between the iterations. You should explicitely initialize it when the Step is called for the first time. </param>
    </member>
    <member name="M:Devart.Data.SQLite.SQLiteAggregateFunction`4.Step(`0,`1,`2,Devart.Data.SQLite.SQLiteConnection,TResult@)">
      <summary>Should implement the way of acumulating and storing result. </summary>
      <keywords>SQLiteAggregateFunction`4.Step method </keywords>
      <param name="arg1">Value of the first user-defined function parameter. </param>
      <param name="arg2">Value of the second user-defined function parameter. </param>
      <param name="arg3">Value of the third user-defined function parameter. </param>
      <param name="connection">The connection to register the function in. </param>
      <param name="contextData">This parameter for storing data between the iterations. You should explicitely initialize it when the Step is called for the first time. </param>
    </member>
    <member name="T:Devart.Data.SQLite.SQLiteAggregateFunction`5">
      <summary>Generic base class for user-defined aggregate functions with four parameters. </summary>
      <typeparam name="T1">Type of the first user-defined function parameter. </typeparam>
      <typeparam name="T2">Type of the second user-defined function parameter. </typeparam>
      <typeparam name="T3">Type of third the user-defined function parameter. </typeparam>
      <typeparam name="T4">Type of the fourth user-defined function parameter. </typeparam>
      <typeparam name="TResult">Type of the user-defined function result. </typeparam>
    </member>
    <member name="M:Devart.Data.SQLite.SQLiteAggregateFunction`5.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:Devart.Data.SQLite.SQLiteAggregateFunction`5" /> class. </summary>
      <param name="name">User-defined function name to register. </param>
    </member>
    <member name="M:Devart.Data.SQLite.SQLiteAggregateFunction`5.Complete(Devart.Data.SQLite.SQLiteConnection,System.Object)">
      <summary>Should process the accumulated value after all records were processed. </summary>
      <keywords>SQLiteAggregateFunction`5.Complete method </keywords>
      <param name="connection">The connection to register the function in. </param>
      <param name="contextData">Data, that was accumulated in the <see cref="M:Devart.Data.SQLite.SQLiteAggregateFunction`5.Step(`0,`1,`2,`3,Devart.Data.SQLite.SQLiteConnection,TResult@)" /> method calls. </param>
      <returns>The result of the user-defined function. </returns>
    </member>
    <member name="M:Devart.Data.SQLite.SQLiteAggregateFunction`5.Complete(Devart.Data.SQLite.SQLiteConnection,`4)">
      <summary>Should process the accumulated value after all records were processed. </summary>
      <keywords>SQLiteAggregateFunction`5.Complete method </keywords>
      <param name="connection">The connection to register the function in. </param>
      <param name="contextData">Data, that was accumulated in the <see cref="M:Devart.Data.SQLite.SQLiteAggregateFunction`5.Step(`0,`1,`2,`3,Devart.Data.SQLite.SQLiteConnection,TResult@)" /> method calls. </param>
      <returns>The result of the user-defined function. </returns>
    </member>
    <member name="M:Devart.Data.SQLite.SQLiteAggregateFunction`5.Step(System.Object[],Devart.Data.SQLite.SQLiteConnection,System.Object@)">
      <summary>Should implement the way of acumulating and storing result. </summary>
      <keywords>SQLiteAggregateFunction`5.Step method </keywords>
      <param name="args">User-defined function arguments. </param>
      <param name="connection">The connection to register the function in. </param>
      <param name="contextData">This parameter for storing data between the iterations. You should explicitely initialize it when the Step is called for the first time. </param>
    </member>
    <member name="M:Devart.Data.SQLite.SQLiteAggregateFunction`5.Step(`0,`1,`2,`3,Devart.Data.SQLite.SQLiteConnection,TResult@)">
      <summary>Should implement the way of acumulating and storing result. </summary>
      <keywords>SQLiteAggregateFunction`5.Step method </keywords>
      <param name="arg1">Value of the first user-defined function parameter. </param>
      <param name="arg2">Value of the second user-defined function parameter. </param>
      <param name="arg3">Value of the third user-defined function parameter. </param>
      <param name="arg4">Value of the fourth user-defined function parameter. </param>
      <param name="connection">The connection to register the function in. </param>
      <param name="contextData">This parameter for storing data between the iterations. You should explicitely initialize it when the Step is called for the first time. </param>
    </member>
    <member name="T:Devart.Data.SQLite.SQLiteBlob">
      <summary>Represents a variable-length stream of binary data to be stored in or retrieved from a database. </summary>
    </member>
    <member name="M:Devart.Data.SQLite.SQLiteBlob.#ctor()">
      <summary>Initializes a new instance of the <see cref="T:Devart.Data.SQLite.SQLiteBlob" /> class. </summary>
      <overloads>Initializes a new instance of the <see cref="T:Devart.Data.SQLite.SQLiteBlob" /> class. </overloads>
    </member>
    <member name="M:Devart.Data.SQLite.SQLiteBlob.#ctor(System.Byte[])">
      <summary>Initializes a new instance of the <see cref="T:Devart.Data.SQLite.SQLiteBlob" /> class, setting the <see cref="P:Devart.Data.SQLite.SQLiteBlob.Value" /> property to the provided array of bytes. </summary>
      <param name="value">The byte array to be stored in the <see cref="P:Devart.Data.SQLite.SQLiteBlob.Value" /> property. </param>
    </member>
    <member name="P:Devart.Data.SQLite.SQLiteBlob.CanRead">
      <summary>Gets a value indicating whether the SQLiteBlob stream can be read. </summary>
      <keywords>SQLiteBlob.CanRead property </keywords>
      <value><see langword="true" /> if the <see cref="T:Devart.Data.SQLite.SQLiteBlob" /> stream supports reading; <see langword="false" /> if a <see cref="T:Devart.Data.SQLite.SQLiteBlob" /> is closed, disposed, or <see cref="F:Devart.Data.SQLite.SQLiteBlob.Null" />. </value>
    </member>
    <member name="P:Devart.Data.SQLite.SQLiteBlob.CanSeek">
      <summary>Gets a value indicating whether forward and backward seek operations can be performed. </summary>
      <keywords>SQLiteBlob.CanSeek property </keywords>
      <value>
        <see langword="true" /> if the <see cref="T:Devart.Data.SQLite.SQLiteBlob" /> stream supports seeking; <see langword="false" /> if a <see cref="T:Devart.Data.SQLite.SQLiteBlob" /> is closed, disposed, or <see cref="F:Devart.Data.SQLite.SQLiteBlob.Null" />. </value>
    </member>
    <member name="P:Devart.Data.SQLite.SQLiteBlob.CanWrite">
      <summary>Gets a value indicating whether the SQLiteBlob object supports writing. </summary>
      <keywords>SQLiteBlob.CanWrite property </keywords>
      <value>
        <see langword="true" /> if the <see cref="T:Devart.Data.SQLite.SQLiteBlob" /> stream can be written; <see langword="false" /> if a <see cref="T:Devart.Data.SQLite.SQLiteBlob" /> is closed, disposed or <see cref="F:Devart.Data.SQLite.SQLiteBlob.Null" />. </value>
    </member>
    <member name="M:Devart.Data.SQLite.SQLiteBlob.Clone()">
      <summary>Creates a copy of the current <see cref="T:Devart.Data.SQLite.SQLiteBlob" /> object. </summary>
      <keywords>SQLiteBlob.Clone method </keywords>
      <returns>A new <see cref="T:Devart.Data.SQLite.SQLiteBlob" /> object. </returns>
    </member>
    <member name="M:Devart.Data.SQLite.SQLiteBlob.Close()">
      <summary>Closes the current stream and releases any resources associated with it. </summary>
      <keywords>SQLiteBlob.Close method </keywords>
    </member>
    <member name="M:Devart.Data.SQLite.SQLiteBlob.Dispose()">
      <summary>Releases all resources allocated by this object. </summary>
      <keywords>SQLiteBlob.Dispose method </keywords>
      <overloads>Releases all resources allocated by this object. </overloads>
    </member>
    <member name="M:Devart.Data.SQLite.SQLiteBlob.Flush()">
      <summary>Flush/write all buffers for the current <see cref="T:Devart.Data.SQLite.SQLiteBlob" />. </summary>
      <keywords>SQLiteBlob.Flush method </keywords>
    </member>
    <member name="P:Devart.Data.SQLite.SQLiteBlob.IsEmpty">
      <summary>Gets a value indicating whether the <see cref="T:Devart.Data.SQLite.SQLiteBlob" /> is empty or not. </summary>
      <keywords>SQLiteBlob.IsEmpty property </keywords>
      <value>
        <see langword="true" /> if the <see cref="T:Devart.Data.SQLite.SQLiteBlob" /> is empty; otherwise, <see langword="false" />. </value>
    </member>
    <member name="P:Devart.Data.SQLite.SQLiteBlob.IsNull">
      <summary>Gets a value indicating whether the <see cref="T:Devart.Data.SQLite.SQLiteBlob" /> is a <see cref="F:Devart.Data.SQLite.SQLiteBlob.Null" /> stream. </summary>
      <keywords>SQLiteBlob.IsNull property </keywords>
      <value>
        <see langword="true" />, if the <see cref="T:Devart.Data.SQLite.SQLiteBlob" /> is a <see cref="F:Devart.Data.SQLite.SQLiteBlob.Null" />; otherwise, <see langword="false" />. </value>
    </member>
    <member name="P:Devart.Data.SQLite.SQLiteBlob.Length">
      <summary>Gets the size of the <see cref="T:Devart.Data.SQLite.SQLiteBlob" />. </summary>
      <keywords>SQLiteBlob.Length property </keywords>
      <value>The size of the <see cref="T:Devart.Data.SQLite.SQLiteBlob" /> in bytes. </value>
    </member>
    <member name="F:Devart.Data.SQLite.SQLiteBlob.Null">
      <summary>Represents a null <see cref="T:Devart.Data.SQLite.SQLiteBlob" /> object. </summary>
      <keywords>SQLiteBlob.Null field </keywords>
    </member>
    <member name="P:Devart.Data.SQLite.SQLiteBlob.Position">
      <summary>Gets the current read position in the <see cref="T:Devart.Data.SQLite.SQLiteBlob" /> stream. </summary>
      <keywords>SQLiteBlob.Position property </keywords>
      <value>The current position within the <see cref="T:Devart.Data.SQLite.SQLiteBlob" /> stream. </value>
    </member>
    <member name="M:Devart.Data.SQLite.SQLiteBlob.Read(System.Byte[],System.Int32,System.Int32)">
      <summary>Reads a sequence of bytes from the current <see cref="T:Devart.Data.SQLite.SQLiteBlob" /> stream and advances the position within the stream by the number of bytes read. </summary>
      <keywords>SQLiteBlob.Read method </keywords>
      <param name="buffer">The byte array buffer to be populated. </param>
      <param name="offset">The zero-based byte offset in the buffer. </param>
      <param name="count">The amount of bytes to read. </param>
      <returns>The total number of bytes read into the buffer. </returns>
    </member>
    <member name="M:Devart.Data.SQLite.SQLiteBlob.Seek(System.Int64,System.IO.SeekOrigin)">
      <summary>Sets the position on the current <see cref="T:Devart.Data.SQLite.SQLiteBlob" /> stream. </summary>
      <keywords>SQLiteBlob.Seek method </keywords>
      <param name="offset">A byte offset relative to origin. </param>
      <param name="origin">A value of <see cref="T:System.IO.SeekOrigin" /> type indicating the reference point used to obtain the new position. </param>
      <returns>The new position within the current stream. </returns>
    </member>
    <member name="M:Devart.Data.SQLite.SQLiteBlob.SetLength(System.Int64)">
      <summary>Sets length for <see cref="T:Devart.Data.SQLite.SQLiteBlob" /> value. </summary>
      <keywords>SQLiteBlob.SetLength method </keywords>
      <param name="len">The size of the <see cref="T:Devart.Data.SQLite.SQLiteBlob" /> in bytes. </param>
    </member>
    <member name="M:Devart.Data.SQLite.SQLiteBlob.ToString()">
      <summary>Converts the current <see cref="T:Devart.Data.SQLite.SQLiteBlob" /> object to a <see cref="T:System.String" />. </summary>
      <keywords>SQLiteBlob.ToString method </keywords>
      <returns>A <see cref="T:System.String" /> with the same value as the <see cref="T:Devart.Data.SQLite.SQLiteBlob" />. </returns>
    </member>
    <member name="P:Devart.Data.SQLite.SQLiteBlob.Value">
      <summary>Gets the value of the <see cref="T:Devart.Data.SQLite.SQLiteBlob" /> object. </summary>
      <keywords>SQLiteBlob.Value property </keywords>
      <value>The value of the <see cref="T:Devart.Data.SQLite.SQLiteBlob" /> object. </value>
    </member>
    <member name="M:Devart.Data.SQLite.SQLiteBlob.Write(System.Byte[],System.Int32,System.Int32)">
      <summary>Writes a sequence of bytes to the current <see cref="T:Devart.Data.SQLite.SQLiteBlob" /> stream, and advances the current position within this stream by the number of bytes written. </summary>
      <keywords>SQLiteBlob.Write method </keywords>
      <param name="buffer">An array of bytes. </param>
      <param name="offset">The zero-based byte offset in the buffer. </param>
      <param name="count">The amount of bytes to be written to the current stream. </param>
    </member>
    <member name="T:Devart.Data.SQLite.SQLiteCollationFunction">
      <summary>Base class for user-defined collation functions. </summary>
    </member>
    <member name="M:Devart.Data.SQLite.SQLiteCollationFunction.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:Devart.Data.SQLite.SQLiteCollationFunction" /> class. </summary>
      <param name="name">User-defined function name to register. </param>
    </member>
    <member name="M:Devart.Data.SQLite.SQLiteCollationFunction.Compare(System.String,System.String,Devart.Data.SQLite.SQLiteConnection)">
      <summary>Should implemet the comparison operation. </summary>
      <keywords>SQLiteCollationFunction.Compare method </keywords>
      <param name="param1">First string to compare. </param>
      <param name="param2">Second string to compare. </param>
      <param name="connection">The connection to register the function in. </param>
      <returns>Signed 32 bit integer value. If less than zero, param1 is less than param2. If equals zero, param1 equals param2. If greater than zero, param1 is greater than param2. </returns>
    </member>
    <member name="T:Devart.Data.SQLite.SQLiteCommand">
      <summary>Represents a SQL statement  to execute against SQLite. </summary>
    </member>
    <member name="M:Devart.Data.SQLite.SQLiteCommand.#ctor()">
      <summary>Initializes a new instance of the <see cref="T:Devart.Data.SQLite.SQLiteCommand" /> class. </summary>
      <overloads>Initializes a new instance of the <see cref="T:Devart.Data.SQLite.SQLiteCommand" /> class. </overloads>
    </member>
    <member name="M:Devart.Data.SQLite.SQLiteCommand.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:Devart.Data.SQLite.SQLiteCommand" /> class with the text of the query. </summary>
      <param name="commandText">The text of the query. </param>
    </member>
    <member name="M:Devart.Data.SQLite.SQLiteCommand.#ctor(System.String,Devart.Data.SQLite.SQLiteConnection)">
      <summary>Initializes a new instance of the <see cref="T:Devart.Data.SQLite.SQLiteCommand" /> class with the text of the query and a <see ref="T:Devart.Data.SQLite.SQLiteConnection" /> object. </summary>
      <param name="commandText">The text of the query. </param>
      <param name="connection">A <see cref="T:Devart.Data.SQLite.SQLiteConnection" /> object that represents the connection to SQLite. </param>
    </member>
    <member name="M:Devart.Data.SQLite.SQLiteCommand.#ctor(System.String,Devart.Data.SQLite.SQLiteConnection,Devart.Data.SQLite.SQLiteTransaction)">
      <summary>Initializes a new instance of the <see cref="T:Devart.Data.SQLite.SQLiteCommand" /> class with the text of the query, a <see ref="T:Devart.Data.SQLite.SQLiteConnection" /> object,  and the <see cref="T:Devart.Data.SQLite.SQLiteTransaction" />. </summary>
      <param name="commandText">The text of the query. </param>
      <param name="connection">A <see cref="T:Devart.Data.SQLite.SQLiteConnection" /> object that represents the connection to SQLite. </param>
      <param name="transaction">
        <see cref="T:Devart.Data.SQLite.SQLiteTransaction" /> object used to perform transactions with this <see cref="T:Devart.Data.SQLite.SQLiteCommand" /> object. </param>
    </member>
    <member name="M:Devart.Data.SQLite.SQLiteCommand.#ctor(System.String,Devart.Data.SQLite.SQLiteTransaction)">
      <summary>Initializes a new instance of the <see cref="T:Devart.Data.SQLite.SQLiteCommand" /> class with the text of the query, and the <see cref="T:Devart.Data.SQLite.SQLiteTransaction" /> object. </summary>
      <param name="commandText">The text of the query. </param>
      <param name="transaction">
        <see cref="T:Devart.Data.SQLite.SQLiteTransaction" /> object used to perform transactions with this <see cref="T:Devart.Data.SQLite.SQLiteCommand" /> object. </param>
    </member>
    <member name="M:Devart.Data.SQLite.SQLiteCommand.Cancel()">
      <summary>Stops execution of <see cref="T:Devart.Data.SQLite.SQLiteCommand" /> methods. </summary>
      <keywords>SQLiteCommand.Cancel method </keywords>
    </member>
    <member name="M:Devart.Data.SQLite.SQLiteCommand.Clone()">
      <summary>Creates a new object that is a copy of the current <see cref="T:Devart.Data.SQLite.SQLiteCommand" /> instance. </summary>
      <keywords>SQLiteCommand.Clone method </keywords>
      <returns>A new <see cref="T:Devart.Data.SQLite.SQLiteCommand" /> object in which all property values are the same as the original. </returns>
    </member>
    <member name="P:Devart.Data.SQLite.SQLiteCommand.CommandText">
      <summary>Gets or sets the SQL statement to execute against SQLite. </summary>
      <keywords>SQLiteCommand.CommandText property </keywords>
      <value>The SQL statement  to execute. The default value is an empty string (""). </value>
    </member>
    <member name="P:Devart.Data.SQLite.SQLiteCommand.CommandTimeout">
      <summary>Gets or sets the wait time before terminating an attempt to execute a command and generating an error. Note that it is the time to wait for any server reply since the command was sent to a server, and it doesn't include the time necessary to fetch data if the command selects some data. </summary>
      <keywords>SQLiteCommand.CommandTimeout property </keywords>
      <value>The time (in seconds) to wait for the command to execute. The default value is 30. </value>
    </member>
    <member name="P:Devart.Data.SQLite.SQLiteCommand.CommandType">
      <summary>Gets or sets a value indicating how the <see cref="P:Devart.Data.SQLite.SQLiteCommand.CommandText" /> property is to be interpreted. </summary>
      <keywords>SQLiteCommand.CommandType property </keywords>
      <value>One of the <see cref="T:System.Data.CommandType" /> values. The default value is <see cref="T:System.Data.CommandType.Text" />. </value>
    </member>
    <member name="P:Devart.Data.SQLite.SQLiteCommand.Connection">
      <summary>Gets or sets the <see cref="T:Devart.Data.SQLite.SQLiteConnection" /> used by this instance of the <see cref="T:Devart.Data.SQLite.SQLiteCommand" />. </summary>
      <keywords>SQLiteCommand.Connection property </keywords>
      <value>The connection to a data source. The default value is a null reference. </value>
    </member>
    <member name="M:Devart.Data.SQLite.SQLiteCommand.CreateParameter()">
      <summary>Creates a new instance of a <see cref="T:Devart.Data.SQLite.SQLiteParameter" /> object. </summary>
      <keywords>SQLiteCommand.CreateParameter method </keywords>
      <returns>A <see cref="T:Devart.Data.SQLite.SQLiteParameter" /> object. </returns>
      <overloads>Creates a new instance of a <see cref="T:Devart.Data.SQLite.SQLiteParameter" /> object. </overloads>
    </member>
    <member name="M:Devart.Data.SQLite.SQLiteCommand.EndExecuteReader(System.IAsyncResult)">
      <summary>Ends an asynchronous invocation of the <see cref="M:Devart.Data.SQLite.SQLiteCommand.ExecuteReader" /> method. </summary>
      <keywords>SQLiteCommand.EndExecuteReader method </keywords>
      <param name="result">The <see cref="T:System.IAsyncResult" /> returned from <see cref="M:Devart.Common.DbCommandBase.BeginExecuteReader" />. </param>
      <returns>A <see cref="T:Devart.Data.SQLite.SQLiteDataReader" /> object. </returns>
      <overloads>Ends an asynchronous invocation of the <see cref="M:Devart.Data.SQLite.SQLiteCommand.ExecuteReader" /> method. </overloads>
    </member>
    <member name="M:Devart.Data.SQLite.SQLiteCommand.ExecutePageReader(System.Data.CommandBehavior,System.Int32,System.Int32)">
      <summary>Returns a specific subset of rows when paging through the results of a query. </summary>
      <keywords>SQLiteCommand.ExecutePageReader method </keywords>
      <param name="behavior">One of the <see cref="T:System.Data.CommandBehavior" /> values. </param>
      <param name="startRecord"> </param>
      <param name="maxRecords"> </param>
      <returns>A <see cref="T:Devart.Data.SQLite.SQLiteDataReader" /> object. </returns>
      <overloads>Returns a specific subset of rows when paging through the results of a query. </overloads>
    </member>
    <member name="M:Devart.Data.SQLite.SQLiteCommand.ExecuteReader()">
      <summary>Sends the <see cref="P:Devart.Data.SQLite.SQLiteCommand.CommandText" /> to the <see cref="P:Devart.Data.SQLite.SQLiteCommand.Connection" /> and builds a <see cref="T:Devart.Data.SQLite.SQLiteDataReader" />. </summary>
      <keywords>SQLiteCommand.ExecuteReader method </keywords>
      <returns>A <see cref="T:Devart.Data.SQLite.SQLiteDataReader" /> object. </returns>
      <overloads>Sends the <see cref="P:Devart.Data.SQLite.SQLiteCommand.CommandText" /> to the <see cref="P:Devart.Data.SQLite.SQLiteCommand.Connection" /> and builds a <see cref="T:Devart.Data.SQLite.SQLiteDataReader" />. </overloads>
    </member>
    <member name="M:Devart.Data.SQLite.SQLiteCommand.ExecuteReader(System.Data.CommandBehavior)">
      <summary>Sends the <see cref="P:Devart.Data.SQLite.SQLiteCommand.CommandText" /> to the <see cref="P:Devart.Data.SQLite.SQLiteCommand.Connection" />, and builds a <see cref="T:Devart.Data.SQLite.SQLiteDataReader" /> using one of the <see cref="T:System.Data.CommandBehavior" /> values. </summary>
      <keywords>SQLiteCommand.ExecuteReader method </keywords>
      <param name="behavior">One of the <see cref="T:System.Data.CommandBehavior" /> values. </param>
      <returns>A <see cref="T:Devart.Data.SQLite.SQLiteDataReader" /> object. </returns>
    </member>
    <member name="P:Devart.Data.SQLite.SQLiteCommand.InsertID">
      <summary>Returns the rowid of the most recent successful INSERT into the database. </summary>
      <keywords>SQLiteCommand.InsertID property </keywords>
      <value>The last generated rowid. </value>
    </member>
    <member name="P:Devart.Data.SQLite.SQLiteCommand.Parameters">
      <summary>Gets or sets the <see cref="T:Devart.Data.SQLite.SQLiteParameterCollection" />. </summary>
      <keywords>SQLiteCommand.Parameters property </keywords>
      <value>The parameters of a SQL statement. The default value is an empty collection. </value>
    </member>
    <member name="M:Devart.Data.SQLite.SQLiteCommand.Prepare()">
      <summary>Creates a prepared (or compiled) version of the command on the server. </summary>
      <keywords>SQLiteCommand.Prepare method </keywords>
    </member>
    <member name="P:Devart.Data.SQLite.SQLiteCommand.UpdatedRowSource">
      <summary>Gets or sets how command results are applied to the <see cref="T:System.Data.DataRow" /> when used by the <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> method of the <see cref="T:System.Data.Common.DbDataAdapter" />. </summary>
      <keywords>SQLiteCommand.UpdatedRowSource property </keywords>
      <value>One of the <see cref="T:System.Data.UpdateRowSource" /> values. </value>
    </member>
    <member name="T:Devart.Data.SQLite.SQLiteCommandBuilder">
      <summary>Automatically generates single-table commands used to reconcile changes made to a <see cref="T:System.Data.DataSet" /> with the SQLite. </summary>
    </member>
    <member name="M:Devart.Data.SQLite.SQLiteCommandBuilder.#ctor()">
      <summary>Initializes a new instance of the <see cref="T:Devart.Data.SQLite.SQLiteCommandBuilder" /> class. </summary>
      <overloads>Initializes a new instance of the <see cref="T:Devart.Data.SQLite.SQLiteCommandBuilder" /> class. </overloads>
    </member>
    <member name="M:Devart.Data.SQLite.SQLiteCommandBuilder.#ctor(Devart.Data.SQLite.SQLiteDataAdapter)">
      <summary>Initializes a new instance of the <see cref="T:Devart.Data.SQLite.SQLiteCommandBuilder" /> class with the associated <see cref="T:Devart.Data.SQLite.SQLiteDataAdapter" /> object. </summary>
      <param name="adapter"> </param>
    </member>
    <member name="P:Devart.Data.SQLite.SQLiteCommandBuilder.DataAdapter">
      <summary>Gets or sets a <see cref="T:Devart.Data.SQLite.SQLiteDataAdapter" /> object for which this <see cref="T:Devart.Data.SQLite.SQLiteCommandBuilder" /> object will generate SQL statements. </summary>
      <keywords>SQLiteCommandBuilder.DataAdapter property </keywords>
      <value>A <see cref="T:Devart.Data.SQLite.SQLiteDataAdapter" /> object that is associated with this <see cref="T:Devart.Data.SQLite.SQLiteCommandBuilder" />. </value>
    </member>
    <member name="M:Devart.Data.SQLite.SQLiteCommandBuilder.DeriveParameters(Devart.Data.SQLite.SQLiteCommand)">
      <summary>Populates the specified <see cref="T:Devart.Data.SQLite.SQLiteCommand" /> object's <see cref="P:Devart.Data.SQLite.SQLiteCommand.Parameters" /> collection with parameter information for the SQL statement specified in the <see cref="P:Devart.Data.SQLite.SQLiteCommand.CommandText" />. </summary>
      <keywords>SQLiteCommandBuilder.DeriveParameters method </keywords>
      <param name="command">The <see cref="T:Devart.Data.SQLite.SQLiteCommand" /> referencing the SQL statement for which the parameter information is to be derived. The derived parameters will be populated into the <see cref="P:Devart.Data.SQLite.SQLiteCommand.Parameters" /> collection of this command. </param>
    </member>
    <member name="M:Devart.Data.SQLite.SQLiteCommandBuilder.GetDeleteCommand()">
      <summary>Gets the automatically generated SQL statement required to perform deletions on the data source when an application calls <see cref="M:System.Data.Common.DbDataAdapter.Update()" /> on the <see cref="T:Devart.Data.SQLite.SQLiteDataAdapter" />. </summary>
      <keywords>SQLiteCommandBuilder.GetDeleteCommand method </keywords>
      <returns>The text of the SQL statement to be executed. </returns>
      <overloads>Gets the automatically generated SQL statement required to perform deletions on the data source. </overloads>
    </member>
    <member name="M:Devart.Data.SQLite.SQLiteCommandBuilder.GetDeleteCommand(System.Boolean)">
      <summary>Gets the automatically generated SQL statement required to perform deletions on the data source when an application calls <see cref="M:System.Data.Common.DbDataAdapter.Update()" /> on the <see cref="T:Devart.Data.SQLite.SQLiteDataAdapter" />. </summary>
      <keywords>SQLiteCommandBuilder.GetDeleteCommand method </keywords>
      <param name="useColumnsForParameterNames">Determines whether names of parameters in command text will be based on columns' names. </param>
      <returns>The text of the SQL statement to be executed. </returns>
    </member>
    <member name="M:Devart.Data.SQLite.SQLiteCommandBuilder.GetInsertCommand()">
      <summary>Gets the automatically generated SQL statement required to perform inserts on the data source when an application calls <see cref="M:System.Data.Common.DbDataAdapter.Update()" /> on the <see cref="T:Devart.Data.SQLite.SQLiteDataAdapter" />. </summary>
      <keywords>SQLiteCommandBuilder.GetInsertCommand method </keywords>
      <returns>The text of the SQL statement to be executed. </returns>
      <overloads>Gets the automatically generated SQL statement required to perform inserts on the data source. </overloads>
    </member>
    <member name="M:Devart.Data.SQLite.SQLiteCommandBuilder.GetInsertCommand(System.Boolean)">
      <summary>Gets the automatically generated SQL statement required to perform inserts on the data source when an application calls <see cref="M:System.Data.Common.DbDataAdapter.Update()" /> on the <see cref="T:Devart.Data.SQLite.SQLiteDataAdapter" />. </summary>
      <keywords>SQLiteCommandBuilder.GetInsertCommand method </keywords>
      <param name="useColumnsForParameterNames">Determines whether names of parameters in command text will be based on columns' names. </param>
      <returns>The text of the SQL statement to be executed. </returns>
    </member>
    <member name="M:Devart.Data.SQLite.SQLiteCommandBuilder.GetInsertCommand(System.String[],System.Boolean)">
      <summary>Gets the automatically generated SQL statement required to perform inserts on the data source when an application calls <see cref="M:System.Data.Common.DbDataAdapter.Update()" /> on the <see cref="T:Devart.Data.SQLite.SQLiteDataAdapter" />. </summary>
      <keywords>SQLiteCommandBuilder.GetInsertCommand method </keywords>
      <param name="fields">Defines list of columns that are allowed to update. </param>
      <param name="useColumnsForParameterNames">Determines whether names of parameters in command text will be based on columns' names. </param>
      <returns>The text of the SQL statement to be executed. </returns>
    </member>
    <member name="M:Devart.Data.SQLite.SQLiteCommandBuilder.GetRefreshCommand()">
      <summary>Gets the automatically generated SQL statement required to refresh values from the data source. </summary>
      <keywords>SQLiteCommandBuilder.GetRefreshCommand method </keywords>
      <returns>A <see cref="T:Devart.Common.DbCommand" /> with <see cref="P:Devart.Common.DbCommandBase.CommandText" /> containing SQL statement to be executed. </returns>
      <overloads>Gets the automatically generated SQL statement required to refresh values from the data source. </overloads>
    </member>
    <member name="M:Devart.Data.SQLite.SQLiteCommandBuilder.GetRefreshCommand(System.Boolean)">
      <summary>Gets the automatically generated SQL statement required to refresh values from the data source. </summary>
      <keywords>SQLiteCommandBuilder.GetRefreshCommand method </keywords>
      <param name="useColumnsForParameterNames">Determines whether dotConnect for SQLite uses columns metadata to make up parameters' names. If <see langword="true" />, the names are composed using colon and name of appropriate column; otherwise the names look like :p1, :p2 etc. </param>
      <returns>A <see cref="T:Devart.Data.SQLite.SQLiteCommand" /> with <see cref="P:Devart.Data.SQLite.SQLiteCommand.CommandText" /> containing SQL statement to be executed. </returns>
    </member>
    <member name="M:Devart.Data.SQLite.SQLiteCommandBuilder.GetRefreshCommand(System.String[],System.Boolean)">
      <summary>Gets the automatically generated SQL statement required to refresh values from the data source. </summary>
      <keywords>SQLiteCommandBuilder.GetRefreshCommand method </keywords>
      <param name="fields">The array of string containing list of the field names. </param>
      <param name="useColumnsForParameterNames">Determines whether dotConnect for SQLite uses columns metadata to make up parameters' names. If <see langword="true" />, the names are composed using colon and name of appropriate column; otherwise the names look like :p1, :p2 etc. </param>
      <returns>A <see cref="T:Devart.Data.SQLite.SQLiteCommand" /> with <see cref="P:Devart.Data.SQLite.SQLiteCommand.CommandText" /> containing SQL statement to be executed. </returns>
    </member>
    <member name="M:Devart.Data.SQLite.SQLiteCommandBuilder.GetUpdateCommand()">
      <summary>Gets the automatically generated SQL statement required to perform updates on the data source when an application calls <see cref="M:System.Data.Common.DbDataAdapter.Update()" /> on the <see cref="T:Devart.Data.SQLite.SQLiteDataAdapter" />. </summary>
      <keywords>SQLiteCommandBuilder.GetUpdateCommand method </keywords>
      <returns>The <see cref="T:Devart.Data.SQLite.SQLiteCommand" /> object to be executed. </returns>
      <overloads>Gets the automatically generated SQL statement required to perform updates on the data source. </overloads>
    </member>
    <member name="M:Devart.Data.SQLite.SQLiteCommandBuilder.GetUpdateCommand(System.Boolean)">
      <summary>Gets the automatically generated SQL statement required to perform updates on the data source when an application calls <see cref="M:System.Data.Common.DbDataAdapter.Update()" /> on the <see cref="T:Devart.Data.SQLite.SQLiteDataAdapter" />. </summary>
      <keywords>SQLiteCommandBuilder.GetUpdateCommand method </keywords>
      <param name="useColumnsForParameterNames">Determines whether names of parameters in command text will be based on columns' names. </param>
      <returns>The <see cref="T:Devart.Data.SQLite.SQLiteCommand" /> object to be executed. </returns>
    </member>
    <member name="M:Devart.Data.SQLite.SQLiteCommandBuilder.GetUpdateCommand(System.String[],System.Boolean)">
      <summary>Gets the automatically generated SQL statement required to perform updates on the data source when an application calls <see cref="M:System.Data.Common.DbDataAdapter.Update()" /> on the <see cref="T:Devart.Data.SQLite.SQLiteDataAdapter" />. </summary>
      <keywords>SQLiteCommandBuilder.GetUpdateCommand method </keywords>
      <param name="fields">Defines list of columns that are allowed to update. </param>
      <param name="useColumnsForParameterNames">Determines whether names of parameters in command text will be based on columns' names. </param>
      <returns>The <see cref="T:Devart.Data.SQLite.SQLiteCommand" /> object to be executed. </returns>
    </member>
    <member name="P:Devart.Data.SQLite.SQLiteCommandBuilder.KeyFields">
      <summary>Gets or sets string containing list of key field names separated by semicolon. They are used to generate update commands. </summary>
      <keywords>SQLiteCommandBuilder.KeyFields property </keywords>
      <value>The string containing list of key field names separated by semicolon. </value>
    </member>
    <member name="M:Devart.Data.SQLite.SQLiteCommandBuilder.QuoteIdentifier(System.String)">
      <summary>Returns the string passed as the parameter enclosed in quotes. </summary>
      <keywords>SQLiteCommandBuilder.QuoteIdentifier method </keywords>
      <param name="unquotedIdentifier">Identifier to be placed inside the quotes. </param>
      <returns>The identifier enclosed in quotes. </returns>
    </member>
    <member name="P:Devart.Data.SQLite.SQLiteCommandBuilder.RefreshMode">
      <summary>This feature is not supported in dotConnect for SQLite. </summary>
      <keywords>SQLiteCommandBuilder.RefreshMode property </keywords>
    </member>
    <member name="P:Devart.Data.SQLite.SQLiteCommandBuilder.RefreshingFields">
      <summary>Gets or sets list of fields whose values should be retrieved after a DML statement execution. </summary>
      <keywords>SQLiteCommandBuilder.RefreshingFields property </keywords>
      <value>The string containing list of field names separated by semicolon. </value>
    </member>
    <member name="P:Devart.Data.SQLite.SQLiteCommandBuilder.SchemaSeparator">
      <summary>Gets or sets separator string to be used when referencing a table. </summary>
      <keywords>SQLiteCommandBuilder.SchemaSeparator property </keywords>
      <value>Separator between schema and table. </value>
    </member>
    <member name="M:Devart.Data.SQLite.SQLiteCommandBuilder.UnquoteIdentifier(System.String)">
      <summary>Removes quote strings from identifier. </summary>
      <keywords>SQLiteCommandBuilder.UnquoteIdentifier method </keywords>
      <param name="quotedIdentifier">String containing <see cref="P:Devart.Common.DbCommandBuilder.QuotePrefix" />, identifier itself, and <see cref="P:Devart.Common.DbCommandBuilder.QuoteSuffix" /> parts. </param>
      <returns>Unquoted identifier. </returns>
    </member>
    <member name="P:Devart.Data.SQLite.SQLiteCommandBuilder.UpdatingFields">
      <summary>Gets or sets list of fields to modify. </summary>
      <keywords>SQLiteCommandBuilder.UpdatingFields property </keywords>
      <value>The string containing list of field names separated by semicolon. </value>
    </member>
    <member name="P:Devart.Data.SQLite.SQLiteCommandBuilder.UpdatingTable">
      <summary>
        <para>Gets or sets table name to generate update statements for.</para> </summary>
      <keywords>SQLiteCommandBuilder.UpdatingTable property </keywords>
      <value>The name of the table. </value>
    </member>
    <member name="T:Devart.Data.SQLite.SQLiteConnection">
      <summary>Represents an open connection to SQLite. </summary>
    </member>
    <member name="M:Devart.Data.SQLite.SQLiteConnection.#ctor()">
      <summary>Initializes a new instance of the <see cref="T:Devart.Data.SQLite.SQLiteConnection" /> class. </summary>
      <overloads>Initializes a new instance of the <see cref="T:Devart.Data.SQLite.SQLiteConnection" /> class. </overloads>
    </member>
    <member name="M:Devart.Data.SQLite.SQLiteConnection.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:Devart.Data.SQLite.SQLiteConnection" /> class when given a string containing the connection string. </summary>
      <param name="connectionString">The connection used to connect to SQLite. </param>
    </member>
    <member name="M:Devart.Data.SQLite.SQLiteConnection.BackupDatabase(Devart.Data.SQLite.SQLiteConnection)">
      <summary>Backups (copies) the database to the specified target connection via the SQLite Online Backup API. </summary>
      <keywords>SQLiteConnection.BackupDatabase method </keywords>
      <param name="destination">The connection to copy the current database to. </param>
      <overloads>Backups (copies) the database using the SQLite Online Backup API. </overloads>
    </member>
    <member name="M:Devart.Data.SQLite.SQLiteConnection.BackupDatabase(Devart.Data.SQLite.SQLiteConnection,System.Int32)">
      <summary>Backups (copies) the database to the specified target connection via the SQLite Online Backup API. </summary>
      <keywords>SQLiteConnection.BackupDatabase method </keywords>
      <param name="destination">The connection to copy the current database to. </param>
      <param name="backupTimeOut">The time (in seconds) to wait for the backup command to execute. </param>
    </member>
    <member name="M:Devart.Data.SQLite.SQLiteConnection.BackupDatabase(Devart.Data.SQLite.SQLiteConnection,System.String,System.String,System.Int32)">
      <summary>Backups (copies) the database to the specified target connection via the SQLite Online Backup API. </summary>
      <keywords>SQLiteConnection.BackupDatabase method </keywords>
      <param name="destination">The connection to copy the current database to. </param>
      <param name="destinationName">The destination database name. </param>
      <param name="sourceName">The source database name. </param>
      <param name="backupTimeOut">The time (in seconds) to wait for the backup command to execute. </param>
    </member>
    <member name="M:Devart.Data.SQLite.SQLiteConnection.BeginTransaction()">
      <summary>Begins a database transaction. </summary>
      <keywords>SQLiteConnection.BeginTransaction method </keywords>
      <returns>An object representing the new transaction. </returns>
      <overloads>Begins a transaction at the database. </overloads>
    </member>
    <member name="M:Devart.Data.SQLite.SQLiteConnection.BeginTransaction(Devart.Data.SQLite.SQLiteTransactionMode)">
      <summary>Begins a database transaction with the specified transaction mode. </summary>
      <keywords>SQLiteConnection.BeginTransaction method </keywords>
      <param name="transactionMode">The transaction mode to use. One of the <see cref="T:Devart.Data.SQLite.SQLiteTransactionMode" /> values. </param>
      <returns>An object representing the new transaction. </returns>
    </member>
    <member name="M:Devart.Data.SQLite.SQLiteConnection.BeginTransaction(System.Data.IsolationLevel)">
      <summary>Begins a database transaction with the specified isolation level. </summary>
      <keywords>SQLiteConnection.BeginTransaction method </keywords>
      <param name="isolationLevel"> </param>
      <returns>An object representing the new transaction. </returns>
    </member>
    <member name="M:Devart.Data.SQLite.SQLiteConnection.ChangeDatabase(System.String)">
      <summary>This method is not supported. </summary>
      <keywords>SQLiteConnection.ChangeDatabase method </keywords>
      <param name="databaseName"> </param>
    </member>
    <member name="M:Devart.Data.SQLite.SQLiteConnection.ChangePassword(System.Byte[])">
      <summary>Changes password for opened SEE encrypted SQLite databases. Accepts new password in any encoding. </summary>
      <keywords>SQLiteConnection.ChangePassword method </keywords>
      <param name="newPassword">New password. </param>
      <overloads>Changes password for opened SEE encrypted SQLite databases. </overloads>
    </member>
    <member name="M:Devart.Data.SQLite.SQLiteConnection.ChangePassword(System.String)">
      <summary>Changes password for opened SEE or SQLiteCrypt encrypted SQLite databases. Accepts new password only in UTF-8 encoding. </summary>
      <keywords>SQLiteConnection.ChangePassword method </keywords>
      <param name="newPassword">New password in UTF-8 encoding. </param>
    </member>
    <member name="M:Devart.Data.SQLite.SQLiteConnection.ClearAllPools()">
      <summary>Clears all pools associated with the connection. </summary>
      <keywords>SQLiteConnection.ClearAllPools method </keywords>
    </member>
    <member name="M:Devart.Data.SQLite.SQLiteConnection.ClearAllPools(System.Boolean)">
      <summary>Clears all pools associated with the connection. </summary>
      <keywords>SQLiteConnection.ClearAllPools method </keywords>
      <param name="forced">Determines whether to start the operation immediately, or after the timeout. </param>
    </member>
    <member name="M:Devart.Data.SQLite.SQLiteConnection.ClearPool(Devart.Data.SQLite.SQLiteConnection)">
      <summary>Clears the pool matching <see cref="P:Devart.Data.SQLite.SQLiteConnection.ConnectionString" /> of provided <see cref="T:Devart.Data.SQLite.SQLiteConnection" /> object. </summary>
      <keywords>SQLiteConnection.ClearPool method </keywords>
      <param name="connection">A connection that holds <see cref="P:Devart.Data.SQLite.SQLiteConnection.ConnectionString" /> that identifies pool to clear. </param>
    </member>
    <member name="M:Devart.Data.SQLite.SQLiteConnection.Clone()">
      <summary>Creates a new object that is a copy of the current instance. </summary>
      <keywords>SQLiteConnection.Clone method </keywords>
      <returns>A new <see cref="T:Devart.Data.SQLite.SQLiteConnection" /> object. </returns>
    </member>
    <member name="M:Devart.Data.SQLite.SQLiteConnection.Commit()">
      <summary>Commits the database transaction. </summary>
      <keywords>SQLiteConnection.Commit method </keywords>
    </member>
    <member name="P:Devart.Data.SQLite.SQLiteConnection.ConnectionString">
      <summary>Gets or sets the string used to open a SQLite connection. </summary>
      <keywords>SQLiteConnection.ConnectionString property </keywords>
      <value>The connection string that includes the parameters needed to establish the initial connection. The default value is an empty string (""). </value>
    </member>
    <member name="P:Devart.Data.SQLite.SQLiteConnection.ConnectionTimeout">
      <summary>Gets the time to wait while trying to establish a connection before terminating the attempt and generating an error. </summary>
      <keywords>SQLiteConnection.ConnectionTimeout property </keywords>
      <value>The time (in seconds) to wait for a connection to open. The default value is 15 seconds. </value>
    </member>
    <member name="M:Devart.Data.SQLite.SQLiteConnection.CreateCommand()">
      <summary>Creates and returns a <see cref="T:Devart.Data.SQLite.SQLiteCommand" /> object associated with the <see cref="T:Devart.Data.SQLite.SQLiteConnection" />. </summary>
      <keywords>SQLiteConnection.CreateCommand method </keywords>
      <returns>A <see cref="T:Devart.Data.SQLite.SQLiteCommand" /> object. </returns>
      <overloads>Creates and returns a <see cref="T:Devart.Data.SQLite.SQLiteCommand" /> object associated with the <see cref="T:Devart.Data.SQLite.SQLiteConnection" />. </overloads>
    </member>
    <member name="M:Devart.Data.SQLite.SQLiteConnection.CreateFile(System.String)">
      <summary>Creates an empty database. </summary>
      <keywords>SQLiteConnection.CreateFile method </keywords>
      <param name="databaseFileName">The path and name of the database to create. </param>
    </member>
    <member name="P:Devart.Data.SQLite.SQLiteConnection.DataSource">
      <summary>Gets or sets the location of the database. </summary>
      <keywords>SQLiteConnection.DataSource property </keywords>
      <value>The path and file name of the database. </value>
    </member>
    <member name="P:Devart.Data.SQLite.SQLiteConnection.Database">
      <summary>Returns constant "Main". </summary>
      <keywords>SQLiteConnection.Database property </keywords>
      <value>The name of the current database or the name of the database to be used once a connection is open. </value>
    </member>
    <member name="M:Devart.Data.SQLite.SQLiteConnection.DisableSharedCache()">
      <summary>Disables the sharing of the database cache and schema data structures between connections to the same database. </summary>
      <keywords>SQLiteConnection.DisableSharedCache method </keywords>
    </member>
    <member name="M:Devart.Data.SQLite.SQLiteConnection.EnableSharedCache()">
      <summary>Enables the sharing of the database cache and schema data structures between connections to the same database. </summary>
      <keywords>SQLiteConnection.EnableSharedCache method </keywords>
    </member>
    <member name="E:Devart.Data.SQLite.SQLiteConnection.Error">
      <summary>Occurs when SQLite returns an error. </summary>
      <keywords>SQLiteConnection.Error event </keywords>
    </member>
    <member name="M:Devart.Data.SQLite.SQLiteConnection.IsFunctionRegistered(Devart.Data.SQLite.SQLiteFunction)">
      <summary>Checks whether the specified function is registered in the connection as SQLite user-defined function. </summary>
      <keywords>SQLiteConnection.IsFunctionRegistered method </keywords>
      <param name="function">The function to check. </param>
      <returns><see langword="true" />, if the specified function is registered in the SQLite connection; otherwise, <see langword="false" />. </returns>
      <overloads>Checks whether the specified function is registered in the connection as SQLite user-defined function. </overloads>
    </member>
    <member name="M:Devart.Data.SQLite.SQLiteConnection.IsFunctionRegistered(System.String,System.Int32)">
      <summary>Checks whether the specified function is registered in the connection as SQLite user-defined function. </summary>
      <keywords>SQLiteConnection.IsFunctionRegistered method </keywords>
      <param name="name">The name of the function to check. </param>
      <param name="argumentCount">The number of arguments the function accepts. </param>
      <returns><see langword="true" />, if the function with the specified name and number of parameters is registered in the SQLite connection; otherwise, <see langword="false" />. </returns>
    </member>
    <member name="M:Devart.Data.SQLite.SQLiteConnection.LoadExtension(System.String)">
      <summary>Loads an SQLite extension library, specified by its file name. </summary>
      <keywords>SQLiteConnection.LoadExtension method </keywords>
      <param name="fileName">The library file name. </param>
      <overloads>Loads an SQLite extension library, specified by its file name. </overloads>
    </member>
    <member name="M:Devart.Data.SQLite.SQLiteConnection.LoadExtension(System.String,System.String)">
      <summary>Loads an SQLite extension library, specified by its file name. </summary>
      <keywords>SQLiteConnection.LoadExtension method </keywords>
      <param name="fileName">The library file name. </param>
      <param name="entryPoint">The library entry point. </param>
    </member>
    <member name="P:Devart.Data.SQLite.SQLiteConnection.Name">
      <summary>Gets or sets the name of the component. </summary>
      <keywords>SQLiteConnection.Name property </keywords>
      <value>The name of the component. </value>
    </member>
    <member name="M:Devart.Data.SQLite.SQLiteConnection.Open()">
      <summary>Opens a SQLite connection with the property settings specified by the <see cref="P:Devart.Data.SQLite.SQLiteConnection.ConnectionString" />. </summary>
      <keywords>SQLiteConnection.Open method </keywords>
    </member>
    <member name="P:Devart.Data.SQLite.SQLiteConnection.Owner">
      <summary>Gets or sets a form or other container that the <see cref="T:Devart.Data.SQLite.SQLiteConnection" /> instance belongs to. </summary>
      <keywords>SQLiteConnection.Owner property </keywords>
      <value>A form or other container that the <see cref="T:Devart.Data.SQLite.SQLiteConnection" /> instance belongs to. </value>
    </member>
    <member name="M:Devart.Data.SQLite.SQLiteConnection.RegisterFunction(Devart.Data.SQLite.SQLiteFunction)">
      <summary>Registers user-defined function in the connection. </summary>
      <keywords>SQLiteConnection.RegisterFunction method </keywords>
      <param name="function">The user-implemented function to register. </param>
    </member>
    <member name="M:Devart.Data.SQLite.SQLiteConnection.RegisterProgressHandler(Devart.Data.SQLite.SQLiteProgressCallback)">
      <summary>Registers a handler to be invoked each SQLite virtual machine instruction during long running calls to a database. </summary>
      <keywords>SQLiteConnection.RegisterProgressHandler method </keywords>
      <param name="handler">A handler to register. </param>
      <overloads>Registers a handler to be invoked periodically during long running calls to a database. </overloads>
    </member>
    <member name="M:Devart.Data.SQLite.SQLiteConnection.RegisterProgressHandler(Devart.Data.SQLite.SQLiteProgressCallback,System.Int32)">
      <summary>Registers a handler to be invoked each SQLite virtual machine instruction during long running calls to a database. </summary>
      <keywords>SQLiteConnection.RegisterProgressHandler method </keywords>
      <param name="handler">A handler to register. </param>
      <param name="vmInstructions">The number of SQLite virtual machine instructions between the progress handler calls. </param>
    </member>
    <member name="M:Devart.Data.SQLite.SQLiteConnection.Rollback()">
      <summary>Rolls back a transaction from a pending state. </summary>
      <keywords>SQLiteConnection.Rollback method </keywords>
    </member>
    <member name="M:Devart.Data.SQLite.SQLiteConnection.SQLCipherExport(System.String,System.String)">
      <summary>Creates an SQLCipher-encrypted copy of the current unencrypted database. You must have the SQLite3.dll library with SQLCipher extension in order to use this method. </summary>
      <keywords>SQLiteConnection.SQLCipherExport method </keywords>
      <param name="destDatabaseFile">Path to save the result encrypted database to. </param>
      <param name="destDatabasePassword">The password to use for the encrypted database. Passing an empty string creates an unencrypted database. </param>
    </member>
    <member name="P:Devart.Data.SQLite.SQLiteConnection.ServerVersion">
      <summary>Gets a string containing the version of the instance of SQLite to which the client is connected. </summary>
      <keywords>SQLiteConnection.ServerVersion property </keywords>
      <value>The version of the instance of SQLite. </value>
    </member>
    <member name="P:Devart.Data.SQLite.SQLiteConnection.State">
      <summary>Gets the current state of the connection. </summary>
      <keywords>SQLiteConnection.State property </keywords>
      <value>A bitwise combination of the <see cref="T:System.Data.ConnectionState" /> values. The default value is Closed. </value>
    </member>
    <member name="P:Devart.Data.SQLite.SQLiteConnection.UTF16">
      <summary>Gets or sets a value indicating whether the connection uses UTF16 encoding. </summary>
      <keywords>SQLiteConnection.UTF16 property </keywords>
      <value>If <b>true</b>, the  connection uses UTF16 encoding; otherwise it uses UTF8. </value>
    </member>
    <member name="M:Devart.Data.SQLite.SQLiteConnection.UnRegisterCollation(System.String)">
      <summary>Unregisters existing SQLite collation function. </summary>
      <keywords>SQLiteConnection.UnRegisterCollation method </keywords>
      <param name="name">The name of the function to unregister. </param>
    </member>
    <member name="M:Devart.Data.SQLite.SQLiteConnection.UnRegisterFunction(Devart.Data.SQLite.SQLiteFunction)">
      <summary>Unregisters user-defined scalar or aggregate function. </summary>
      <keywords>SQLiteConnection.UnRegisterFunction method </keywords>
      <param name="function">The user-defined function to unregister. </param>
      <overloads>Unregisters existing SQL scalar or aggregate function. </overloads>
    </member>
    <member name="M:Devart.Data.SQLite.SQLiteConnection.UnRegisterFunction(System.String,System.Int32)">
      <summary>Unregisters existing SQL scalar or aggregate function. </summary>
      <keywords>SQLiteConnection.UnRegisterFunction method </keywords>
      <param name="name">The name of the function to unregister. </param>
      <param name="arguments">The number of arguments in the function. </param>
    </member>
    <member name="M:Devart.Data.SQLite.SQLiteConnection.UnRegisterProgressHandler()">
      <summary>Unregisters any registered <see cref="T:Devart.Data.SQLite.SQLiteProgressCallback" /> progress handler. </summary>
      <keywords>SQLiteConnection.UnRegisterProgressHandler method </keywords>
    </member>
    <member name="T:Devart.Data.SQLite.SQLiteConnectionStringBuilder">
      <summary>Generates automatically connection strings used to connect to SQLite. </summary>
    </member>
    <member name="M:Devart.Data.SQLite.SQLiteConnectionStringBuilder.#ctor()">
      <summary>Initializes a new instance of the <see cref="T:Devart.Data.SQLite.SQLiteConnectionStringBuilder" /> class. </summary>
      <overloads>Initializes a new instance of the <see cref="T:Devart.Data.SQLite.SQLiteConnectionStringBuilder" /> class. </overloads>
    </member>
    <member name="M:Devart.Data.SQLite.SQLiteConnectionStringBuilder.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:Devart.Data.SQLite.SQLiteConnectionStringBuilder" /> class and assigns custom initial values to some properties. </summary>
      <param name="connectionString">Initial connection setup string. </param>
    </member>
    <member name="P:Devart.Data.SQLite.SQLiteConnectionStringBuilder.Attach">
      <summary>Gets or sets the list of databases to attach. </summary>
      <keywords>SQLiteConnectionStringBuilder.Attach property </keywords>
      <value>The list of databases to attach, separated with semicolons. </value>
    </member>
    <member name="P:Devart.Data.SQLite.SQLiteConnectionStringBuilder.AutoVacuum">
      <summary>Determines what happens when a transaction that deletes data from a database is committed. </summary>
      <keywords>SQLiteConnectionStringBuilder.AutoVacuum property </keywords>
      <value>One of the <see cref="T:Devart.Data.SQLite.AutoVacuumMode" /> values. </value>
    </member>
    <member name="P:Devart.Data.SQLite.SQLiteConnectionStringBuilder.AutomaticIndex">
      <summary>Determines whether the SQLite <a href="http://sqlite.org/optoverview.html#autoindex">automatic indexing</a> is enabled. </summary>
      <keywords>SQLiteConnectionStringBuilder.AutomaticIndex property </keywords>
      <value>If <see langword="true" /> - automatic indexing is enabled; otherwise it is disabled. Default value is <see langword="true" />. </value>
    </member>
    <member name="P:Devart.Data.SQLite.SQLiteConnectionStringBuilder.BinaryGUID">
      <summary>Gets or sets a value that determines how GUIDs are stored. </summary>
      <keywords>SQLiteConnectionStringBuilder.BinaryGUID property </keywords>
      <value>If <see langword="true" /> - GUID columns are stored in binary form; otherwise GUID columns are stored as text. </value>
    </member>
    <member name="P:Devart.Data.SQLite.SQLiteConnectionStringBuilder.BusyTimeout">
      <summary>Sets an SQLite <a href="http://sqlite.org/c3ref/busy_handler.html">busy handler</a> that sleeps for a specified amount of time when a table is locked. The handler will sleep multiple times until at least the specified number of milliseconds of sleeping have accumulated. After this the handler returns 0. </summary>
      <keywords>SQLiteConnectionStringBuilder.BusyTimeout property </keywords>
      <value>The time to sleep in milliseconds. </value>
    </member>
    <member name="P:Devart.Data.SQLite.SQLiteConnectionStringBuilder.CacheSize">
      <summary>Gets or sets the maximum number of database disk pages that SQLite will hold in memory at once. </summary>
      <keywords>SQLiteConnectionStringBuilder.CacheSize property </keywords>
      <value>The maximum number of database disk pages. </value>
    </member>
    <member name="P:Devart.Data.SQLite.SQLiteConnectionStringBuilder.CacheSpill">
      <summary>Gets or sets a value indicating whether to allow spilling dirty cache pages to the database file in the middle of a transaction. </summary>
      <keywords>SQLiteConnectionStringBuilder.CacheSpill property </keywords>
      <value>If <see langword="true" />, spilling dirty cache pages to the database file in the middle of a transaction is allowed; otherwise, it is not. By default, <see langword="true" />. </value>
    </member>
    <member name="P:Devart.Data.SQLite.SQLiteConnectionStringBuilder.CaseSensitiveLike">
      <summary>Gets or sets a value indicating whether LIKE comparisons should be case-sensitive. </summary>
      <keywords>SQLiteConnectionStringBuilder.CaseSensitiveLike property </keywords>
      <value>If <see langword="true" />, comparison operations with LIKE are case-sensitive; otherwise, they are not. By default, <see langword="false" />. </value>
    </member>
    <member name="P:Devart.Data.SQLite.SQLiteConnectionStringBuilder.CellSizeCheck">
      <summary>Gets or sets a value indicating whether to perform additional checks on database b-tree pages as they are initially read from disk. </summary>
      <keywords>SQLiteConnectionStringBuilder.CellSizeCheck property </keywords>
      <value>If <see langword="true" />, additional checks are performed; otherwise, they are not. By default, <see langword="false" />. </value>
    </member>
    <member name="P:Devart.Data.SQLite.SQLiteConnectionStringBuilder.CheckpointFullFSync">
      <summary>Determines whether the F_FULLFSYNC syncing method is used during checkpoint operations on systems that support F_FULLFSYNC. </summary>
      <keywords>SQLiteConnectionStringBuilder.CheckpointFullFSync property </keywords>
      <value>If <see langword="true" /> - the F_FULLFSYNC syncing method is used during checkpoint operations on systems that support F_FULLFSYNC; otherwise it is not used. Default value is <see langword="false" />. </value>
    </member>
    <member name="M:Devart.Data.SQLite.SQLiteConnectionStringBuilder.Clear()">
      <summary>Sets all <see cref="T:Devart.Data.SQLite.SQLiteConnectionStringBuilder" /> properties to default values. </summary>
      <keywords>SQLiteConnectionStringBuilder.Clear method </keywords>
    </member>
    <member name="P:Devart.Data.SQLite.SQLiteConnectionStringBuilder.ConnectionLifetime">
      <summary>Gets or sets time span in seconds for connection to live. </summary>
      <keywords>SQLiteConnectionStringBuilder.ConnectionLifetime property </keywords>
      <value>Number of seconds for connection to live. </value>
    </member>
    <member name="P:Devart.Data.SQLite.SQLiteConnectionStringBuilder.ConnectionTimeout">
      <summary>Gets or sets the time to wait while trying to establish a connection before terminating the attempt and generating an error. </summary>
      <keywords>SQLiteConnectionStringBuilder.ConnectionTimeout property </keywords>
      <value>The time (in seconds) to wait for a connection to open. The default value is 15 seconds. </value>
    </member>
    <member name="M:Devart.Data.SQLite.SQLiteConnectionStringBuilder.ContainsKey(System.String)">
      <summary>Indicates whether specified key is set in the <see cref="T:Devart.Data.SQLite.SQLiteConnectionStringBuilder" /> object. </summary>
      <keywords>SQLiteConnectionStringBuilder.ContainsKey method </keywords>
      <param name="keyword">Key to search for. </param>
      <returns>
        <see langword="true" />, if the value of the specified key differs from default; otherwise, <see langword="false" />. </returns>
    </member>
    <member name="P:Devart.Data.SQLite.SQLiteConnectionStringBuilder.CountChanges">
      <summary>Gets or sets a value indicating whether the database engine should return the number of inserted, updated, or deleted rows. </summary>
      <keywords>SQLiteConnectionStringBuilder.CountChanges property </keywords>
      <value>If <see langword="true" />, the database engine returns the number of affected rows; otherwise, <see langword="false" />. </value>
    </member>
    <member name="P:Devart.Data.SQLite.SQLiteConnectionStringBuilder.DataSource">
      <summary>Gets or sets the location of the database. </summary>
      <keywords>SQLiteConnectionStringBuilder.DataSource property </keywords>
      <value>The path and file name of the database. </value>
    </member>
    <member name="P:Devart.Data.SQLite.SQLiteConnectionStringBuilder.DateTimeFormat">
      <summary>Gets or sets the format of DATETIME values. </summary>
      <keywords>SQLiteConnectionStringBuilder.DateTimeFormat property </keywords>
      <value>One of the <see cref="T:Devart.Data.SQLite.SQLiteDateFormats" /> values. </value>
    </member>
    <member name="P:Devart.Data.SQLite.SQLiteConnectionStringBuilder.DefaultCommandTimeout">
      <summary>Gets or sets the time in seconds to wait while trying to execute a command before terminating the attempt and generating an error. </summary>
      <keywords>SQLiteConnectionStringBuilder.DefaultCommandTimeout property </keywords>
      <value>The time in seconds to wait while trying to execute a command before terminating the attempt and generating an error. </value>
    </member>
    <member name="P:Devart.Data.SQLite.SQLiteConnectionStringBuilder.EnableLoadExtension">
      <summary>Gets or sets a value indicating whether an SQLite extension library can be loaded from the from the named file with the statement <i>SELECT load_extension(file_name);</i>.
It can be useful, for example, for the full-text search modules. </summary>
      <keywords>SQLiteConnectionStringBuilder.EnableLoadExtension property </keywords>
      <value>If <see langword="true" />, the SQLite extension libraries are allowed to load; otherwise, <see langword="false" />. </value>
    </member>
    <member name="P:Devart.Data.SQLite.SQLiteConnectionStringBuilder.Encryption">
      <summary>Determines whether the database is encrypted and kind of the database encryption. </summary>
      <keywords>SQLiteConnectionStringBuilder.Encryption property </keywords>
      <value>One of the <see cref="T:Devart.Data.SQLite.EncryptionMode" /> values. </value>
    </member>
    <member name="P:Devart.Data.SQLite.SQLiteConnectionStringBuilder.Enlist">
      <summary>Gets or sets a Boolean value that indicates whether the connection is automatically enlisted in the current transaction context. </summary>
      <keywords>SQLiteConnectionStringBuilder.Enlist property </keywords>
      <value><see langword="true" />, if the connection is automatically enlisted in the current transaction context; <see langword="false" /> otherwise. </value>
    </member>
    <member name="M:Devart.Data.SQLite.SQLiteConnectionStringBuilder.EquivalentTo(Devart.Common.DbConnectionStringBuilder,System.Boolean)">
      <summary>Returns a value indicating whether this <see cref="T:Devart.Data.SQLite.SQLiteConnectionStringBuilder" /> object has same parameters as given <b>DbConnectionStringBuilder</b> object. </summary>
      <keywords>SQLiteConnectionStringBuilder.EquivalentTo method </keywords>
      <param name="connectionStringBuilder">A <b>DbConnectionStringBuilder</b> object to compare with. </param>
      <param name="loginOnly">
 </param>
      <returns>
        <see langword="true" />, if the two objects have same parameters; otherwise, <see langword="false" />. </returns>
      <overloads>Returns a value indicating whether this <see cref="T:Devart.Data.SQLite.SQLiteConnectionStringBuilder" /> has same parameters as given <b>DbConnectionStringBuilder</b>. </overloads>
    </member>
    <member name="P:Devart.Data.SQLite.SQLiteConnectionStringBuilder.FailIfMissing">
      <summary>Gets or sets the value that determines what to do when the database file is missing. </summary>
      <keywords>SQLiteConnectionStringBuilder.FailIfMissing property </keywords>
      <value>When <see cref="P:Devart.Data.SQLite.SQLiteConnectionStringBuilder.FailIfMissing" /> is <see langword="true" />, <see cref="T:Devart.Data.SQLite.SQLiteConnection" /> throws an exception if it cannot find the database file. When <see cref="P:Devart.Data.SQLite.SQLiteConnectionStringBuilder.FailIfMissing" /> is <see langword="false" />, an empty database is created. </value>
    </member>
    <member name="P:Devart.Data.SQLite.SQLiteConnectionStringBuilder.ForeignKeyConstraints">
      <summary>Determines whether the foreign key constraints are enforced. </summary>
      <keywords>SQLiteConnectionStringBuilder.ForeignKeyConstraints property </keywords>
      <value>One of the <see cref="T:Devart.Data.SQLite.SQLiteForeignKeyConstraints" /> values. </value>
    </member>
    <member name="P:Devart.Data.SQLite.SQLiteConnectionStringBuilder.FullColumnNames">
      <summary>Gets or sets a value that determines the format of autogenerated names. </summary>
      <keywords>SQLiteConnectionStringBuilder.FullColumnNames property </keywords>
      <value>If <see langword="true" />, the database engine names columns according to format &lt;table-name/alias&gt; &lt;column-name&gt;. </value>
    </member>
    <member name="P:Devart.Data.SQLite.SQLiteConnectionStringBuilder.FullFSync">
      <summary>Gets or sets a value that determines whether or not the F_FULLFSYNC syncing method is used on systems that support it. </summary>
      <keywords>SQLiteConnectionStringBuilder.FullFSync property </keywords>
      <value>If <see langword="true" />, the database engine attempts to use the F_FULLFSYNC syncing method; otherwise, <see langword="false" />. </value>
    </member>
    <member name="P:Devart.Data.SQLite.SQLiteConnectionStringBuilder.IgnoreCheckConstraints">
      <summary>Determines whether the check constraints are enforced. </summary>
      <keywords>SQLiteConnectionStringBuilder.IgnoreCheckConstraints property </keywords>
      <value>If <see langword="true" /> - check constraints are ignored; otherwise they are enforced. Default value is <see langword="false" />. </value>
    </member>
    <member name="P:Devart.Data.SQLite.SQLiteConnectionStringBuilder.IsFixedSize">
      <summary>Returns <see langword="true" />. </summary>
      <keywords>SQLiteConnectionStringBuilder.IsFixedSize property </keywords>
      <value>Always <see langword="true" />. </value>
    </member>
    <member name="P:Devart.Data.SQLite.SQLiteConnectionStringBuilder.Item(System.String)">
      <summary>Returns the value of given key. </summary>
      <keywords>SQLiteConnectionStringBuilder.Item property </keywords>
      <param name="keyword">The key name. </param>
      <value>Value of given key. </value>
    </member>
    <member name="P:Devart.Data.SQLite.SQLiteConnectionStringBuilder.JournalMode">
      <summary>Determines SQLite journal mode for the connection. </summary>
      <keywords>SQLiteConnectionStringBuilder.JournalMode property </keywords>
      <value>One of the <see cref="T:Devart.Data.SQLite.JournalMode" /> values. </value>
    </member>
    <member name="P:Devart.Data.SQLite.SQLiteConnectionStringBuilder.JournalSizeLimit">
      <summary>Gets or sets the maximal size of the log file in bytes. </summary>
      <keywords>SQLiteConnectionStringBuilder.JournalSizeLimit property </keywords>
      <value>The maximal size of the log file in bytes. </value>
    </member>
    <member name="P:Devart.Data.SQLite.SQLiteConnectionStringBuilder.Keys">
      <summary>Collection of keys in the <see cref="T:Devart.Data.SQLite.SQLiteConnectionStringBuilder" />. </summary>
      <keywords>SQLiteConnectionStringBuilder.Keys property </keywords>
      <value>Collection of keys. </value>
    </member>
    <member name="P:Devart.Data.SQLite.SQLiteConnectionStringBuilder.LegacyFileFormat">
      <summary>Gets or sets a value that indicates backwards compatibility of the database file. </summary>
      <keywords>SQLiteConnectionStringBuilder.LegacyFileFormat property </keywords>
      <value>If <see langword="true" />, new databases will be created compatible with all 3.x engines; otherwise the new database may be compatible with the current engine version only. The default value is <see langword="true" />. </value>
    </member>
    <member name="P:Devart.Data.SQLite.SQLiteConnectionStringBuilder.LoadExtension">
      <summary>Defines the list of SQLite extension libraries, which are loaded when the connection opens. Applied only when the <see cref="P:Devart.Data.SQLite.SQLiteConnectionStringBuilder.EnableLoadExtension" /> connection string parameter is set to True. </summary>
      <keywords>SQLiteConnectionStringBuilder.LoadExtension property </keywords>
      <value>The list of SQLite extension libraries, which are loaded when the connection opens. </value>
    </member>
    <member name="P:Devart.Data.SQLite.SQLiteConnectionStringBuilder.Locking">
      <summary>Gets or sets a value that determines database locking mode. </summary>
      <keywords>SQLiteConnectionStringBuilder.Locking property </keywords>
      <value>One of the <see cref="T:Devart.Data.SQLite.LockingMode" /> values. </value>
    </member>
    <member name="P:Devart.Data.SQLite.SQLiteConnectionStringBuilder.MaxPageCount">
      <summary>Gets or sets the maximum number of pages in the database file. </summary>
      <keywords>SQLiteConnectionStringBuilder.MaxPageCount property </keywords>
      <value>The maximum number of pages. </value>
    </member>
    <member name="P:Devart.Data.SQLite.SQLiteConnectionStringBuilder.MaxPoolSize">
      <summary>The maximum number of connections allowed in the pool. </summary>
      <keywords>SQLiteConnectionStringBuilder.MaxPoolSize property </keywords>
      <value>Number of connections allowed in the pool. The default value is 100. </value>
    </member>
    <member name="P:Devart.Data.SQLite.SQLiteConnectionStringBuilder.MinPoolSize">
      <summary>The minimum number of connections allowed in the pool. </summary>
      <keywords>SQLiteConnectionStringBuilder.MinPoolSize property </keywords>
      <value>Number of connections allowed in the pool. The default value is 0. </value>
    </member>
    <member name="P:Devart.Data.SQLite.SQLiteConnectionStringBuilder.PageSize">
      <summary>Gets or sets the page size in newly created databases. </summary>
      <keywords>SQLiteConnectionStringBuilder.PageSize property </keywords>
      <value>The page size in bytes. </value>
    </member>
    <member name="P:Devart.Data.SQLite.SQLiteConnectionStringBuilder.Password">
      <summary>Gets or sets the user's password to connect. </summary>
      <keywords>SQLiteConnectionStringBuilder.Password property </keywords>
      <value>The user's password to connect. </value>
    </member>
    <member name="P:Devart.Data.SQLite.SQLiteConnectionStringBuilder.PersistSecurityInfo">
      <summary>Gets or sets a value indicating whether password is stored in connection string after connection is opened. </summary>
      <keywords>SQLiteConnectionStringBuilder.PersistSecurityInfo property </keywords>
      <value>If <see langword="true" />, <see cref="P:Devart.Data.SQLite.SQLiteConnection.ConnectionString" /> remains unaltered after opening connection; otherwise, password is removed. The default value is <see langword="false" />. </value>
    </member>
    <member name="P:Devart.Data.SQLite.SQLiteConnectionStringBuilder.Pooling">
      <summary>Gets or sets pooling mode. </summary>
      <keywords>SQLiteConnectionStringBuilder.Pooling property </keywords>
      <value>If <see langword="true" /> (the default value), when a <see cref="T:Devart.Data.SQLite.SQLiteConnection" /> is closed, the internal connection object is not actually closed, and is placed  object is drawn from the appropriate pool or is created and added to the appropriate pool. </value>
    </member>
    <member name="P:Devart.Data.SQLite.SQLiteConnectionStringBuilder.ReadOnlyDatabase">
      <summary>Determines whether to open a database in a read-only mode. An exception is thrown if a database does not exist. Available only if the connection uses the UTF8 encoding - if <see cref="P:Devart.Data.SQLite.SQLiteConnectionStringBuilder.UTF16" /> is set to <see langword="false" />. </summary>
      <keywords>SQLiteConnectionStringBuilder.ReadOnlyDatabase property </keywords>
      <value>If <see langword="true" />, the database is opened in rad-only mode, and you cannot modify it; otherwise, <see langword="false" />. Default value is <see langword="false" />. </value>
    </member>
    <member name="P:Devart.Data.SQLite.SQLiteConnectionStringBuilder.ReadUncommitted">
      <summary>Gets or sets the process isolation level. </summary>
      <keywords>SQLiteConnectionStringBuilder.ReadUncommitted property </keywords>
      <value>If <see langword="true" />, the isolation level is READ UNCOMMITTED; otherwise, it is SERIALIZABLE. The default level is SERIALIZABLE. </value>
    </member>
    <member name="P:Devart.Data.SQLite.SQLiteConnectionStringBuilder.RecursiveTriggers">
      <summary>Determines whether the recursive triggers are turned on. </summary>
      <keywords>SQLiteConnectionStringBuilder.RecursiveTriggers property </keywords>
      <value>If <b>true</b> -  recursive triggers are turned on; otherwise they are turned off. Default value is <b>false</b>. </value>
    </member>
    <member name="M:Devart.Data.SQLite.SQLiteConnectionStringBuilder.Remove(System.String)">
      <summary>Sets value of the specified key to default. </summary>
      <keywords>SQLiteConnectionStringBuilder.Remove method </keywords>
      <param name="keyword">The key to clear. </param>
      <returns>
        <see langword="true" />, if operation is successful; <see langword="false" /> otherwise. </returns>
    </member>
    <member name="P:Devart.Data.SQLite.SQLiteConnectionStringBuilder.ReverseUnorderedSelects">
      <summary>Determines whether the result of the SELECT statement without the ORDER BY clause will be retrieved  in the reverse order of what it normally would. </summary>
      <keywords>SQLiteConnectionStringBuilder.ReverseUnorderedSelects property </keywords>
      <value>If <see langword="true" /> - the result of the SELECT statement without the ORDER BY clause will be retrieved  in the reverse order of what it would if this property was set to <see langword="false" />. Default value is <see langword="false" />. </value>
    </member>
    <member name="P:Devart.Data.SQLite.SQLiteConnectionStringBuilder.SQLiteCryptLicenseKey">
      <summary>Gets or sets the license key of the SQLiteCrypt  extension. Set this parameter if you are connecting to SQLiteCrypt encrypted databases. </summary>
      <keywords>SQLiteConnectionStringBuilder.SQLiteCryptLicenseKey property </keywords>
      <value>The license key of the SQLiteCrypt  extension. </value>
    </member>
    <member name="P:Devart.Data.SQLite.SQLiteConnectionStringBuilder.SecureDelete">
      <summary>Specifies whether to overwrite the deleted data with zeroes. </summary>
      <keywords>SQLiteConnectionStringBuilder.SecureDelete property </keywords>
      <value>One of the <see cref="T:Devart.Data.SQLite.SQLiteSecureDelete" /> values. </value>
    </member>
    <member name="P:Devart.Data.SQLite.SQLiteConnectionStringBuilder.ShortColumnNames">
      <summary>Gets or sets a value that determines the format of autogenerated names. </summary>
      <keywords>SQLiteConnectionStringBuilder.ShortColumnNames property </keywords>
      <value>If <see langword="true" />, the database engine names columns according to format &lt;column-name&gt;. </value>
    </member>
    <member name="M:Devart.Data.SQLite.SQLiteConnectionStringBuilder.ShouldSerialize(System.String)">
      <summary>Determines whether the key will be serialized if required. </summary>
      <keywords>SQLiteConnectionStringBuilder.ShouldSerialize method </keywords>
      <param name="keyword">Key name to inquiry. </param>
      <returns>
        <see langword="true" />, if the key will be serialized; <see langword="false" /> otherwise. </returns>
    </member>
    <member name="P:Devart.Data.SQLite.SQLiteConnectionStringBuilder.Synchronous">
      <summary>Gets or sets a value that determines the synchronization mode of write operations. </summary>
      <keywords>SQLiteConnectionStringBuilder.Synchronous property </keywords>
      <value>One of the <see cref="T:Devart.Data.SQLite.SynchronizationMode" /> values. </value>
    </member>
    <member name="P:Devart.Data.SQLite.SQLiteConnectionStringBuilder.TempStore">
      <summary>Gets or sets a value that indicates location of temporary files. </summary>
      <keywords>SQLiteConnectionStringBuilder.TempStore property </keywords>
      <value>One of the <see cref="T:Devart.Data.SQLite.TempStoreMode" /> values. </value>
    </member>
    <member name="P:Devart.Data.SQLite.SQLiteConnectionStringBuilder.TempStoreDirectory">
      <summary>Gets or sets the directory where the temporary files are stored. </summary>
      <keywords>SQLiteConnectionStringBuilder.TempStoreDirectory property </keywords>
      <value>The directory where the temporary files are stored. An empty string by default, which denotes the current Windows user's temp directory. </value>
    </member>
    <member name="P:Devart.Data.SQLite.SQLiteConnectionStringBuilder.Threads">
      <summary>Gets or sets the maximal number of auxillary threads the prepared statement can launch to assist with a query. </summary>
      <keywords>SQLiteConnectionStringBuilder.Threads property </keywords>
      <value>The maximal number of auxillary threads the prepared statement can launch to assist with a query. </value>
    </member>
    <member name="P:Devart.Data.SQLite.SQLiteConnectionStringBuilder.TransactionScopeLocal">
      <summary>Enables support for non-distributed transactions in the TransactionScope implementation. </summary>
      <keywords>SQLiteConnectionStringBuilder.TransactionScopeLocal property </keywords>
      <value><see langword="true" />, if one-phase commit is used within TransactionScope; <see langword="false" /> otherwise. </value>
    </member>
    <member name="M:Devart.Data.SQLite.SQLiteConnectionStringBuilder.TryGetValue(System.String,System.Object@)">
      <summary>Attempts to get a key value. </summary>
      <keywords>SQLiteConnectionStringBuilder.TryGetValue method </keywords>
      <param name="keyword">Key name to obtain the value. </param>
      <param name="value">Value of the key. If operation fails, the value is null. </param>
      <returns>
        <see langword="true" /> if the operation is successful; <see langword="false" /> otherwise. </returns>
    </member>
    <member name="P:Devart.Data.SQLite.SQLiteConnectionStringBuilder.UTF16">
      <summary>Gets or sets a value indicating whether the connection uses UTF16 encoding. </summary>
      <keywords>SQLiteConnectionStringBuilder.UTF16 property </keywords>
      <value>If <b>true</b>, the  connection uses UTF16 encoding; otherwise it uses UTF8. </value>
    </member>
    <member name="P:Devart.Data.SQLite.SQLiteConnectionStringBuilder.ValidateConnection">
      <summary>Indicates whether to validate connections that are being taken from the pool. </summary>
      <keywords>SQLiteConnectionStringBuilder.ValidateConnection property </keywords>
      <value><see langword="true" />, if the connection should be validated when it is taken from the pool; <see langword="false" /> otherwise. </value>
    </member>
    <member name="P:Devart.Data.SQLite.SQLiteConnectionStringBuilder.Values">
      <summary>Collection of values in the <see cref="T:Devart.Data.SQLite.SQLiteConnectionStringBuilder" />. </summary>
      <keywords>SQLiteConnectionStringBuilder.Values property </keywords>
      <value>Collection of values. </value>
    </member>
    <member name="P:Devart.Data.SQLite.SQLiteConnectionStringBuilder.Version">
      <summary>Gets the version of the database engine, always 3. </summary>
      <keywords>SQLiteConnectionStringBuilder.Version property </keywords>
      <value>Always 3. </value>
    </member>
    <member name="P:Devart.Data.SQLite.SQLiteConnectionStringBuilder.WALAutoCheckpoint">
      <summary>Gets  or sets the write-ahead log auto-checkpoint interval. </summary>
      <keywords>SQLiteConnectionStringBuilder.WALAutoCheckpoint property </keywords>
      <value>The write-ahead log auto-checkpoint interval - the number of the write-ahead log pages, after which the checkpoint is performed. </value>
    </member>
    <member name="P:Devart.Data.SQLite.SQLiteConnectionStringBuilder.WritableSchema">
      <summary>Determines whether the SQLITE_MASTER tables can be changed using UPDATE, INSERT, and DELETE statements. </summary>
      <keywords>SQLiteConnectionStringBuilder.WritableSchema property </keywords>
      <value>If <b>true</b> - the SQLITE_MASTER tables in which database can be changed using UPDATE, INSERT, and DELETE statements; otherwise they cannot. </value>
    </member>
    <member name="T:Devart.Data.SQLite.SQLiteDataAdapter">
      <summary>Represents a set of data commands and a data source connection that are used to fill the <see cref="T:System.Data.DataSet" /> and update a SQLite data. </summary>
    </member>
    <member name="M:Devart.Data.SQLite.SQLiteDataAdapter.#ctor()">
      <summary>Initializes a new instance of the <see cref="T:Devart.Data.SQLite.SQLiteDataAdapter" /> class. </summary>
      <overloads>Initializes a new instance of the <see cref="T:Devart.Data.SQLite.SQLiteDataAdapter" /> class. </overloads>
    </member>
    <member name="M:Devart.Data.SQLite.SQLiteDataAdapter.#ctor(Devart.Data.SQLite.SQLiteCommand)">
      <summary>Initializes a new instance of the <see cref="T:Devart.Data.SQLite.SQLiteDataAdapter" /> class with the specified <see cref="T:Devart.Data.SQLite.SQLiteCommand" /> as the <see ref="P:Devart.Data.SQLite.SQLiteDataAdapter.SelectCommand" /> property. </summary>
      <param name="selectCommand">A <see cref="T:Devart.Data.SQLite.SQLiteCommand" /> that contains SQL SELECT statement, and is set as the <see cref="P:Devart.Data.SQLite.SQLiteDataAdapter.SelectCommand" /> property of the <see cref="T:Devart.Data.SQLite.SQLiteDataAdapter" />. </param>
    </member>
    <member name="M:Devart.Data.SQLite.SQLiteDataAdapter.#ctor(System.String,Devart.Data.SQLite.SQLiteConnection)">
      <summary>Initializes a new instance of the <see cref="T:Devart.Data.SQLite.SQLiteDataAdapter" /> class with a <see cref="P:Devart.Data.SQLite.SQLiteDataAdapter.SelectCommand" /> and a <see cref="T:Devart.Data.SQLite.SQLiteConnection" /> object. </summary>
      <param name="selectCommandText">A <see cref="T:System.String" /> that contains a SQL SELECT statement to be used as the <see cref="P:Devart.Data.SQLite.SQLiteCommand.CommandText" /> of the <see cref="P:Devart.Data.SQLite.SQLiteDataAdapter.SelectCommand" /> property of the <see cref="T:Devart.Data.SQLite.SQLiteDataAdapter" />. </param>
      <param name="selectConnection">A <see cref="T:Devart.Data.SQLite.SQLiteConnection" /> that represents the connection. </param>
    </member>
    <member name="M:Devart.Data.SQLite.SQLiteDataAdapter.#ctor(System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:Devart.Data.SQLite.SQLiteDataAdapter" /> class with a <see cref="P:Devart.Data.SQLite.SQLiteDataAdapter.SelectCommand" /> and a connection string. </summary>
      <param name="selectCommandText">A <see cref="T:System.String" /> that is a SELECT statement to be used as the <see cref="P:Devart.Data.SQLite.SQLiteCommand.CommandText" /> of the <see cref="P:Devart.Data.SQLite.SQLiteDataAdapter.SelectCommand" /> property of the <see cref="T:Devart.Data.SQLite.SQLiteDataAdapter" /> . </param>
      <param name="selectConnectionString">The connection string. </param>
    </member>
    <member name="P:Devart.Data.SQLite.SQLiteDataAdapter.DeleteCommand">
      <summary>Gets or sets a SQLite statement to delete records from the data set. </summary>
      <keywords>SQLiteDataAdapter.DeleteCommand property </keywords>
      <value>A <see cref="T:Devart.Data.SQLite.SQLiteCommand" /> used during an update operation to delete records in SQLite that correspond to deleted rows in the <see cref="T:System.Data.DataSet" />. </value>
    </member>
    <member name="P:Devart.Data.SQLite.SQLiteDataAdapter.InsertCommand">
      <summary>Gets or sets a SQLite statement to insert new records into the data source. </summary>
      <keywords>SQLiteDataAdapter.InsertCommand property </keywords>
      <value>A <see cref="T:Devart.Data.SQLite.SQLiteCommand" /> used during an update operation to insert records in the data source that correspond to new rows in the <see cref="T:System.Data.DataSet" />. </value>
    </member>
    <member name="E:Devart.Data.SQLite.SQLiteDataAdapter.RowUpdated">
      <summary>Occurs during <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> after a command is executed against the data source. The attempt to update is made, so the event fires. </summary>
      <keywords>SQLiteDataAdapter.RowUpdated event </keywords>
    </member>
    <member name="E:Devart.Data.SQLite.SQLiteDataAdapter.RowUpdating">
      <summary>Occurs during <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> before a command is executed against the data source. The attempt to update is made, so the event fires. </summary>
      <keywords>SQLiteDataAdapter.RowUpdating event </keywords>
    </member>
    <member name="P:Devart.Data.SQLite.SQLiteDataAdapter.SelectCommand">
      <summary>Gets or sets a SQLite statement used to select records in the data source. </summary>
      <keywords>SQLiteDataAdapter.SelectCommand property </keywords>
      <value>A <see cref="T:Devart.Data.SQLite.SQLiteCommand" /> that is used during a fill operation to select records from the data source for placement in the <see cref="T:System.Data.DataSet" />. </value>
    </member>
    <member name="P:Devart.Data.SQLite.SQLiteDataAdapter.TableMappings">
      <summary>Gets a collection that provides the master mapping between a source table and a <see cref="T:Devart.Data.SQLite.SQLiteDataTable" />. </summary>
      <keywords>SQLiteDataAdapter.TableMappings property </keywords>
      <value>A collection that provides the master mapping between the returned records and the <see cref="T:System.Data.DataSet" />. The default value is an empty collection. </value>
    </member>
    <member name="P:Devart.Data.SQLite.SQLiteDataAdapter.UpdateBatchSize">
      <summary>Gets or sets a value that enables or disables batch processing support, and specifies the number of commands that can be executed in a batch. </summary>
      <keywords>SQLiteDataAdapter.UpdateBatchSize property </keywords>
      <value>The number of rows to process per batch. </value>
    </member>
    <member name="P:Devart.Data.SQLite.SQLiteDataAdapter.UpdateCommand">
      <summary>Gets or sets a SQLite statement used to update records in the data source. </summary>
      <keywords>SQLiteDataAdapter.UpdateCommand property </keywords>
      <value>A <see cref="T:Devart.Data.SQLite.SQLiteCommand" /> used during an update operation to update records in the data source that correspond to modified rows in the <see cref="T:System.Data.DataSet" />. </value>
    </member>
    <member name="T:Devart.Data.SQLite.SQLiteDataReader">
      <summary>Reads a forward-only stream of rows from SQLite. </summary>
    </member>
    <member name="M:Devart.Data.SQLite.SQLiteDataReader.Close()">
      <summary>Closes the <see cref="T:Devart.Data.SQLite.SQLiteDataReader" /> object. </summary>
      <keywords>SQLiteDataReader.Close method </keywords>
    </member>
    <member name="P:Devart.Data.SQLite.SQLiteDataReader.EndOfData">
      <summary>Indicates whether the <see cref="T:Devart.Data.SQLite.SQLiteDataReader" /> has been read completely. </summary>
      <keywords>SQLiteDataReader.EndOfData property </keywords>
      <value>
        <see langword="true" /> if there is no more data in <see cref="T:Devart.Data.SQLite.SQLiteDataReader" />. This property is <see langword="false" /> if there is more data to read, or there were no data at all. </value>
    </member>
    <member name="P:Devart.Data.SQLite.SQLiteDataReader.FieldCount">
      <summary>Gets the number of columns in the current row. </summary>
      <keywords>SQLiteDataReader.FieldCount property </keywords>
      <value>When not positioned in a valid record set, 0; otherwise the number of columns in the current record. The default value is -1. </value>
    </member>
    <member name="M:Devart.Data.SQLite.SQLiteDataReader.GetBoolean(System.Int32)">
      <summary>Gets the value of the specified column as a Boolean. </summary>
      <keywords>SQLiteDataReader.GetBoolean method </keywords>
      <param name="i"> </param>
      <returns>The value of the column. </returns>
    </member>
    <member name="M:Devart.Data.SQLite.SQLiteDataReader.GetByte(System.Int32)">
      <summary>Gets the value of the specified column as a byte. </summary>
      <keywords>SQLiteDataReader.GetByte method </keywords>
      <param name="i"> </param>
      <returns>The value of the specified column as a byte. </returns>
    </member>
    <member name="M:Devart.Data.SQLite.SQLiteDataReader.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)">
      <summary>Reads a stream of bytes from the specified column offset into the buffer as an array starting at the given buffer offset. </summary>
      <keywords>SQLiteDataReader.GetBytes method </keywords>
      <param name="i">The zero-based column ordinal. </param>
      <param name="fieldOffset">The index within the field where the read operation is to begin. </param>
      <param name="buffer">The buffer into which to read the stream of bytes. </param>
      <param name="bufferOffset">The index within the buffer where the write operation is to begin. </param>
      <param name="length">The maximum length to copy into the buffer. </param>
      <returns>
        <para>The actual number of bytes read.</para> </returns>
    </member>
    <member name="M:Devart.Data.SQLite.SQLiteDataReader.GetChar(System.Int32)">
      <summary>Gets the value of the specified column as a single character. </summary>
      <keywords>SQLiteDataReader.GetChar method </keywords>
      <param name="i"> </param>
      <returns>The value of the specified column as a character. </returns>
    </member>
    <member name="M:Devart.Data.SQLite.SQLiteDataReader.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)">
      <summary>Reads a stream of characters from the specified column offset into the buffer as an array starting at the given buffer offset. </summary>
      <keywords>SQLiteDataReader.GetChars method </keywords>
      <param name="i">The zero-based column ordinal. </param>
      <param name="fieldOffset">The index within the field where the read operation is to begin. </param>
      <param name="buffer">The buffer into which to copy data. </param>
      <param name="bufferOffset">The index within the buffer where the write operation is to begin. </param>
      <param name="length">The maximum number of characters to read. </param>
      <returns>
        <para>The actual number of characters read.</para> </returns>
    </member>
    <member name="M:Devart.Data.SQLite.SQLiteDataReader.GetDataTypeName(System.Int32)">
      <summary>Gets the name of the source data type. </summary>
      <keywords>SQLiteDataReader.GetDataTypeName method </keywords>
      <param name="i"> </param>
      <returns>The name of the back-end data type. </returns>
    </member>
    <member name="M:Devart.Data.SQLite.SQLiteDataReader.GetDateTime(System.Int32)">
      <summary>Gets the value of the specified column as a <see cref="T:System.DateTime" /> object. </summary>
      <keywords>SQLiteDataReader.GetDateTime method </keywords>
      <param name="i"> </param>
      <returns>The value of the specified column. </returns>
    </member>
    <member name="M:Devart.Data.SQLite.SQLiteDataReader.GetDateTimeOffset(System.Int32)">
      <summary>Gets the value of the specified column as an <see cref="T:System.DateTimeOffset" /> object. </summary>
      <keywords>SQLiteDataReader.GetDateTimeOffset method </keywords>
      <param name="i">The zero-based column ordinal. </param>
      <returns>The value of the specified column as an <see cref="T:System.DateTimeOffset" /> object. </returns>
    </member>
    <member name="M:Devart.Data.SQLite.SQLiteDataReader.GetDecimal(System.Int32)">
      <summary>Gets the value of the specified column as a <see cref="T:System.Decimal" /> object. </summary>
      <keywords>SQLiteDataReader.GetDecimal method </keywords>
      <param name="i"> </param>
      <returns>The value of the specified column. </returns>
    </member>
    <member name="M:Devart.Data.SQLite.SQLiteDataReader.GetDouble(System.Int32)">
      <summary>Gets the value of the specified column as a double-precision floating point number. </summary>
      <keywords>SQLiteDataReader.GetDouble method </keywords>
      <param name="i"> </param>
      <returns>The value of the specified column. </returns>
    </member>
    <member name="M:Devart.Data.SQLite.SQLiteDataReader.GetEnumerator()">
      <summary>Fills <see cref="T:System.Collection.IEnumerator" /> object with data from <see cref="T:Devart.Data.SQLite.SQLiteDataReader" />. </summary>
      <keywords>SQLiteDataReader.GetEnumerator method </keywords>
      <returns><see cref="T:System.Collection.IEnumerator" /> object to be populated with data. </returns>
    </member>
    <member name="M:Devart.Data.SQLite.SQLiteDataReader.GetFieldType(System.Int32)">
      <summary>Gets the <see cref="T:System.Type" /> that is the data type of the object. </summary>
      <keywords>SQLiteDataReader.GetFieldType method </keywords>
      <param name="i"> </param>
      <returns>The <see cref="T:System.Type" /> that is the data type of the object. </returns>
    </member>
    <member name="M:Devart.Data.SQLite.SQLiteDataReader.GetFloat(System.Int32)">
      <summary>Gets the value of the specified column as a single-precision floating point number. </summary>
      <keywords>SQLiteDataReader.GetFloat method </keywords>
      <param name="i"> </param>
      <returns>The value of the specified column. </returns>
    </member>
    <member name="M:Devart.Data.SQLite.SQLiteDataReader.GetGuid(System.Int32)">
      <summary>Gets the value of the specified column as a globally-unique identifier (GUID). </summary>
      <keywords>SQLiteDataReader.GetGuid method </keywords>
      <param name="i"> </param>
      <returns>The value of the specified column. </returns>
    </member>
    <member name="M:Devart.Data.SQLite.SQLiteDataReader.GetInt16(System.Int32)">
      <summary>Gets the value of the specified column as a 16-bit signed integer. </summary>
      <keywords>SQLiteDataReader.GetInt16 method </keywords>
      <param name="i"> </param>
      <returns>The value of the specified column. </returns>
    </member>
    <member name="M:Devart.Data.SQLite.SQLiteDataReader.GetInt32(System.Int32)">
      <summary>Gets the value of the specified column as a 32-bit signed integer. </summary>
      <keywords>SQLiteDataReader.GetInt32 method </keywords>
      <param name="i"> </param>
      <returns>The value of the specified column. </returns>
    </member>
    <member name="M:Devart.Data.SQLite.SQLiteDataReader.GetInt64(System.Int32)">
      <summary>Gets the value of the specified column as a 64-bit signed integer. </summary>
      <keywords>SQLiteDataReader.GetInt64 method </keywords>
      <param name="i"> </param>
      <returns>The value of the specified column. </returns>
    </member>
    <member name="M:Devart.Data.SQLite.SQLiteDataReader.GetName(System.Int32)">
      <summary>
        <para>Gets the name of the specified column.</para> </summary>
      <keywords>SQLiteDataReader.GetName method </keywords>
      <param name="i"> </param>
      <returns>
        <para>A string that is the name of the specified column.</para> </returns>
    </member>
    <member name="M:Devart.Data.SQLite.SQLiteDataReader.GetOrdinal(System.String)">
      <summary>Gets the column ordinal, given the name of the column. </summary>
      <keywords>SQLiteDataReader.GetOrdinal method </keywords>
      <param name="name">The name of the column. </param>
    </member>
    <member name="M:Devart.Data.SQLite.SQLiteDataReader.GetProviderSpecificFieldType(System.Int32)">
      <summary>Gets the <see cref="T:System.Type" /> that is the provider-specific data type of the object. </summary>
      <keywords>SQLiteDataReader.GetProviderSpecificFieldType method </keywords>
      <param name="i"> </param>
      <returns>The <see cref="T:System.Type" /> that is the provider-specific data type of the object. </returns>
    </member>
    <member name="M:Devart.Data.SQLite.SQLiteDataReader.GetProviderSpecificValue(System.Int32)">
      <summary>Gets the value of the specified column. If possible, a provider-specific type is used. </summary>
      <keywords>SQLiteDataReader.GetProviderSpecificValue method </keywords>
      <param name="i"> </param>
      <returns>The value to return. </returns>
    </member>
    <member name="M:Devart.Data.SQLite.SQLiteDataReader.GetProviderSpecificValues(System.Object[])">
      <summary>Gets all column values for the current row. If possible, a provider-specific type is used. </summary>
      <keywords>SQLiteDataReader.GetProviderSpecificValues method </keywords>
      <param name="values">An array of <see cref="T:System.Object" /> into which to copy the column values. </param>
      <returns>The number of instances of <see cref="T:System.Object" /> in the array. </returns>
    </member>
    <member name="M:Devart.Data.SQLite.SQLiteDataReader.GetSQLiteBlob(System.Int32)">
      <summary>Gets the value of the specified column as a <see cref="T:Devart.Data.SQLite.SQLiteBlob" /> object. </summary>
      <keywords>SQLiteDataReader.GetSQLiteBlob method </keywords>
      <param name="i">The zero-based column ordinal. </param>
      <returns>The value of the specified column as a <see cref="T:Devart.Data.SQLite.SQLiteBlob" /> object. </returns>
      <overloads>Gets the value of the specified column as a <see cref="T:Devart.Data.SQLite.SQLiteBlob" /> object. </overloads>
    </member>
    <member name="M:Devart.Data.SQLite.SQLiteDataReader.GetSQLiteBlob(System.String)">
      <summary>Gets the value of the specified column as a <see cref="T:Devart.Data.SQLite.SQLiteBlob" /> object. </summary>
      <keywords>SQLiteDataReader.GetSQLiteBlob method </keywords>
      <param name="name">The name of the column to get value of. </param>
      <returns>The value of the specified column as a <see cref="T:Devart.Data.SQLite.SQLiteBlob" /> object. </returns>
    </member>
    <member name="M:Devart.Data.SQLite.SQLiteDataReader.GetSQLiteDateTime(System.Int32)">
      <summary>Gets the value of the specified column as a <see cref="T:Devart.Data.SQLite.SQLiteDateTime" /> object. </summary>
      <keywords>SQLiteDataReader.GetSQLiteDateTime method </keywords>
      <param name="i">The zero-based column ordinal. </param>
      <returns>The value of the specified column as a <see cref="T:Devart.Data.SQLite.SQLiteDateTime" /> object. </returns>
      <overloads>Gets the value of the specified column as a <see cref="T:Devart.Data.SQLite.SQLiteDateTime" /> object. </overloads>
    </member>
    <member name="M:Devart.Data.SQLite.SQLiteDataReader.GetSQLiteDateTime(System.String)">
      <summary>Gets the value of the specified column as a <see cref="T:Devart.Data.SQLite.SQLiteDateTime" /> object. </summary>
      <keywords>SQLiteDataReader.GetSQLiteDateTime method </keywords>
      <param name="name">The name of the column to get value of. </param>
      <returns>The value of the specified column as a <see cref="T:Devart.Data.SQLite.SQLiteDateTime" /> object. </returns>
    </member>
    <member name="M:Devart.Data.SQLite.SQLiteDataReader.GetSQLiteText(System.Int32)">
      <summary>Gets the value of the specified column as a <see cref="T:Devart.Data.SQLite.SQLiteText" /> object. </summary>
      <keywords>SQLiteDataReader.GetSQLiteText method </keywords>
      <param name="i">The zero-based column ordinal. </param>
      <returns>The value of the specified column as a <see cref="T:Devart.Data.SQLite.SQLiteDataText" /> object. </returns>
      <overloads>Gets the value of the specified column as a <see cref="T:Devart.Data.SQLite.SQLiteText" /> object. </overloads>
    </member>
    <member name="M:Devart.Data.SQLite.SQLiteDataReader.GetSQLiteText(System.String)">
      <summary>Gets the value of the specified column as a <see cref="T:Devart.Data.SQLite.SQLiteText" /> object. </summary>
      <keywords>SQLiteDataReader.GetSQLiteText method </keywords>
      <param name="name">The name of the column to get value of. </param>
      <returns>The value of the specified column as a <see cref="T:Devart.Data.SQLite.SQLiteDataText" /> object. </returns>
    </member>
    <member name="M:Devart.Data.SQLite.SQLiteDataReader.GetSQLiteType(System.Int32)">
      <summary>Gets the value of the specified column as a <see cref="T:Devart.Data.SQLite.SQLiteType" /> object. </summary>
      <keywords>SQLiteDataReader.GetSQLiteType method </keywords>
      <param name="i">The zero-based column ordinal. </param>
      <returns>The value of the specified column as a <see cref="T:Devart.Data.SQLite.SQLiteType" /> object. </returns>
      <overloads>Gets the value of the specified column as a <see cref="T:Devart.Data.SQLite.SQLiteType" /> object. </overloads>
    </member>
    <member name="M:Devart.Data.SQLite.SQLiteDataReader.GetSQLiteType(System.String)">
      <summary>Gets the value of the specified column as a <see cref="T:Devart.Data.SQLite.SQLiteType" /> object. </summary>
      <keywords>SQLiteDataReader.GetSQLiteType method </keywords>
      <param name="name">The name of the column to get value of. </param>
      <returns>The value of the specified column as a <see cref="T:Devart.Data.SQLite.SQLiteType" /> object. </returns>
    </member>
    <member name="M:Devart.Data.SQLite.SQLiteDataReader.GetSchemaTable()">
      <summary>Returns a <see cref="T:Devart.Data.SQLite.SQLiteDataReader" /> that describes the column metadata of the <see cref="T:Devart.Data.SQLite.SQLiteDataReader" />. </summary>
      <keywords>SQLiteDataReader.GetSchemaTable method </keywords>
      <returns>A <see cref="T:System.Data.DataTable" /> that describes the column metadata. </returns>
    </member>
    <member name="M:Devart.Data.SQLite.SQLiteDataReader.GetString(System.Int32)">
      <summary>Gets the value of the specified column as a string. </summary>
      <keywords>SQLiteDataReader.GetString method </keywords>
      <param name="i"> </param>
      <returns>The value of the specified column. </returns>
    </member>
    <member name="M:Devart.Data.SQLite.SQLiteDataReader.GetTimeSpan(System.Int32)">
      <summary>Gets the value of the specified column as a <see cref="T:System.TimeSpan" /> object. </summary>
      <keywords>SQLiteDataReader.GetTimeSpan method </keywords>
      <param name="i">The zero-based column ordinal. </param>
      <returns>The value of the specified column as a <see cref="T:System.TimeSpan" /> object. </returns>
      <overloads>Gets the value of the specified column as a <see cref="T:System.TimeSpan" /> object. </overloads>
    </member>
    <member name="M:Devart.Data.SQLite.SQLiteDataReader.GetTimeSpan(System.String)">
      <summary>Gets the value of the specified column as a <see cref="T:System.TimeSpan" /> object. </summary>
      <keywords>SQLiteDataReader.GetTimeSpan method </keywords>
      <param name="name">The name of the column to get value of. </param>
      <returns>The value of the specified column as a <see cref="T:System.TimeSpan" /> object. </returns>
    </member>
    <member name="M:Devart.Data.SQLite.SQLiteDataReader.GetValue(System.Int32)">
      <summary>Gets the value of the specified column in its native format. </summary>
      <keywords>SQLiteDataReader.GetValue method </keywords>
      <param name="i"> </param>
      <returns>The value to return. </returns>
    </member>
    <member name="M:Devart.Data.SQLite.SQLiteDataReader.GetValues(System.Object[])">
      <summary>Gets all column values for the current row. </summary>
      <keywords>SQLiteDataReader.GetValues method </keywords>
      <param name="values">An array of <see cref="T:System.Object" /> into which to copy the attribute column values. </param>
      <returns>The number of instances of <see cref="T:System.Object" /> in the array. </returns>
    </member>
    <member name="P:Devart.Data.SQLite.SQLiteDataReader.HasRows">
      <summary>Gets a value indicating whether the <see cref="T:Devart.Data.SQLite.SQLiteDataReader" /> contains one or more rows. </summary>
      <keywords>SQLiteDataReader.HasRows property </keywords>
      <value>
        <see langword="true" /> if the <see cref="T:Devart.Data.SQLite.SQLiteDataReader" /> contains one or more rows; otherwise, <see langword="false" />. </value>
    </member>
    <member name="M:Devart.Data.SQLite.SQLiteDataReader.IsDBNull(System.Int32)">
      <summary>Gets a value indicating whether the column contains non-existent or missing values. </summary>
      <keywords>SQLiteDataReader.IsDBNull method </keywords>
      <param name="i"> </param>
      <returns>
        <see langword="true" /> if the specified column value is equivalent to <see cref="T:System.DBNull" />; otherwise, <see langword="false" />. </returns>
    </member>
    <member name="M:Devart.Data.SQLite.SQLiteDataReader.NextResult()">
      <summary>Advances the data reader to the next result, when reading the results of batch SQL statements. </summary>
      <keywords>SQLiteDataReader.NextResult method </keywords>
      <returns>
        <see langword="true" /> if there are more result sets; otherwise, <see langword="false" />. </returns>
    </member>
    <member name="M:Devart.Data.SQLite.SQLiteDataReader.Read()">
      <summary>Advances the <see cref="T:Devart.Data.SQLite.SQLiteDataReader" /> to the next record. </summary>
      <keywords>SQLiteDataReader.Read method </keywords>
      <returns>
        <see langword="true" /> if there are more rows; otherwise, <see langword="false" />. </returns>
    </member>
    <member name="P:Devart.Data.SQLite.SQLiteDataReader.RecordsAffected">
      <summary>Gets the number of rows changed, inserted, or deleted by execution of the SQL statement. </summary>
      <keywords>SQLiteDataReader.RecordsAffected property </keywords>
      <value>The number of rows changed, inserted, or deleted. -1 for SELECT statements; 0 if no rows were affected, or the statement failed. </value>
    </member>
    <member name="T:Devart.Data.SQLite.SQLiteDataSet">
      <summary>Represents an in-memory cache of data with support for SQLite-specific features. </summary>
    </member>
    <member name="M:Devart.Data.SQLite.SQLiteDataSet.#ctor()">
      <summary>Initializes a new instance of a <see cref="T:Devart.Data.SQLite.SQLiteDataSet" /> class with the given name. </summary>
    </member>
    <member name="M:Devart.Data.SQLite.SQLiteDataSet.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext,System.Boolean)">
      <summary>This API supports the .NET Framework infrastructure and is not intended to be used directly from your code. </summary>
      <param name="info"> </param>
      <param name="context"> </param>
      <param name="ConstructSchema"> </param>
    </member>
    <member name="P:Devart.Data.SQLite.SQLiteDataSet.Connection">
      <summary>Associated <see cref="T:Devart.Data.SQLite.SQLiteConnection" />. </summary>
      <keywords>SQLiteDataSet.Connection property </keywords>
      <value>
        <see cref="T:Devart.Data.SQLite.SQLiteConnection" /> used by <see cref="T:Devart.Data.SQLite.SQLiteDataSet" />. </value>
    </member>
    <member name="M:Devart.Data.SQLite.SQLiteDataSet.CreateDataTable()">
      <summary>Creates and returns new <see cref="T:Devart.Data.SQLite.SQLiteDataTable" /> object. </summary>
      <keywords>SQLiteDataSet.CreateDataTable method </keywords>
      <returns>The new <see cref="T:Devart.Data.SQLite.SQLiteDataTable" /> object. </returns>
    </member>
    <member name="P:Devart.Data.SQLite.SQLiteDataSet.Relations">
      <summary>Gets the collection of relations within the <see cref="T:Devart.Data.SQLite.SQLiteDataSet" /> </summary>
      <keywords>SQLiteDataSet.Relations property </keywords>
      <value>The collection of relations. </value>
    </member>
    <member name="P:Devart.Data.SQLite.SQLiteDataSet.Tables">
      <summary>Gets collection of tables </summary>
      <keywords>SQLiteDataSet.Tables property </keywords>
      <value>Collection of tables in DataSet </value>
    </member>
    <member name="T:Devart.Data.SQLite.SQLiteDataTable">
      <summary>Represents a single object that provides all of the functionality needed to retrieve and manipulate data from a SQLite data source. </summary>
    </member>
    <member name="M:Devart.Data.SQLite.SQLiteDataTable.#ctor()">
      <summary>Initializes a new instance of the <see cref="T:Devart.Data.SQLite.SQLiteDataTable" /> class. </summary>
      <overloads>Initializes a new instance of the <see cref="T:Devart.Data.SQLite.SQLiteDataTable" /> class. </overloads>
    </member>
    <member name="M:Devart.Data.SQLite.SQLiteDataTable.#ctor(Devart.Data.SQLite.SQLiteCommand)">
      <summary>Initializes a new instance of the <see cref="T:Devart.Data.SQLite.SQLiteDataTable" /> class. </summary>
      <param name="selectCommand">A <see cref="T:Devart.Data.SQLite.SQLiteCommand" /> object used to select rows from the data source. </param>
    </member>
    <member name="M:Devart.Data.SQLite.SQLiteDataTable.#ctor(Devart.Data.SQLite.SQLiteCommand,Devart.Data.SQLite.SQLiteConnection)">
      <summary>Initializes a new instance of the <see cref="T:Devart.Data.SQLite.SQLiteDataTable" /> class. </summary>
      <param name="selectCommand">A <see cref="T:Devart.Data.SQLite.SQLiteCommand" /> object used to select rows from the data source. </param>
      <param name="connection">A <see cref="T:Devart.Data.SQLite.SQLiteConnection" /> used to connect to the data source. </param>
    </member>
    <member name="M:Devart.Data.SQLite.SQLiteDataTable.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:Devart.Data.SQLite.SQLiteDataTable" /> class. </summary>
      <param name="tableName">Name of the table to work with. </param>
    </member>
    <member name="M:Devart.Data.SQLite.SQLiteDataTable.#ctor(System.String,Devart.Data.SQLite.SQLiteConnection)">
      <summary>Initializes a new instance of the <see cref="T:Devart.Data.SQLite.SQLiteDataTable" /> class. </summary>
      <param name="selectCommandText">The text of the selection command. </param>
      <param name="connection">A <see cref="T:Devart.Data.SQLite.SQLiteConnection" /> used to connect to the data source. </param>
    </member>
    <member name="M:Devart.Data.SQLite.SQLiteDataTable.#ctor(System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:Devart.Data.SQLite.SQLiteDataTable" /> class. </summary>
      <param name="selectCommandText">The text of the selection command. </param>
      <param name="connectionString">Connection string used to connect to the data source. </param>
    </member>
    <member name="M:Devart.Data.SQLite.SQLiteDataTable.Clone()">
      <summary>Clones the current instance of <see cref="T:Devart.Data.SQLite.SQLiteDataTable" />. </summary>
      <keywords>SQLiteDataTable.Clone method </keywords>
      <returns>A new instance of <see cref="T:Devart.Data.SQLite.SQLiteDataTable" />. </returns>
    </member>
    <member name="P:Devart.Data.SQLite.SQLiteDataTable.Connection">
      <summary>Gets or sets the <see cref="T:Devart.Data.SQLite.SQLiteConnection" /> used to connect to the data source. </summary>
      <keywords>SQLiteDataTable.Connection property </keywords>
      <value>A <see cref="T:Devart.Data.SQLite.SQLiteConnection" /> object which provides a connection to the data source. </value>
    </member>
    <member name="P:Devart.Data.SQLite.SQLiteDataTable.DeleteCommand">
      <summary>Gets or sets a SQLite statement to delete records from the data set. </summary>
      <keywords>SQLiteDataTable.DeleteCommand property </keywords>
      <value>A <see cref="T:Devart.Data.SQLite.SQLiteCommand" /> used during an update operation to delete records in the data source that correspond to deleted rows in the <see cref="T:System.Data.DataSet" />. </value>
    </member>
    <member name="P:Devart.Data.SQLite.SQLiteDataTable.InsertCommand">
      <summary>Gets or sets a SQLite statement to insert new records into the data source. </summary>
      <keywords>SQLiteDataTable.InsertCommand property </keywords>
      <value>A <see cref="T:Devart.Data.SQLite.SQLiteCommand" /> used during an update operation to insert records in the data source that correspond to new rows in the <see cref="T:System.Data.DataSet" />. </value>
    </member>
    <member name="P:Devart.Data.SQLite.SQLiteDataTable.RefreshMode">
      <summary>This feature is not supported in dotConnect for SQLite. </summary>
      <keywords>SQLiteDataTable.RefreshMode property </keywords>
    </member>
    <member name="P:Devart.Data.SQLite.SQLiteDataTable.RefreshingFields">
      <summary>Gets or sets list of fields whose values should be retrieved after a DML statement execution. </summary>
      <keywords>SQLiteDataTable.RefreshingFields property </keywords>
      <value>The string containing list of field names separated by semicolon. </value>
    </member>
    <member name="E:Devart.Data.SQLite.SQLiteDataTable.RowUpdated">
      <summary>Occurs during <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> after a command is executed against the data source. The attempt to update is made, so the event fires. </summary>
      <keywords>SQLiteDataTable.RowUpdated event </keywords>
    </member>
    <member name="E:Devart.Data.SQLite.SQLiteDataTable.RowUpdating">
      <summary>Occurs during <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> before a command is executed against the data source. The attempt to update is made, so the event fires. </summary>
      <keywords>SQLiteDataTable.RowUpdating event </keywords>
    </member>
    <member name="P:Devart.Data.SQLite.SQLiteDataTable.SelectCommand">
      <summary>Gets or sets a SQLite statement used to select records in the data source. </summary>
      <keywords>SQLiteDataTable.SelectCommand property </keywords>
      <value>A <see cref="T:Devart.Data.SQLite.SQLiteCommand" /> that is used during a fill operation to select records from the data source for placement in the <see cref="T:System.Data.DataSet" />. </value>
    </member>
    <member name="P:Devart.Data.SQLite.SQLiteDataTable.TableMapping">
      <summary>Gets a <see cref="T:System.Data.Common.DataTableMapping" /> object that provides the master mapping between a source table and a <see cref="T:Devart.Data.SQLite.SQLiteDataTable" />. </summary>
      <keywords>SQLiteDataTable.TableMapping property </keywords>
      <value>A <see cref="T:System.Data.Common.DataTableMapping" /> object that provides the master mapping between the returned records and the <see cref="T:Devart.Data.SQLite.SQLiteDataTable" />. </value>
    </member>
    <member name="P:Devart.Data.SQLite.SQLiteDataTable.UpdateCommand">
      <summary>Gets or sets a SQLite statement used to update records in the data source. </summary>
      <keywords>SQLiteDataTable.UpdateCommand property </keywords>
      <value>A <see cref="T:Devart.Data.SQLite.SQLiteCommand" /> used during an update operation to update records in the data source that correspond to modified rows in the <see cref="T:System.Data.DataSet" />. </value>
    </member>
    <member name="P:Devart.Data.SQLite.SQLiteDataTable.UpdatingFields">
      <summary>Gets or sets string containing list of field names used to generate update commands. </summary>
      <keywords>SQLiteDataTable.UpdatingFields property </keywords>
      <value>The string containing list of field names separated by semicolon. </value>
    </member>
    <member name="P:Devart.Data.SQLite.SQLiteDataTable.UpdatingKeyFields">
      <summary>Gets or sets string containing list of key field names separated by semicolon. They are used to generate update commands. </summary>
      <keywords>SQLiteDataTable.UpdatingKeyFields property </keywords>
      <value>The string containing list of key field names separated by semicolon. </value>
    </member>
    <member name="P:Devart.Data.SQLite.SQLiteDataTable.UpdatingTable">
      <summary>Gets or sets table name to generate update statements for. </summary>
      <keywords>SQLiteDataTable.UpdatingTable property </keywords>
      <value>The name of the table. </value>
    </member>
    <member name="T:Devart.Data.SQLite.SQLiteDateFormats">
      <summary>Determines the format of datetime fields. </summary>
    </member>
    <member name="F:Devart.Data.SQLite.SQLiteDateFormats.ISO8601">
      <summary>Datetime fields are formatted according to ISO8601. </summary>
    </member>
    <member name="F:Devart.Data.SQLite.SQLiteDateFormats.Ticks">
      <summary>Datetime are expressed as ticks. </summary>
    </member>
    <member name="T:Devart.Data.SQLite.SQLiteDateTime">
      <summary>Represents the SQLite datetime data type. </summary>
    </member>
    <member name="M:Devart.Data.SQLite.SQLiteDateTime.#ctor(System.DateTime)">
      <summary>Initializes a new instance of the <see cref="T:Devart.Data.SQLite.SQLiteDateTime" /> structure with the specified <see cref="T:System.DateTime" />. </summary>
      <param name="value">The specified <see cref="T:System.DateTime" />. </param>
      <overloads>Initializes a new instance of the <see cref="T:Devart.Data.SQLite.SQLiteDateTime" /> structure. </overloads>
    </member>
    <member name="M:Devart.Data.SQLite.SQLiteDateTime.#ctor(System.DateTime,System.Int32,System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:Devart.Data.SQLite.SQLiteDateTime" /> structure with the specified <see cref="T:System.DateTime" />, and time zone offset in hours and minutes. </summary>
      <param name="value">The specified <see cref="T:System.DateTime" /> value. </param>
      <param name="tzhour">The hours part of time zone offset relative to UTC. </param>
      <param name="tzminute">The minutes part of time zone offset relative to UTC. </param>
    </member>
    <member name="M:Devart.Data.SQLite.SQLiteDateTime.#ctor(System.DateTime,System.TimeSpan)">
      <summary>Initializes a new instance of the <see cref="T:Devart.Data.SQLite.SQLiteDateTime" /> structure with the specified <see cref="T:System.DateTime" />, and time zone offset, specified as <see cref="T:System.TimeSpan" />. </summary>
      <param name="value">The specified <see cref="T:System.DateTime" /> value. </param>
      <param name="timeZone">The specified time zone offset. </param>
    </member>
    <member name="M:Devart.Data.SQLite.SQLiteDateTime.#ctor(System.Int32,System.Int32,System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:Devart.Data.SQLite.SQLiteDateTime" /> structure with the specified year, month, and day. </summary>
      <param name="year">The specified year. </param>
      <param name="month">The specified month. </param>
      <param name="day">The specified day. </param>
    </member>
    <member name="M:Devart.Data.SQLite.SQLiteDateTime.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:Devart.Data.SQLite.SQLiteDateTime" /> structure with the specified year, month, day, hour, minute, and second. </summary>
      <param name="year">The specified year. </param>
      <param name="month">The specified month. </param>
      <param name="day">The specified day. </param>
      <param name="hour">The specified hour. </param>
      <param name="minute">The specified minute. </param>
      <param name="second">The specified second. </param>
    </member>
    <member name="M:Devart.Data.SQLite.SQLiteDateTime.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:Devart.Data.SQLite.SQLiteDateTime" /> structure with the specified year, month, day, hour, minute, second, and microsecond. </summary>
      <param name="year">The specified year. </param>
      <param name="month">The specified month. </param>
      <param name="day">The specified day. </param>
      <param name="hour">The specified hour. </param>
      <param name="minute">The specified minute. </param>
      <param name="second">The specified second. </param>
      <param name="microsecond">The specified microsecond. </param>
    </member>
    <member name="M:Devart.Data.SQLite.SQLiteDateTime.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:Devart.Data.SQLite.SQLiteDateTime" /> structure with the specified year, month, day, hour, minute, second, and microsecond and with time zone offset in hours and minutes. </summary>
      <param name="year">The specified year. </param>
      <param name="month">The specified month. </param>
      <param name="day">The specified day. </param>
      <param name="hour">The specified hour. </param>
      <param name="minute">The specified minute. </param>
      <param name="second">The specified second. </param>
      <param name="microsecond">The specified microsecond. </param>
      <param name="tzhour">The hours part of time zone offset relative to UTC. </param>
      <param name="tzminute">The minutes part of time zone offset relative to UTC. </param>
    </member>
    <member name="M:Devart.Data.SQLite.SQLiteDateTime.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.TimeSpan)">
      <summary>Initializes a new instance of the <see cref="T:Devart.Data.SQLite.SQLiteDateTime" /> structure with the specified year, month, day, hour, minute, second, and microsecond and with time zone offset, specified as <see cref="T:System.TimeSpan" />. </summary>
      <param name="year">The specified year. </param>
      <param name="month">The specified month. </param>
      <param name="day">The specified day. </param>
      <param name="hour">The specified hour. </param>
      <param name="minute">The specified minute. </param>
      <param name="second">The specified second. </param>
      <param name="microsecond">The specified microsecond. </param>
      <param name="timeZone">The specified time zone offset. </param>
    </member>
    <member name="M:Devart.Data.SQLite.SQLiteDateTime.#ctor(System.Int32,System.Int32,System.Int32,System.TimeSpan)">
      <summary>Initializes a new instance of the <see cref="T:Devart.Data.SQLite.SQLiteDateTime" /> structure with the specified year, month, and day and with time zone offset, specified as <see cref="T:System.TimeSpan" />. </summary>
      <param name="year">The specified year. </param>
      <param name="month">The specified month. </param>
      <param name="day">The specified day. </param>
      <param name="timeZone">The specified time zone offset. </param>
    </member>
    <member name="M:Devart.Data.SQLite.SQLiteDateTime.#ctor(System.Int32,System.Int64)">
      <summary>Initializes a new instance of the <see cref="T:Devart.Data.SQLite.SQLiteDateTime" /> structure with the specified total number of days and microseconds. </summary>
      <param name="days">The specified number of days in the date part of the structure. </param>
      <param name="timeTicks">The specified number of ticks in the time part of the structure. </param>
    </member>
    <member name="M:Devart.Data.SQLite.SQLiteDateTime.#ctor(System.Int32,System.Int64,System.Int32,System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:Devart.Data.SQLite.SQLiteDateTime" /> structure with the specified total number of days and microseconds and with time zone offset in hours and minutes. </summary>
      <param name="days">The specified number of days in the date part of the structure. </param>
      <param name="timeTicks">The specified number of ticks in the time part of the structure. </param>
      <param name="tzhour">The hours part of time zone offset relative to UTC. </param>
      <param name="tzminute">The minutes part of time zone offset relative to UTC. </param>
    </member>
    <member name="M:Devart.Data.SQLite.SQLiteDateTime.#ctor(System.Int32,System.Int64,System.TimeSpan)">
      <summary>Initializes a new instance of the <see cref="T:Devart.Data.SQLite.SQLiteDateTime" /> structure with the specified total number of days and microseconds and with time zone offset, specified as <see cref="T:System.TimeSpan" />. </summary>
      <param name="days">The specified number of days in the date part of the structure. </param>
      <param name="timeTicks">The specified number of ticks in the time part of the structure. </param>
      <param name="timeZone">The specified time zone offset. </param>
    </member>
    <member name="M:Devart.Data.SQLite.SQLiteDateTime.Add(Devart.Data.SQLite.SQLiteDateTime,System.TimeSpan)">
      <summary>Adds a <see cref="T:Devart.Data.SQLite.SQLiteDateTime" /> to a <see cref="T:System.TimeSpan" /> structure. </summary>
      <keywords>SQLiteDateTime.Add method </keywords>
      <param name="x">The first item to add. </param>
      <param name="t">The second item to add. </param>
      <returns>The new <see cref="T:Devart.Data.SQLite.SQLiteDateTime" /> that represents sum of the two arguments. </returns>
    </member>
    <member name="M:Devart.Data.SQLite.SQLiteDateTime.AddDays(System.Double)">
      <summary>Adds the specified number of days to the current <see cref="T:Devart.Data.SQLite.SQLiteDateTime" /> instance. </summary>
      <keywords>SQLiteDateTime.AddDays method </keywords>
      <param name="value">The number of days to add. </param>
      <returns>A new <see cref="T:Devart.Data.SQLite.SQLiteDateTime" /> structure. </returns>
    </member>
    <member name="M:Devart.Data.SQLite.SQLiteDateTime.AddHours(System.Double)">
      <summary>Adds the specified number of hours to the current <see cref="T:Devart.Data.SQLite.SQLiteDateTime" /> instance. </summary>
      <keywords>SQLiteDateTime.AddHours method </keywords>
      <param name="value">The number of hours to add. </param>
      <returns>A new <see cref="T:Devart.Data.SQLite.SQLiteDateTime" /> structure. </returns>
    </member>
    <member name="M:Devart.Data.SQLite.SQLiteDateTime.AddMicroseconds(System.Int64)">
      <summary>Adds the specified number of microseconds to the current <see cref="T:Devart.Data.SQLite.SQLiteDateTime" /> instance. </summary>
      <keywords>SQLiteDateTime.AddMicroseconds method </keywords>
      <param name="value">The specified number of microseconds. </param>
      <returns>A new <see cref="T:Devart.Data.SQLite.SQLiteDateTime" /> structure. </returns>
    </member>
    <member name="M:Devart.Data.SQLite.SQLiteDateTime.AddMinutes(System.Double)">
      <summary>Adds the specified number of minutes to the current <see cref="T:Devart.Data.SQLite.SQLiteDateTime" /> instance. </summary>
      <keywords>SQLiteDateTime.AddMinutes method </keywords>
      <param name="value">The number of minutes to add. </param>
      <returns>A new <see cref="T:Devart.Data.SQLite.SQLiteDateTime" /> structure. </returns>
    </member>
    <member name="M:Devart.Data.SQLite.SQLiteDateTime.AddMonths(System.Int32)">
      <summary>Adds the specified number of months to the current <see cref="T:Devart.Data.SQLite.SQLiteDateTime" /> instance. </summary>
      <keywords>SQLiteDateTime.AddMonths method </keywords>
      <param name="months">The specified number of months. </param>
      <returns>A new <see cref="T:Devart.Data.SQLite.SQLiteDateTime" /> structure. </returns>
    </member>
    <member name="M:Devart.Data.SQLite.SQLiteDateTime.AddSeconds(System.Double)">
      <summary>Adds the specified number of seconds to the current <see cref="T:Devart.Data.SQLite.SQLiteDateTime" /> instance. </summary>
      <keywords>SQLiteDateTime.AddSeconds method </keywords>
      <param name="value">The number of seconds to add. </param>
      <returns>A new <see cref="T:Devart.Data.SQLite.SQLiteDateTime" /> structure. </returns>
    </member>
    <member name="M:Devart.Data.SQLite.SQLiteDateTime.AddYears(System.Int32)">
      <summary>Adds the specified number of years to the current <see cref="T:Devart.Data.SQLite.SQLiteDateTime" /> instance. </summary>
      <keywords>SQLiteDateTime.AddYears method </keywords>
      <param name="years">The specified number of years. </param>
      <returns>A new <see cref="T:Devart.Data.SQLite.SQLiteDateTime" /> structure. </returns>
    </member>
    <member name="M:Devart.Data.SQLite.SQLiteDateTime.CompareTo(Devart.Data.SQLite.SQLiteDateTime)">
      <summary>Compares the current <see cref="T:Devart.Data.SQLite.SQLiteDateTime" /> object to the specified <see cref="T:Devart.Data.SQLite.SQLiteDateTime" /> and returns an integer that represents their relative values. </summary>
      <keywords>SQLiteDateTime.CompareTo method </keywords>
      <param name="value">A <see cref="T:Devart.Data.SQLite.SQLiteDateTime" /> value to compare with. </param>
      <returns>A signed number indicating the relative values of the current <see cref="T:Devart.Data.SQLite.SQLiteDateTime" /> structure and the object.
<list type="table">
  <listheader>
    <term>Return Value</term>
    <description>Condition</description>
  </listheader>
  <item>
    <term>Less than zero</term>
    <description>The value of the current <see cref="T:Devart.Data.SQLite.SQLiteDateTime" /> is less than the argument.</description>
  </item>
  <item>
    <term>Zero</term>
    <description>The current <see cref="T:Devart.Data.SQLite.SQLiteDateTime" /> is the same to the argument.</description>
   </item>
   <item>
     <term>Greater than zero</term>
     <description>The current <see cref="T:Devart.Data.SQLite.SQLiteDateTime" /> is greater than the argument.</description>
   </item>
</list> </returns>
      <overloads>Compares the current <see cref="T:Devart.Data.SQLite.SQLiteDateTime" /> object to the specified object. </overloads>
    </member>
    <member name="M:Devart.Data.SQLite.SQLiteDateTime.CompareTo(System.Object)">
      <summary>Compares the current <see cref="T:Devart.Data.SQLite.SQLiteDateTime" /> object to the specified object and returns an integer that represents their relative values. </summary>
      <keywords>SQLiteDateTime.CompareTo method </keywords>
      <param name="value">An object value to compare with. </param>
      <returns>A signed number indicating the relative values of the current <see cref="T:Devart.Data.SQLite.SQLiteDateTime" /> structure and the object.
<list type="table">
  <listheader>
    <term>Return Value</term>
    <description>Condition</description>
  </listheader>
  <item>
    <term>Less than zero</term>
    <description>The value of the current <see cref="T:Devart.Data.SQLite.SQLiteDateTime" /> is less than the argument.</description>
  </item>
  <item>
    <term>Zero</term>
    <description>The current <see cref="T:Devart.Data.SQLite.SQLiteDateTime" /> is the same to the argument.</description>
   </item>
   <item>
     <term>Greater than zero</term>
     <description>The current <see cref="T:Devart.Data.SQLite.SQLiteDateTime" /> is greater than the argument.</description>
   </item>
</list> </returns>
    </member>
    <member name="P:Devart.Data.SQLite.SQLiteDateTime.Day">
      <summary>Gets the day component of a <see cref="T:Devart.Data.SQLite.SQLiteDateTime" />. </summary>
      <keywords>SQLiteDateTime.Day property </keywords>
      <value>A number that represents a day value between 1 and 31. </value>
    </member>
    <member name="P:Devart.Data.SQLite.SQLiteDateTime.DayOfWeek">
      <summary>Returns the day of a week that corresponds to the current <see cref="T:Devart.Data.SQLite.SQLiteDateTime" /> value. </summary>
      <keywords>SQLiteDateTime.DayOfWeek property </keywords>
      <value>One of the <see cref="T:System.DayOfWeek" /> values. </value>
    </member>
    <member name="P:Devart.Data.SQLite.SQLiteDateTime.DayOfYear">
      <summary>Returns ordinal of the day in a year that corresponds to the current <see cref="T:Devart.Data.SQLite.SQLiteDateTime" /> value. </summary>
      <keywords>SQLiteDateTime.DayOfYear property </keywords>
      <value>The day's ordinal. </value>
    </member>
    <member name="P:Devart.Data.SQLite.SQLiteDateTime.Days">
      <summary>Gets the number of days in the date part of the structure (days since January 24.11.4714 BC). </summary>
      <keywords>SQLiteDateTime.Days property </keywords>
      <value>The number of days in the date part of the structure. The value includes years and months expressed in days. Zero value corresponds to the <see cref="F:Devart.Data.SQLite.SQLiteDateTime.MinValue" />. </value>
    </member>
    <member name="M:Devart.Data.SQLite.SQLiteDateTime.DaysInMonth(System.Int32,System.Int32)">
      <summary>Returns the number of days in the specified month and year. </summary>
      <keywords>SQLiteDateTime.DaysInMonth method </keywords>
      <param name="year">The year. </param>
      <param name="month">The month (a number ranging from 1 to 12). </param>
      <returns>The number of days in the specified month and year. </returns>
    </member>
    <member name="F:Devart.Data.SQLite.SQLiteDateTime.Epoch">
      <summary>Returns the date 1970-01-01 00:00:00-00. </summary>
      <keywords>SQLiteDateTime.Epoch field </keywords>
    </member>
    <member name="M:Devart.Data.SQLite.SQLiteDateTime.Equals(Devart.Data.SQLite.SQLiteDateTime,Devart.Data.SQLite.SQLiteDateTime)">
      <summary>Determines whether two <see cref="T:Devart.Data.SQLite.SQLiteDateTime" /> values are equal. </summary>
      <keywords>SQLiteDateTime.Equals method </keywords>
      <param name="x">A <see cref="T:Devart.Data.SQLite.SQLiteDateTime" /> value to compare. </param>
      <param name="y">A <see cref="T:Devart.Data.SQLite.SQLiteDateTime" /> value to compare. </param>
      <returns><see langword="true" /> if two <see cref="T:Devart.Data.SQLite.SQLiteDateTime" /> values are equal; otherwise, <see langword="false" />. </returns>
      <overloads>Compares two <see cref="T:Devart.Data.SQLite.SQLiteDateTime" /> structures to determine if they are equal. </overloads>
    </member>
    <member name="M:Devart.Data.SQLite.SQLiteDateTime.Equals(System.Object)">
      <summary>Compares the specified object parameter to the <see cref="T:Devart.Data.SQLite.SQLiteDateTime" /> value. </summary>
      <keywords>SQLiteDateTime.Equals method </keywords>
      <param name="value">The object to be compared. </param>
      <returns><see langword="true" /> if object is an instance of the <see cref="T:Devart.Data.SQLite.SQLiteDateTime" /> and has the same date and time; otherwise, <see langword="false" />. </returns>
    </member>
    <member name="M:Devart.Data.SQLite.SQLiteDateTime.GetHashCode()">
      <summary>Gets a hash code for the <see cref="T:Devart.Data.SQLite.SQLiteDateTime" /> instance. </summary>
      <keywords>SQLiteDateTime.GetHashCode method </keywords>
      <returns>A 32-bit signed integer hash code. </returns>
    </member>
    <member name="M:Devart.Data.SQLite.SQLiteDateTime.GreaterThan(Devart.Data.SQLite.SQLiteDateTime,Devart.Data.SQLite.SQLiteDateTime)">
      <summary>Determines whether the first of two <see cref="T:Devart.Data.SQLite.SQLiteDateTime" /> values is greater than the second. </summary>
      <keywords>SQLiteDateTime.GreaterThan method </keywords>
      <param name="x">The first <see cref="T:Devart.Data.SQLite.SQLiteDateTime" /> value. </param>
      <param name="y">The second <see cref="T:Devart.Data.SQLite.SQLiteDateTime" /> value. </param>
      <returns><see langword="true" /> if the first of two <see cref="T:Devart.Data.SQLite.SQLiteDateTime" /> values is greater than the second; otherwise, <see langword="false" />. </returns>
    </member>
    <member name="M:Devart.Data.SQLite.SQLiteDateTime.GreaterThanOrEqual(Devart.Data.SQLite.SQLiteDateTime,Devart.Data.SQLite.SQLiteDateTime)">
      <summary>Determines whether the first of two <see cref="T:Devart.Data.SQLite.SQLiteDateTime" /> values is greater than or equal to the second. </summary>
      <keywords>SQLiteDateTime.GreaterThanOrEqual method </keywords>
      <param name="x">The first <see cref="T:Devart.Data.SQLite.SQLiteDateTime" /> value. </param>
      <param name="y">The second <see cref="T:Devart.Data.SQLite.SQLiteDateTime" /> value. </param>
      <returns><see langword="true" /> if the first of two <see cref="T:Devart.Data.SQLite.SQLiteDateTime" /> values is greater than or equal to the second; otherwise, <see langword="false" />. </returns>
    </member>
    <member name="P:Devart.Data.SQLite.SQLiteDateTime.Hour">
      <summary>Gets the hour component of a <see cref="T:Devart.Data.SQLite.SQLiteDateTime" />. </summary>
      <keywords>SQLiteDateTime.Hour property </keywords>
      <value>A number that represents an hour value between 0 and 23. </value>
    </member>
    <member name="P:Devart.Data.SQLite.SQLiteDateTime.IsDate">
      <summary>Determines whether the current structure value represents only date (without time value). </summary>
      <keywords>SQLiteDateTime.IsDate property </keywords>
      <value><see langword="true" /> if the <see cref="P:Devart.Data.SQLite.SQLiteDateTime.Value" /> represents a date without the time part; otherwise, <see langword="false" />. </value>
    </member>
    <member name="P:Devart.Data.SQLite.SQLiteDateTime.IsFinite">
      <summary>Indicates whether the current structure value is finite or null. </summary>
      <keywords>SQLiteDateTime.IsFinite property </keywords>
      <value><see langword="true" /> if the <see cref="P:Devart.Data.SQLite.SQLiteDateTime.Value" /> represents a finite timestamp or <see cref="F:Devart.Data.SQLite.SQLiteDateTime.Null" />; otherwise, <see langword="false" />. </value>
    </member>
    <member name="M:Devart.Data.SQLite.SQLiteDateTime.IsLeapYear(System.Int32)">
      <summary>Indicates whether specified year is a leap one. </summary>
      <keywords>SQLiteDateTime.IsLeapYear method </keywords>
      <param name="year">The year to check. </param>
      <returns><see langword="true" /> if the specified year is a leap one; otherwise, <see langword="false" />. </returns>
    </member>
    <member name="P:Devart.Data.SQLite.SQLiteDateTime.IsNull">
      <summary>Gets a value indicating whether the <see cref="T:Devart.Data.SQLite.SQLiteDateTime" /> structure represents <see cref="F:Devart.Data.SQLite.SQLiteDateTime.Null" />. </summary>
      <keywords>SQLiteDateTime.IsNull property </keywords>
      <value><see langword="true" /> if the <see cref="T:Devart.Data.SQLite.SQLiteDateTime" /> structure represents <see cref="F:Devart.Data.SQLite.SQLiteDateTime.Null" />; otherwise, <see langword="false" />. </value>
    </member>
    <member name="M:Devart.Data.SQLite.SQLiteDateTime.LessThan(Devart.Data.SQLite.SQLiteDateTime,Devart.Data.SQLite.SQLiteDateTime)">
      <summary>Determines whether the first of two <see cref="T:Devart.Data.SQLite.SQLiteDateTime" /> values is less than the second. </summary>
      <keywords>SQLiteDateTime.LessThan method </keywords>
      <param name="x">The first <see cref="T:Devart.Data.SQLite.SQLiteDateTime" /> value. </param>
      <param name="y">The second <see cref="T:Devart.Data.SQLite.SQLiteDateTime" /> value. </param>
      <returns><see langword="true" /> if the first of two <see cref="T:Devart.Data.SQLite.SQLiteDateTime" /> values is less than the second; otherwise, <see langword="false" />. </returns>
    </member>
    <member name="M:Devart.Data.SQLite.SQLiteDateTime.LessThanOrEqual(Devart.Data.SQLite.SQLiteDateTime,Devart.Data.SQLite.SQLiteDateTime)">
      <summary>Determines whether the first of two <see cref="T:Devart.Data.SQLite.SQLiteDateTime" /> values is less than or equal to the second. </summary>
      <keywords>SQLiteDateTime.LessThanOrEqual method </keywords>
      <param name="x">The first <see cref="T:Devart.Data.SQLite.SQLiteDateTime" /> value. </param>
      <param name="y">The second <see cref="T:Devart.Data.SQLite.SQLiteDateTime" /> value. </param>
      <returns><see langword="true" /> if the first of two <see cref="T:Devart.Data.SQLite.SQLiteDateTime" /> values is less than or equal to the second; otherwise, <see langword="false" />. </returns>
    </member>
    <member name="F:Devart.Data.SQLite.SQLiteDateTime.MaxValue">
      <summary>Represents the maximum valid date for a <see cref="T:Devart.Data.SQLite.SQLiteDateTime" /> structure. </summary>
      <keywords>SQLiteDateTime.MaxValue field </keywords>
    </member>
    <member name="P:Devart.Data.SQLite.SQLiteDateTime.Microsecond">
      <summary>Gets the microsecond component of a <see cref="T:Devart.Data.SQLite.SQLiteDateTime" />. </summary>
      <keywords>SQLiteDateTime.Microsecond property </keywords>
      <value>Number of microseconds in the time part of the structure. </value>
    </member>
    <member name="F:Devart.Data.SQLite.SQLiteDateTime.MinValue">
      <summary>Represents the minimum valid date for a <see cref="T:Devart.Data.SQLite.SQLiteDateTime" /> structure. </summary>
      <keywords>SQLiteDateTime.MinValue field </keywords>
    </member>
    <member name="P:Devart.Data.SQLite.SQLiteDateTime.Minute">
      <summary>Gets the minute component of a <see cref="T:Devart.Data.SQLite.SQLiteDateTime" />. </summary>
      <keywords>SQLiteDateTime.Minute property </keywords>
      <value>A number that represents a minute value between 0 and 59. </value>
    </member>
    <member name="P:Devart.Data.SQLite.SQLiteDateTime.Month">
      <summary>Gets the month component of a <see cref="T:Devart.Data.SQLite.SQLiteDateTime" />. </summary>
      <keywords>SQLiteDateTime.Month property </keywords>
      <value>A number that represents a month value between 1 and 12. </value>
    </member>
    <member name="F:Devart.Data.SQLite.SQLiteDateTime.NegativeInfinity">
      <summary>Represents a negative infinity value that can be assigned to the <see cref="T:Devart.Data.SQLite.SQLiteDateTime" />  structure. </summary>
      <keywords>SQLiteDateTime.NegativeInfinity field </keywords>
    </member>
    <member name="M:Devart.Data.SQLite.SQLiteDateTime.NotEquals(Devart.Data.SQLite.SQLiteDateTime,Devart.Data.SQLite.SQLiteDateTime)">
      <summary>Determines whether two <see cref="T:Devart.Data.SQLite.SQLiteDateTime" /> values are not equal. </summary>
      <keywords>SQLiteDateTime.NotEquals method </keywords>
      <param name="x">The first <see cref="T:Devart.Data.SQLite.SQLiteDateTime" /> value. </param>
      <param name="y">The second <see cref="T:Devart.Data.SQLite.SQLiteDateTime" /> value. </param>
      <returns><see langword="true" /> if two <see cref="T:Devart.Data.SQLite.SQLiteDateTime" /> values are not equal; otherwise, <see langword="false" />. </returns>
    </member>
    <member name="F:Devart.Data.SQLite.SQLiteDateTime.Null">
      <summary>Represents a NULL value that can be assigned to the <see cref="T:Devart.Data.SQLite.SQLiteDateTime" /> structure. </summary>
      <keywords>SQLiteDateTime.Null field </keywords>
    </member>
    <member name="M:Devart.Data.SQLite.SQLiteDateTime.Parse(System.String)">
      <summary>Converts the specified <see cref="T:System.String" /> representation of a date to its <see cref="T:Devart.Data.SQLite.SQLiteDateTime" /> equivalent. </summary>
      <keywords>SQLiteDateTime.Parse method </keywords>
      <param name="value">The <see cref="T:System.String" /> to be parsed. </param>
      <returns>a <see cref="T:Devart.Data.SQLite.SQLiteDateTime" /> structure equal to the date represented by the specified <see cref="T:System.String" />. </returns>
      <overloads>Converts the specified <see cref="T:System.String" /> representation of a date to its <see cref="T:Devart.Data.SQLite.SQLiteDateTime" /> equivalent. </overloads>
    </member>
    <member name="M:Devart.Data.SQLite.SQLiteDateTime.Parse(System.String,System.String)">
      <summary>Converts the specified <see cref="T:System.String" /> representation of a date to its <see cref="T:Devart.Data.SQLite.SQLiteDateTime" /> equivalent. </summary>
      <keywords>SQLiteDateTime.Parse method </keywords>
      <param name="value">The <see cref="T:System.String" /> to be parsed. </param>
      <param name="format">A <see cref="T:System.String" /> that describes elements contained within <paramref name="value" />. </param>
      <returns>a <see cref="T:Devart.Data.SQLite.SQLiteDateTime" /> structure equal to the date represented by the specified <see cref="T:System.String" />. </returns>
    </member>
    <member name="M:Devart.Data.SQLite.SQLiteDateTime.ParseExact(System.String,System.String[])">
      <summary>Converts the specified <see cref="T:System.String" /> representation of a date to its <see cref="T:Devart.Data.SQLite.SQLiteDateTime" /> equivalent. </summary>
      <keywords>SQLiteDateTime.ParseExact method </keywords>
      <param name="value">The <see cref="T:System.String" /> to be parsed. </param>
      <param name="formats">The array of <see cref="T:System.String" /> formats that describe elements contained within <paramref name="value" />. </param>
      <returns>a <see cref="T:Devart.Data.SQLite.SQLiteDateTime" /> structure equal to the date represented by the specified <see cref="T:System.String" />. </returns>
    </member>
    <member name="F:Devart.Data.SQLite.SQLiteDateTime.PositiveInfinity">
      <summary>Represents a positive infinity value that can be assigned to the <see cref="T:Devart.Data.SQLite.SQLiteDateTime" /> structure. </summary>
      <keywords>SQLiteDateTime.PositiveInfinity field </keywords>
    </member>
    <member name="F:Devart.Data.SQLite.SQLiteDateTime.SQLiteDateTimeFormats">
      <summary>Static field, containing all the formats of the DateTime string representations, that can be parsed by the <see cref="M:Devart.Data.SQLite.SQLiteDateTime.Parse(System.String)" /> method. </summary>
      <keywords>SQLiteDateTime.SQLiteDateTimeFormats field </keywords>
      <value>All the formats of the DateTime string representations, that can be parsed by the <see cref="M:Devart.Data.SQLite.SQLiteDateTime.Parse(System.String)" /> method. </value>
    </member>
    <member name="P:Devart.Data.SQLite.SQLiteDateTime.Second">
      <summary>Gets the second component of a <see cref="T:Devart.Data.SQLite.SQLiteDateTime" />. </summary>
      <keywords>SQLiteDateTime.Second property </keywords>
      <value>A number that represents a second value between 0 and 59. </value>
    </member>
    <member name="M:Devart.Data.SQLite.SQLiteDateTime.Subtract(Devart.Data.SQLite.SQLiteDateTime,System.TimeSpan)">
      <summary>Subtracts a <see cref="T:System.TimeSpan" /> value from a <see cref="T:Devart.Data.SQLite.SQLiteDateTime" /> structure. </summary>
      <keywords>SQLiteDateTime.Subtract method </keywords>
      <param name="x">A <see cref="T:Devart.Data.SQLite.SQLiteDateTime" /> structure to subtract from. </param>
      <param name="t">A <see cref="T:System.TimeSpan" /> value to subtract. </param>
      <returns>The new <see cref="T:Devart.Data.SQLite.SQLiteDateTime" /> structure that represents the result of the subtract operation. </returns>
    </member>
    <member name="P:Devart.Data.SQLite.SQLiteDateTime.TimeOfDay">
      <summary>Gets the time part of the <see cref="T:Devart.Data.SQLite.SQLiteDateTime" /> structure. </summary>
      <keywords>SQLiteDateTime.TimeOfDay property </keywords>
      <value>A <see cref="T:System.TimeSpan" /> value. </value>
    </member>
    <member name="P:Devart.Data.SQLite.SQLiteDateTime.TimeTicks">
      <summary>Gets the number of microseconds in the time part of the structure. </summary>
      <keywords>SQLiteDateTime.TimeTicks property </keywords>
      <value>Thenumber of microseconds in the time part of the structure. The value includes hours and minutes expressed in microseconds. </value>
    </member>
    <member name="P:Devart.Data.SQLite.SQLiteDateTime.TimeZoneOffset">
      <summary>Determines the time difference between the local time stored in this <see cref="T:Devart.Data.SQLite.SQLiteDateTime" /> instance and coordinated universal time (UTC). </summary>
      <keywords>SQLiteDateTime.TimeZoneOffset property </keywords>
      <value>The time difference between the local time stored in this <see cref="T:Devart.Data.SQLite.SQLiteDateTime" /> instance and coordinated universal time (UTC). </value>
    </member>
    <member name="M:Devart.Data.SQLite.SQLiteDateTime.ToString()">
      <summary>Converts the current <see cref="T:Devart.Data.SQLite.SQLiteDateTime" /> structure to a <see cref="T:System.String" />. </summary>
      <keywords>SQLiteDateTime.ToString method </keywords>
      <returns>A <see cref="T:System.String" /> object. </returns>
      <overloads>Converts the current <see cref="T:Devart.Data.SQLite.SQLiteDateTime" /> structure to a <see cref="T:System.String" />. </overloads>
    </member>
    <member name="M:Devart.Data.SQLite.SQLiteDateTime.ToString(System.String)">
      <summary>Converts the current <see cref="T:Devart.Data.SQLite.SQLiteDateTime" /> structure to a <see cref="T:System.String" /> using provided format string. </summary>
      <keywords>SQLiteDateTime.ToString method </keywords>
      <param name="format">Format to use for converting the string. </param>
      <returns>A <see cref="T:System.String" /> object. </returns>
    </member>
    <member name="P:Devart.Data.SQLite.SQLiteDateTime.Value">
      <summary>Gets the date and time that is stored in the <see cref="T:Devart.Data.SQLite.SQLiteDateTime" /> structure. </summary>
      <keywords>SQLiteDateTime.Value property </keywords>
      <value>A <see cref="T:System.DateTime" /> object. </value>
    </member>
    <member name="P:Devart.Data.SQLite.SQLiteDateTime.Year">
      <summary>Gets the year component of a <see cref="T:Devart.Data.SQLite.SQLiteDateTime" />. </summary>
      <keywords>SQLiteDateTime.Year property </keywords>
      <value>A number that represents a year value between -4713 and 5874897. </value>
    </member>
    <member name="M:Devart.Data.SQLite.SQLiteDateTime.op_Addition(Devart.Data.SQLite.SQLiteDateTime,System.TimeSpan)">
      <summary>Adds the specified <see cref="T:System.TimeSpan" /> to the <see cref="T:Devart.Data.SQLite.SQLiteDateTime" /> and returns a new <see cref="T:Devart.Data.SQLite.SQLiteDateTime" /> structure. </summary>
      <keywords>SQLiteDateTime.op_Addition method </keywords>
      <param name="d">A <see cref="T:Devart.Data.SQLite.SQLiteDateTime" /> structure. </param>
      <param name="t">A <see cref="T:System.TimeSpan" /> value. </param>
      <returns>A new <see cref="T:Devart.Data.SQLite.SQLiteDateTime" /> structure. </returns>
    </member>
    <member name="M:Devart.Data.SQLite.SQLiteDateTime.op_Equality(Devart.Data.SQLite.SQLiteDateTime,Devart.Data.SQLite.SQLiteDateTime)">
      <summary>Determines whether two <see cref="T:Devart.Data.SQLite.SQLiteDateTime" /> values are equal. </summary>
      <keywords>SQLiteDateTime.op_Equality method </keywords>
      <param name="x">The first <see cref="T:Devart.Data.SQLite.SQLiteDateTime" /> value. </param>
      <param name="y">The second <see cref="T:Devart.Data.SQLite.SQLiteDateTime" /> value. </param>
      <returns><see langword="true" /> if two <see cref="T:Devart.Data.SQLite.SQLiteDateTime" /> values are equal; otherwise, <see langword="false" />. </returns>
    </member>
    <member name="M:Devart.Data.SQLite.SQLiteDateTime.op_Explicit(Devart.Data.SQLite.SQLiteDateTime)~System.DateTime">
      <summary>Converts a <see cref="T:Devart.Data.SQLite.SQLiteDateTime" /> structure to the <see cref="T:System.DateTime" /> object. </summary>
      <keywords>SQLiteDateTime.op_Explicit method </keywords>
      <param name="x">A <see cref="T:Devart.Data.SQLite.SQLiteDateTime" /> structure to convert. </param>
      <returns>A <see cref="T:System.DateTime" /> object. </returns>
    </member>
    <member name="M:Devart.Data.SQLite.SQLiteDateTime.op_GreaterThan(Devart.Data.SQLite.SQLiteDateTime,Devart.Data.SQLite.SQLiteDateTime)">
      <summary>Compares two <see cref="T:Devart.Data.SQLite.SQLiteDateTime" /> structures to determine if the first is greater than the second. </summary>
      <keywords>SQLiteDateTime.op_GreaterThan method </keywords>
      <param name="x">The first <see cref="T:Devart.Data.SQLite.SQLiteDateTime" /> value. </param>
      <param name="y">The second <see cref="T:Devart.Data.SQLite.SQLiteDateTime" /> value. </param>
      <returns><see langword="true" /> if the first of two <see cref="T:Devart.Data.SQLite.SQLiteDateTime" /> values is greater than the second; otherwise, <see langword="false" />. </returns>
    </member>
    <member name="M:Devart.Data.SQLite.SQLiteDateTime.op_GreaterThanOrEqual(Devart.Data.SQLite.SQLiteDateTime,Devart.Data.SQLite.SQLiteDateTime)">
      <summary>Compares two <see cref="T:Devart.Data.SQLite.SQLiteDateTime" /> structures to determine if the first is greater than or equal to the second. </summary>
      <keywords>SQLiteDateTime.op_GreaterThanOrEqual method </keywords>
      <param name="x">The first <see cref="T:Devart.Data.SQLite.SQLiteDateTime" /> value. </param>
      <param name="y">The second <see cref="T:Devart.Data.SQLite.SQLiteDateTime" /> value. </param>
      <returns><see langword="true" /> if the first of two <see cref="T:Devart.Data.SQLite.SQLiteDateTime" /> values is greater than or equal to the second; otherwise, <see langword="false" />. </returns>
    </member>
    <member name="M:Devart.Data.SQLite.SQLiteDateTime.op_Implicit(System.DateTime)~Devart.Data.SQLite.SQLiteDateTime">
      <summary>Converts a <see cref="T:System.DateTime" /> object to the <see cref="T:Devart.Data.SQLite.SQLiteDateTime" /> structure. </summary>
      <keywords>SQLiteDateTime.op_Implicit method </keywords>
      <param name="value">A <see cref="T:System.DateTime" /> object to convert. </param>
      <returns>A <see cref="T:Devart.Data.SQLite.SQLiteDateTime" /> structure. </returns>
    </member>
    <member name="M:Devart.Data.SQLite.SQLiteDateTime.op_Inequality(Devart.Data.SQLite.SQLiteDateTime,Devart.Data.SQLite.SQLiteDateTime)">
      <summary>Determines whether two <see cref="T:Devart.Data.SQLite.SQLiteDateTime" /> values are not equal. </summary>
      <keywords>SQLiteDateTime.op_Inequality method </keywords>
      <param name="x">The first <see cref="T:Devart.Data.SQLite.SQLiteDateTime" /> value. </param>
      <param name="y">The second <see cref="T:Devart.Data.SQLite.SQLiteDateTime" /> value. </param>
      <returns><see langword="true" /> if two <see cref="T:Devart.Data.SQLite.SQLiteDateTime" /> values are not equal; otherwise, <see langword="false" />. </returns>
    </member>
    <member name="M:Devart.Data.SQLite.SQLiteDateTime.op_LessThan(Devart.Data.SQLite.SQLiteDateTime,Devart.Data.SQLite.SQLiteDateTime)">
      <summary>Compares two <see cref="T:Devart.Data.SQLite.SQLiteDateTime" /> structures to determine if the first is less than the second. </summary>
      <keywords>SQLiteDateTime.op_LessThan method </keywords>
      <param name="x">The first <see cref="T:Devart.Data.SQLite.SQLiteDateTime" /> value. </param>
      <param name="y">The second <see cref="T:Devart.Data.SQLite.SQLiteDateTime" /> value. </param>
      <returns><see langword="true" /> if the first of two <see cref="T:Devart.Data.SQLite.SQLiteDateTime" /> values is less than the second; otherwise, <see langword="false" />. </returns>
    </member>
    <member name="M:Devart.Data.SQLite.SQLiteDateTime.op_LessThanOrEqual(Devart.Data.SQLite.SQLiteDateTime,Devart.Data.SQLite.SQLiteDateTime)">
      <summary>Compares two <see cref="T:Devart.Data.SQLite.SQLiteDateTime" /> structures to determine if the first is less than or equal to the second. </summary>
      <keywords>SQLiteDateTime.op_LessThanOrEqual method </keywords>
      <param name="x">The first <see cref="T:Devart.Data.SQLite.SQLiteDateTime" /> value. </param>
      <param name="y">The second <see cref="T:Devart.Data.SQLite.SQLiteDateTime" /> value. </param>
      <returns><see langword="true" /> if the first of two <see cref="T:Devart.Data.SQLite.SQLiteDateTime" /> values is less than or equal to the second; otherwise, <see langword="false" />. </returns>
    </member>
    <member name="M:Devart.Data.SQLite.SQLiteDateTime.op_Subtraction(Devart.Data.SQLite.SQLiteDateTime,System.TimeSpan)">
      <summary>Subtracts the specified <see cref="T:System.TimeSpan" /> value from the <see cref="T:Devart.Data.SQLite.SQLiteDateTime" /> value and returns a new <see cref="T:Devart.Data.SQLite.SQLiteDateTime" /> structure. </summary>
      <keywords>SQLiteDateTime.op_Subtraction method </keywords>
      <param name="d">A <see cref="T:Devart.Data.SQLite.SQLiteDateTime" /> value. </param>
      <param name="t">A <see cref="T:System.TimeSpan" /> value to subtract. </param>
      <returns>A new <see cref="T:Devart.Data.SQLite.SQLiteDateTime" /> structure. </returns>
    </member>
    <member name="T:Devart.Data.SQLite.SQLiteDump">
      <summary>Serves to store a database or its parts as a script and also to restore database from the received script. </summary>
    </member>
    <member name="M:Devart.Data.SQLite.SQLiteDump.#ctor()">
      <summary>Initializes a new instance of the <see cref="T:Devart.Data.SQLite.SQLiteDump" /> class. </summary>
      <overloads>Initializes a new instance of the <see cref="T:Devart.Data.SQLite.SQLiteDump" /> class. </overloads>
    </member>
    <member name="M:Devart.Data.SQLite.SQLiteDump.#ctor(Devart.Data.SQLite.SQLiteConnection)">
      <summary>Initializes a new instance of the <see cref="T:Devart.Data.SQLite.SQLiteDump" /> class with a <see ref="T:Devart.Data.SQLite.SQLiteConnection" /> object. </summary>
      <param name="connection">A <see cref="T:Devart.Data.SQLite.SQLiteConnection" /> object that represents the connection to a data source. </param>
    </member>
    <member name="P:Devart.Data.SQLite.SQLiteDump.Catalog">
      <summary>Gets or sets the database to read tables from. </summary>
      <keywords>SQLiteDump.Catalog property </keywords>
      <value>If this property contains an empty string, the <see cref="T:Devart.Data.SQLite.SQLiteDump" /> will search for the <see cref="P:Devart.Data.SQLite.SQLiteDump.Tables" /> in all attached databases. If this property contains a name of a database, the <see cref="T:Devart.Data.SQLite.SQLiteDump" /> will search in the specified database only.

The default value is empty string. </value>
    </member>
    <member name="P:Devart.Data.SQLite.SQLiteDump.Connection">
      <summary>Gets or sets the <see cref="T:Devart.Data.SQLite.SQLiteConnection" /> used by this instance of the <see cref="T:Devart.Data.SQLite.SQLiteDump" />. </summary>
      <keywords>SQLiteDump.Connection property </keywords>
      <value>The connection to a data source. The default value is a null reference. </value>
    </member>
    <member name="P:Devart.Data.SQLite.SQLiteDump.DumpText">
      <summary>Gets as a result of <see cref="M:Devart.Common.DbDump.Backup()" /> execution, or sets data needed to execute <see cref="M:Devart.Common.DbDump.Restore()" /> method. </summary>
      <keywords>SQLiteDump.DumpText property </keywords>
      <value>SQL commands separated by ';' symbols. </value>
    </member>
    <member name="P:Devart.Data.SQLite.SQLiteDump.ObjectTypes">
      <summary>Gets or sets a value that indicates which database objects will be included in the dump text. </summary>
      <keywords>SQLiteDump.ObjectTypes property </keywords>
      <value>A combination of <see cref="T:Devart.Data.SQLite.SQLiteDumpObjects" /> values. </value>
    </member>
    <member name="P:Devart.Data.SQLite.SQLiteDump.Tables">
      <summary>Gets or sets a list of the tables which will be used in the script. Table names are separated by semicolon. </summary>
      <keywords>SQLiteDump.Tables property </keywords>
      <value><see cref="T:System.String" /> containing a list of the tables separated by semicolon. </value>
    </member>
    <member name="T:Devart.Data.SQLite.SQLiteDumpObjects">
      <summary>Determines which database objects will be included in the dump text. </summary>
    </member>
    <member name="F:Devart.Data.SQLite.SQLiteDumpObjects.All">
      <summary>All database objects will be included in the dump. </summary>
    </member>
    <member name="F:Devart.Data.SQLite.SQLiteDumpObjects.Indexes">
      <summary>Includes indexes in the dump. </summary>
    </member>
    <member name="F:Devart.Data.SQLite.SQLiteDumpObjects.Tables">
      <summary>Includes tables in the dump. </summary>
    </member>
    <member name="F:Devart.Data.SQLite.SQLiteDumpObjects.Triggers">
      <summary>Includes triggers in the dump. </summary>
    </member>
    <member name="F:Devart.Data.SQLite.SQLiteDumpObjects.Views">
      <summary>Includes views in the dump. </summary>
    </member>
    <member name="T:Devart.Data.SQLite.SQLiteErrorCode">
      <summary>Determines the type of error that occurred in the database. </summary>
    </member>
    <member name="F:Devart.Data.SQLite.SQLiteErrorCode.Abort">
      <summary>Callback routine requested an abort. </summary>
    </member>
    <member name="F:Devart.Data.SQLite.SQLiteErrorCode.Auth">
      <summary>Authorization denied. </summary>
    </member>
    <member name="F:Devart.Data.SQLite.SQLiteErrorCode.Busy">
      <summary>The database file is locked. </summary>
    </member>
    <member name="F:Devart.Data.SQLite.SQLiteErrorCode.CantOpen">
      <summary>Unable to open the database file. </summary>
    </member>
    <member name="F:Devart.Data.SQLite.SQLiteErrorCode.Constraint">
      <summary>Abort due to a constraint violation. </summary>
    </member>
    <member name="F:Devart.Data.SQLite.SQLiteErrorCode.Corrupt">
      <summary>The database disk image is malformed. </summary>
    </member>
    <member name="F:Devart.Data.SQLite.SQLiteErrorCode.Done">
      <summary>sqlite3_step() has finished executing. </summary>
    </member>
    <member name="F:Devart.Data.SQLite.SQLiteErrorCode.Empty">
      <summary>Database is empty. </summary>
    </member>
    <member name="F:Devart.Data.SQLite.SQLiteErrorCode.Error">
      <summary>SQL error or missing database. </summary>
    </member>
    <member name="F:Devart.Data.SQLite.SQLiteErrorCode.Format">
      <summary>Auxiliary database format error. </summary>
    </member>
    <member name="F:Devart.Data.SQLite.SQLiteErrorCode.Full">
      <summary>Insertion failed because database is full. </summary>
    </member>
    <member name="F:Devart.Data.SQLite.SQLiteErrorCode.IOErr">
      <summary>Some kind of disk I/O error occurred. </summary>
    </member>
    <member name="F:Devart.Data.SQLite.SQLiteErrorCode.Internal">
      <summary>Internal logic error in SQLite. </summary>
    </member>
    <member name="F:Devart.Data.SQLite.SQLiteErrorCode.Interrupt">
      <summary>Operation terminated by sqlite3_interrupt(). </summary>
    </member>
    <member name="F:Devart.Data.SQLite.SQLiteErrorCode.Locked">
      <summary>A table in the database is locked. </summary>
    </member>
    <member name="F:Devart.Data.SQLite.SQLiteErrorCode.Mismatch">
      <summary>Data type mismatch. </summary>
    </member>
    <member name="F:Devart.Data.SQLite.SQLiteErrorCode.Misuse">
      <summary>Library used incorrectly. </summary>
    </member>
    <member name="F:Devart.Data.SQLite.SQLiteErrorCode.NOLFS">
      <summary>Use of OS features not supported by the host. </summary>
    </member>
    <member name="F:Devart.Data.SQLite.SQLiteErrorCode.NoMem">
      <summary>malloc() failed. </summary>
    </member>
    <member name="F:Devart.Data.SQLite.SQLiteErrorCode.NotADatabase">
      <summary>The file opened is not a database file. </summary>
    </member>
    <member name="F:Devart.Data.SQLite.SQLiteErrorCode.NotFound">
      <summary>Table or record not found. </summary>
    </member>
    <member name="F:Devart.Data.SQLite.SQLiteErrorCode.Ok">
      <summary>Success. </summary>
    </member>
    <member name="F:Devart.Data.SQLite.SQLiteErrorCode.Perm">
      <summary>Access permission denied. </summary>
    </member>
    <member name="F:Devart.Data.SQLite.SQLiteErrorCode.Protocol">
      <summary>Database lock protocol error. </summary>
    </member>
    <member name="F:Devart.Data.SQLite.SQLiteErrorCode.Range">
      <summary>2nd parameter to sqlite3_bind out of range. </summary>
    </member>
    <member name="F:Devart.Data.SQLite.SQLiteErrorCode.ReadOnly">
      <summary>Attempt to write a read-only database. </summary>
    </member>
    <member name="F:Devart.Data.SQLite.SQLiteErrorCode.Row">
      <summary>sqlite3_step() has another row ready. </summary>
    </member>
    <member name="F:Devart.Data.SQLite.SQLiteErrorCode.Schema">
      <summary>The database schema changed. </summary>
    </member>
    <member name="F:Devart.Data.SQLite.SQLiteErrorCode.TooBig">
      <summary>Too much data for one row of a table. </summary>
    </member>
    <member name="T:Devart.Data.SQLite.SQLiteErrorEventArgs">
      <summary>Provides data for the <see cref="E:Devart.Data.SQLite.SQLiteConnection.Error" /> event. </summary>
    </member>
    <member name="P:Devart.Data.SQLite.SQLiteErrorEventArgs.Exception">
      <summary>Gets a <see cref="T:Devart.Data.SQLite.SQLiteException" /> object that describes the error. </summary>
      <keywords>SQLiteErrorEventArgs.Exception property </keywords>
      <value>A <see cref="T:Devart.Data.SQLite.SQLiteException" /> object. </value>
    </member>
    <member name="T:Devart.Data.SQLite.SQLiteErrorEventHandler">
      <summary>Represents the method that will handle the <see cref="E:Devart.Data.SQLite.SQLiteConnection.Error" /> event of <see cref="T:Devart.Data.SQLite.SQLiteConnection" />. </summary>
      <keywords>SQLiteErrorEventHandler delegate </keywords>
      <param name="sender">The source of the event. </param>
      <param name="e">The <see cref="T:Devart.Data.SQLite.SQLiteErrorEventArgs" /> object that contains the event data. </param>
    </member>
    <member name="T:Devart.Data.SQLite.SQLiteException">
      <summary>The exception that is generated when SQLite returns an error. </summary>
    </member>
    <member name="P:Devart.Data.SQLite.SQLiteException.ErrorCode">
      <summary>Describes an error occurred in the database. </summary>
      <keywords>SQLiteException.ErrorCode property </keywords>
      <value>One of the <see cref="T:Devart.Data.SQLite.SQLiteErrorCode" /> values. </value>
    </member>
    <member name="M:Devart.Data.SQLite.SQLiteException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Populates a <b>SerializationInfo</b> with the data needed to serialize the target object. </summary>
      <keywords>SQLiteException.GetObjectData method </keywords>
      <param name="info">A <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object to populate. </param>
      <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination. </param>
    </member>
    <member name="T:Devart.Data.SQLite.SQLiteForeignKeyConstraints">
      <summary>Determines whether to enforce foreign key constraints. </summary>
    </member>
    <member name="F:Devart.Data.SQLite.SQLiteForeignKeyConstraints.Default">
      <summary>Use default SQLite foreign key constraint enforcement settings. </summary>
    </member>
    <member name="F:Devart.Data.SQLite.SQLiteForeignKeyConstraints.Off">
      <summary>Foreign key constraint enforcement is off. </summary>
    </member>
    <member name="F:Devart.Data.SQLite.SQLiteForeignKeyConstraints.On">
      <summary>Foreign key constraint enforcement is on. </summary>
    </member>
    <member name="T:Devart.Data.SQLite.SQLiteFunction">
      <summary>Base class for user-defined functions. </summary>
    </member>
    <member name="M:Devart.Data.SQLite.SQLiteFunction.#ctor(System.String,System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:Devart.Data.SQLite.SQLiteAggregateFunction" /> class. </summary>
      <param name="name">User-defined function name to register. </param>
      <param name="argumentCount">Number of arguments, the user-defined function accepts. </param>
    </member>
    <member name="P:Devart.Data.SQLite.SQLiteFunction.ArgumentCount">
      <summary>Gets a number of user-defined function arguments. </summary>
      <keywords>SQLiteFunction.ArgumentCount property </keywords>
      <value>Number of user-defined function arguments. </value>
    </member>
    <member name="M:Devart.Data.SQLite.SQLiteFunction.Dispose()">
      <summary>Releases all resources allocated by this object. </summary>
      <keywords>SQLiteFunction.Dispose method </keywords>
    </member>
    <member name="P:Devart.Data.SQLite.SQLiteFunction.Name">
      <summary>Gets a name of the user-defined function. </summary>
      <keywords>SQLiteFunction.Name property </keywords>
      <value>Name of the user-defined function. </value>
    </member>
    <member name="T:Devart.Data.SQLite.SQLiteMetaDataCollectionNames">
      <summary>Enumerates collection names you can use for metadata retrieval purposes. </summary>
    </member>
    <member name="M:Devart.Data.SQLite.SQLiteMetaDataCollectionNames.#ctor()">
      <summary>Creates a <see cref="T:Devart.Data.SQLite.SQLiteMetaDataCollectionNames" /> instance. </summary>
    </member>
    <member name="F:Devart.Data.SQLite.SQLiteMetaDataCollectionNames.Catalogs">
      <summary>The name of the metadata collection for known catalogs with SQLite database files. </summary>
      <keywords>SQLiteMetaDataCollectionNames.Catalogs field </keywords>
      <value>The value is "Catalogs". </value>
    </member>
    <member name="F:Devart.Data.SQLite.SQLiteMetaDataCollectionNames.Columns">
      <summary>The name of the metadata collection for table columns. </summary>
      <keywords>SQLiteMetaDataCollectionNames.Columns field </keywords>
      <value>The value is "Columns". </value>
    </member>
    <member name="F:Devart.Data.SQLite.SQLiteMetaDataCollectionNames.DataSourceInformation">
      <summary>The name of the metadata collection for the data source. </summary>
      <keywords>SQLiteMetaDataCollectionNames.DataSourceInformation field </keywords>
      <value>The value is "DataSourceInformation". </value>
    </member>
    <member name="F:Devart.Data.SQLite.SQLiteMetaDataCollectionNames.DataTypes">
      <summary>The name of the metadata collection for SQLite data types. </summary>
      <keywords>SQLiteMetaDataCollectionNames.DataTypes field </keywords>
      <value>The value is "DataTypes". </value>
    </member>
    <member name="F:Devart.Data.SQLite.SQLiteMetaDataCollectionNames.ForeignKeyColumns">
      <summary>The name of the metadata collection for columns used in foreign keys. </summary>
      <keywords>SQLiteMetaDataCollectionNames.ForeignKeyColumns field </keywords>
      <value>The value is "ForeignKeyColumns". </value>
    </member>
    <member name="F:Devart.Data.SQLite.SQLiteMetaDataCollectionNames.ForeignKeys">
      <summary>The name of the metadata collection for foreign keys. </summary>
      <keywords>SQLiteMetaDataCollectionNames.ForeignKeys field </keywords>
      <value>The value is "ForeignKeys". </value>
    </member>
    <member name="F:Devart.Data.SQLite.SQLiteMetaDataCollectionNames.IndexColumns">
      <summary>The name of the metadata collection for columns used in indexes. </summary>
      <keywords>SQLiteMetaDataCollectionNames.IndexColumns field </keywords>
      <value>The value is "IndexColumns". </value>
    </member>
    <member name="F:Devart.Data.SQLite.SQLiteMetaDataCollectionNames.Indexes">
      <summary>The name of the metadata collection for table indexes. </summary>
      <keywords>SQLiteMetaDataCollectionNames.Indexes field </keywords>
      <value>The value is "Indexes". </value>
    </member>
    <member name="F:Devart.Data.SQLite.SQLiteMetaDataCollectionNames.MetadataCollections">
      <summary>The name of the metadata collection for metadata collection definitions. </summary>
      <keywords>SQLiteMetaDataCollectionNames.MetadataCollections field </keywords>
      <value>The value is "MetadataCollections" </value>
    </member>
    <member name="F:Devart.Data.SQLite.SQLiteMetaDataCollectionNames.PrimaryKeys">
      <summary>The name of the metadata collection for primary keys. </summary>
      <keywords>SQLiteMetaDataCollectionNames.PrimaryKeys field </keywords>
      <value>The value is "PrimaryKeys". </value>
    </member>
    <member name="F:Devart.Data.SQLite.SQLiteMetaDataCollectionNames.ReservedWords">
      <summary>The name of metadata collection for the reserved words. </summary>
      <keywords>SQLiteMetaDataCollectionNames.ReservedWords field </keywords>
      <value>The value is "ReservedWords". </value>
    </member>
    <member name="F:Devart.Data.SQLite.SQLiteMetaDataCollectionNames.Restrictions">
      <summary>The name of the metadata collection for metadata restrictions. </summary>
      <keywords>SQLiteMetaDataCollectionNames.Restrictions field </keywords>
      <value>The value is "Restrictions". </value>
    </member>
    <member name="F:Devart.Data.SQLite.SQLiteMetaDataCollectionNames.SSISColumns">
      <summary>The name of the metadata collection for SSIS tables. </summary>
      <keywords>SQLiteMetaDataCollectionNames.SSISColumns field </keywords>
      <value>The value is "SSISTables". </value>
    </member>
    <member name="F:Devart.Data.SQLite.SQLiteMetaDataCollectionNames.Tables">
      <summary>The name of the metadata collection for SQLite tables. </summary>
      <keywords>SQLiteMetaDataCollectionNames.Tables field </keywords>
      <value>The value is "Tables". </value>
    </member>
    <member name="F:Devart.Data.SQLite.SQLiteMetaDataCollectionNames.Triggers">
      <summary>The name of the metadata collection for triggers. </summary>
      <keywords>SQLiteMetaDataCollectionNames.Triggers field </keywords>
      <value>The value is "Triggers". </value>
    </member>
    <member name="F:Devart.Data.SQLite.SQLiteMetaDataCollectionNames.UniqueKeys">
      <summary> The name of the metadata collection for unique keys. </summary>
      <keywords>SQLiteMetaDataCollectionNames.UniqueKeys field </keywords>
      <value>The value is "UniqueKeys". </value>
    </member>
    <member name="F:Devart.Data.SQLite.SQLiteMetaDataCollectionNames.UserDefinedFunctions">
      <summary>The name of the metadata collection for user-defined functions. </summary>
      <keywords>SQLiteMetaDataCollectionNames.UserDefinedFunctions field </keywords>
      <value>The value is "UserDefinedFunctions". </value>
    </member>
    <member name="F:Devart.Data.SQLite.SQLiteMetaDataCollectionNames.ViewColumns">
      <summary>The name of the metadata collection for columns available in database views. </summary>
      <keywords>SQLiteMetaDataCollectionNames.ViewColumns field </keywords>
      <value>The value is "ViewColumns". </value>
    </member>
    <member name="F:Devart.Data.SQLite.SQLiteMetaDataCollectionNames.Views">
      <summary>The name of the metadata collection for database views. </summary>
      <keywords>SQLiteMetaDataCollectionNames.Views field </keywords>
      <value>The value is "Views". </value>
    </member>
    <member name="T:Devart.Data.SQLite.SQLiteMonitor">
      <summary>Monitors dynamic SQL execution in applications that use dotConnect for SQLite. </summary>
    </member>
    <member name="M:Devart.Data.SQLite.SQLiteMonitor.#ctor()">
      <summary>Initializes a new instance of the <see cref="T:Devart.Data.SQLite.SQLiteMonitor" /> class. </summary>
    </member>
    <member name="P:Devart.Data.SQLite.SQLiteMonitor.IsActive">
      <summary>Gets or sets whether <see cref="T:Devart.Data.SQLite.SQLiteMonitor" /> should watch SQL execution. </summary>
      <keywords>SQLiteMonitor.IsActive property </keywords>
      <value>
        <see langword="true" /> if the <see cref="T:Devart.Data.SQLite.SQLiteMonitor" /> object should detect SQL queries peformed by the application; <see langword="false" /> otherwise. </value>
    </member>
    <member name="T:Devart.Data.SQLite.SQLiteParameter">
      <summary>Represents a parameter to a <see cref="T:Devart.Data.SQLite.SQLiteCommand" />, and optionally, its mapping to <see cref="T:System.Data.DataSet" /> columns. </summary>
    </member>
    <member name="M:Devart.Data.SQLite.SQLiteParameter.#ctor()">
      <summary>Initializes a new instance of the <see cref="T:Devart.Data.SQLite.SQLiteParameter" /> class. </summary>
      <overloads>Initializes a new instance of the <see cref="T:Devart.Data.SQLite.SQLiteParameter" /> class. </overloads>
    </member>
    <member name="M:Devart.Data.SQLite.SQLiteParameter.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:Devart.Data.SQLite.SQLiteParameter" /> class. </summary>
      <param name="parameterName">The name of the parameter. </param>
    </member>
    <member name="M:Devart.Data.SQLite.SQLiteParameter.#ctor(System.String,Devart.Data.SQLite.SQLiteType)">
      <summary>Initializes a new instance of the <see cref="T:Devart.Data.SQLite.SQLiteParameter" /> class with the parameter name and data type. </summary>
      <param name="parameterName">The name of the parameter. </param>
      <param name="dbType">One of the <see cref="T:Devart.Data.SQLite.SQLiteType" /> values. </param>
    </member>
    <member name="M:Devart.Data.SQLite.SQLiteParameter.#ctor(System.String,Devart.Data.SQLite.SQLiteType,System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:Devart.Data.SQLite.SQLiteParameter" /> class with the parameter name, data type, and width. </summary>
      <param name="parameterName">The name of the parameter. </param>
      <param name="dbType">One of the <see cref="T:Devart.Data.SQLite.SQLiteType" /> values. </param>
      <param name="size">The maximum size, in bytes, of the data within the column. </param>
    </member>
    <member name="M:Devart.Data.SQLite.SQLiteParameter.#ctor(System.String,Devart.Data.SQLite.SQLiteType,System.Int32,System.Data.ParameterDirection,System.Boolean,System.Byte,System.Byte,System.String,System.Data.DataRowVersion,System.Boolean,System.Object)">
      <summary>Initializes a new instance of the <see cref="T:Devart.Data.SQLite.SQLiteParameter" /> class. </summary>
      <param name="parameterName">The name of the parameter. </param>
      <param name="dbType">The name of the parameter. </param>
      <param name="size">The maximum size, in bytes, of the data within the column. </param>
      <param name="direction">The direction of the parameter. </param>
      <param name="isNullable"><see langword="true" /> if the value of the field can be null; otherwise, <see langword="false" />. </param>
      <param name="precision">The total number of digits to the left and right of the decimal point to which <see cref="P:Devart.Common.DbParameterBase.Value" /> is resolved. </param>
      <param name="scale">The total number of decimal places to which <see cref="P:Devart.Common.DbParameterBase.Value" /> is resolved. </param>
      <param name="sourceColumn">The name of the source column. </param>
      <param name="sourceVersion">One of the <see cref="T:System.Data.DataRowVersion" /> values. </param>
      <param name="sourceColumnNullMapping"><see langword="true" /> if the source column is nullable; <see langword="false" /> if it is not. </param>
      <param name="value">An Object that is the value of the <see cref="T:Devart.Data.SQLite.SQLiteParameter" />. </param>
    </member>
    <member name="M:Devart.Data.SQLite.SQLiteParameter.#ctor(System.String,Devart.Data.SQLite.SQLiteType,System.Int32,System.Data.ParameterDirection,System.Boolean,System.Byte,System.Byte,System.String,System.Data.DataRowVersion,System.Object)">
      <summary>Initializes a new instance of the <see cref="T:Devart.Data.SQLite.SQLiteParameter" /> class with the parameter name, data type, width, source column name, parameter direction, numeric precision, and other properties. </summary>
      <param name="parameterName">The name of the parameter. </param>
      <param name="dbType">One of the <see cref="T:Devart.Data.SQLite.SQLiteType" /> values. </param>
      <param name="size">The maximum size, in bytes, of the data within the column. </param>
      <param name="direction">One of the <see cref="T:System.Data.ParameterDirection" /> values. </param>
      <param name="isNullable"><see langword="true" /> if the value of the field can be null; otherwise, <see langword="false" />. </param>
      <param name="precision">The total number of digits to the left and right of the decimal point to which <see cref="P:Devart.Common.DbParameterBase.Value" /> is resolved. </param>
      <param name="scale">The total number of decimal places to which <see cref="P:Devart.Common.DbParameterBase.Value" /> is resolved. </param>
      <param name="sourceColumn">The name of the source column. </param>
      <param name="sourceVersion">One of the <see cref="T:System.Data.DataRowVersion" /> values. </param>
      <param name="value">An Object that is the value of the <see cref="T:Devart.Data.SQLite.SQLiteParameter" />. </param>
    </member>
    <member name="M:Devart.Data.SQLite.SQLiteParameter.#ctor(System.String,Devart.Data.SQLite.SQLiteType,System.Int32,System.String)">
      <summary>Initializes a new instance of the <see cref="T:Devart.Data.SQLite.SQLiteParameter" /> class with the parameter name, data type, width, and source column name. For internal use. </summary>
      <param name="parameterName">The name of the parameter. </param>
      <param name="dbType">One of the <see cref="T:Devart.Data.SQLite.SQLiteType" /> values. </param>
      <param name="size">The maximum size, in bytes, of the data within the column. </param>
      <param name="sourceColumn">The name of the source column. </param>
    </member>
    <member name="M:Devart.Data.SQLite.SQLiteParameter.#ctor(System.String,System.Data.ParameterDirection,System.Boolean,System.String,System.Data.DataRowVersion,System.Object)">
      <summary>Initializes a new instance of the <see cref="T:Devart.Data.SQLite.SQLiteParameter" /> class. </summary>
      <param name="parameterName">The name of the parameter. </param>
      <param name="direction">The direction of the parameter. </param>
      <param name="isNullable"><see langword="true" /> if the value of the field can be null; otherwise, <see langword="false" />. </param>
      <param name="sourceColumn">The name of the source column. </param>
      <param name="sourceVersion">One of the <see cref="T:System.Data.DataRowVersion" /> values. </param>
      <param name="value">An Object that is the value of the <see cref="T:Devart.Data.SQLite.SQLiteParameter" />. </param>
    </member>
    <member name="M:Devart.Data.SQLite.SQLiteParameter.#ctor(System.String,System.Object)">
      <summary>Initializes a new instance of the <see cref="T:Devart.Data.SQLite.SQLiteParameter" /> class with the parameter name and a <see cref="T:Devart.Data.SQLite.SQLiteParameter" /> object. </summary>
      <param name="parameterName">The name of the parameter. </param>
      <param name="value">An Object that is the value of the <see cref="T:Devart.Data.SQLite.SQLiteParameter" />. </param>
    </member>
    <member name="M:Devart.Data.SQLite.SQLiteParameter.Clone()">
      <summary>Creates a new object that is a copy of the current <see cref="T:Devart.Data.SQLite.SQLiteParameter" /> instance. </summary>
      <keywords>SQLiteParameter.Clone method </keywords>
      <returns>A new <see cref="T:Devart.Data.SQLite.SQLiteParameter" /> object in which all property values are the same as the original. </returns>
    </member>
    <member name="P:Devart.Data.SQLite.SQLiteParameter.DbType">
      <summary>Gets or sets the <see cref="T:System.Data.DbType" /> of the parameter. </summary>
      <keywords>SQLiteParameter.DbType property </keywords>
      <value>One of the <see cref="T:System.Data.DbType" /> values. The default value is <see cref="T:System.String" />. </value>
    </member>
    <member name="P:Devart.Data.SQLite.SQLiteParameter.Direction">
      <summary>Gets or sets direction of the parameter. </summary>
      <keywords>SQLiteParameter.Direction property </keywords>
      <value>Always <see cref="F:System.Data.ParameterDirection.Input" />, as SQLite does not support other directions. </value>
    </member>
    <member name="P:Devart.Data.SQLite.SQLiteParameter.Precision">
      <summary>Gets or sets the maximum number of digits used to represent the <see cref="P:Devart.Common.DbParameterBase.Value" /> property. </summary>
      <keywords>SQLiteParameter.Precision property </keywords>
      <value>The maximum number of digits used to represent the <see cref="P:Devart.Common.DbParameterBase.Value" /> property. The default value is 0. </value>
    </member>
    <member name="M:Devart.Data.SQLite.SQLiteParameter.ResetDbType()">
      <summary>Clears explicit <see cref="P:Devart.Data.SQLite.SQLiteParameter.SQLiteType" /> assignment. </summary>
      <keywords>SQLiteParameter.ResetDbType method </keywords>
    </member>
    <member name="P:Devart.Data.SQLite.SQLiteParameter.SQLiteType">
      <summary>Gets or sets the <see cref="T:Devart.Data.SQLite.SQLiteType" /> of the parameter. </summary>
      <keywords>SQLiteParameter.SQLiteType property </keywords>
      <value>A <see cref="T:Devart.Data.SQLite.SQLiteType" /> value that is the <see cref="P:Devart.Data.SQLite.SQLiteParameter.SQLiteType" /> of the parameter. </value>
    </member>
    <member name="P:Devart.Data.SQLite.SQLiteParameter.SQLiteValue">
      <summary>Gets or sets the provider-specific value of the parameter. </summary>
      <keywords>SQLiteParameter.SQLiteValue property </keywords>
      <value>The provider-specific value of the parameter. </value>
    </member>
    <member name="P:Devart.Data.SQLite.SQLiteParameter.Scale">
      <summary>Gets or sets the number of decimal places to which <see cref="P:Devart.Common.DbParameterBase.Value" /> is resolved. </summary>
      <keywords>SQLiteParameter.Scale property </keywords>
      <value>The number of decimal places to which <see cref="P:Devart.Common.DbParameterBase.Value" /> is resolved. The default value is 0. </value>
    </member>
    <member name="M:Devart.Data.SQLite.SQLiteParameter.ToString()">
      <summary>Gets a string containing the <see cref="P:Devart.Common.DbParameterBase.ParameterName" />. </summary>
      <keywords>SQLiteParameter.ToString method </keywords>
      <returns>A string containing the <see cref="P:Devart.Common.DbParameterBase.ParameterName" />. </returns>
    </member>
    <member name="T:Devart.Data.SQLite.SQLiteParameterCollection">
      <summary>Collects all parameters relevant to a <see cref="T:Devart.Data.SQLite.SQLiteCommand" /> as well as their respective mappings to <see cref="T:System.Data.DataSet" /> columns. </summary>
    </member>
    <member name="M:Devart.Data.SQLite.SQLiteParameterCollection.Add(Devart.Data.SQLite.SQLiteParameter)">
      <summary>Adds the specified <see cref="T:Devart.Data.SQLite.SQLiteParameter" /> to the <see cref="T:Devart.Data.SQLite.SQLiteParameterCollection" />. </summary>
      <keywords>SQLiteParameterCollection.Add method </keywords>
      <param name="value">The <see cref="T:Devart.Data.SQLite.SQLiteParameter" /> to add to the collection. </param>
      <returns>The new <see cref="T:Devart.Data.SQLite.SQLiteParameter" /> object. </returns>
      <overloads>Adds the specified <see cref="T:Devart.Data.SQLite.SQLiteParameter" /> to the <see cref="T:Devart.Data.SQLite.SQLiteParameterCollection" />. </overloads>
    </member>
    <member name="M:Devart.Data.SQLite.SQLiteParameterCollection.Add(System.Object)">
      <summary>Adds the specified <see cref="T:Devart.Data.SQLite.SQLiteParameter" /> to the <see cref="T:Devart.Data.SQLite.SQLiteCommand" />. </summary>
      <keywords>SQLiteParameterCollection.Add method </keywords>
      <param name="value">The <see cref="T:Devart.Data.SQLite.SQLiteParameter" /> to add to the <see cref="T:Devart.Data.SQLite.SQLiteCommand" />. </param>
      <returns>The index of the new <see cref="T:Devart.Data.SQLite.SQLiteParameter" /> object. </returns>
    </member>
    <member name="M:Devart.Data.SQLite.SQLiteParameterCollection.Add(System.String,Devart.Data.SQLite.SQLiteType)">
      <summary>Adds a <see cref="T:Devart.Data.SQLite.SQLiteParameter" /> to the <see cref="T:Devart.Data.SQLite.SQLiteParameterCollection" /> given the parameter name and data type. </summary>
      <keywords>SQLiteParameterCollection.Add method </keywords>
      <param name="parameterName">The name of the parameter. </param>
      <param name="type">One of the <see cref="T:Devart.Data.SQLite.SQLiteType" /> values. </param>
      <returns>The new <see cref="T:Devart.Data.SQLite.SQLiteParameter" /> object. </returns>
    </member>
    <member name="M:Devart.Data.SQLite.SQLiteParameterCollection.Add(System.String,Devart.Data.SQLite.SQLiteType,System.Int32)">
      <summary>Adds a <see cref="T:Devart.Data.SQLite.SQLiteParameter" /> to the <see cref="T:Devart.Data.SQLite.SQLiteParameterCollection" /> given the the parameter name, data type, and data size. </summary>
      <keywords>SQLiteParameterCollection.Add method </keywords>
      <param name="parameterName">The name of the parameter. </param>
      <param name="dbType">One of the <see cref="T:Devart.Data.SQLite.SQLiteType" /> values. </param>
      <param name="size">The maximum size, in bytes, of the data the parameter can contain. </param>
      <returns>The new <see cref="T:Devart.Data.SQLite.SQLiteParameter" /> object. </returns>
    </member>
    <member name="M:Devart.Data.SQLite.SQLiteParameterCollection.Add(System.String,Devart.Data.SQLite.SQLiteType,System.Int32,System.String)">
      <summary>Adds a <see cref="T:Devart.Data.SQLite.SQLiteParameter" /> to the <see cref="T:Devart.Data.SQLite.SQLiteParameterCollection" /> given the parameter name, data type, column width, and source column name. For internal use. </summary>
      <keywords>SQLiteParameterCollection.Add method </keywords>
      <param name="parameterName">The name of the parameter. </param>
      <param name="dbType">One of the <see cref="T:Devart.Data.SQLite.SQLiteType" /> values. </param>
      <param name="size">The maximum size, in bytes, of the data the parameter can contain. </param>
      <param name="sourceColumn">The name of the source column. </param>
      <returns>The new <see cref="T:Devart.Data.SQLite.SQLiteParameter" /> object. </returns>
    </member>
    <member name="M:Devart.Data.SQLite.SQLiteParameterCollection.Add(System.String,System.Object)">
      <summary>Adds a <see cref="T:Devart.Data.SQLite.SQLiteParameter" /> to the <see cref="T:Devart.Data.SQLite.SQLiteParameterCollection" /> given the parameter name and value. </summary>
      <keywords>SQLiteParameterCollection.Add method </keywords>
      <param name="parameterName">The name of the parameter. </param>
      <param name="value">The <see cref="P:Devart.Common.DbParameterBase.Value" /> of the <see cref="T:Devart.Data.SQLite.SQLiteParameter" /> to add to the collection. </param>
      <returns>The new <see cref="T:Devart.Data.SQLite.SQLiteParameter" /> object. </returns>
    </member>
    <member name="M:Devart.Data.SQLite.SQLiteParameterCollection.AddRange(System.Array)">
      <summary>Adds a <see cref="T:Devart.Data.SQLite.SQLiteParameter" /> to the <see cref="T:Devart.Data.SQLite.SQLiteParameterCollection" /> given  parameter values. </summary>
      <keywords>SQLiteParameterCollection.AddRange method </keywords>
      <param name="values">Array of <see cref="T:Devart.Data.SQLite.SQLiteParameter" /> objects to be added to the <see cref="T:Devart.Data.SQLite.SQLiteParameterCollection" />. </param>
    </member>
    <member name="M:Devart.Data.SQLite.SQLiteParameterCollection.AddWithValue(System.String,System.Object)">
      <summary>Adds a <see cref="T:Devart.Data.SQLite.SQLiteParameter" /> to the <see cref="T:Devart.Data.SQLite.SQLiteParameterCollection" /> given the parameter name and value. </summary>
      <keywords>SQLiteParameterCollection.AddWithValue method </keywords>
      <param name="parameterName">Name of the parameter. </param>
      <param name="value">Value of the parameter. </param>
      <returns>A new <see cref="T:Devart.Data.SQLite.SQLiteParameter" /> object. </returns>
    </member>
    <member name="M:Devart.Data.SQLite.SQLiteParameterCollection.Clear()">
      <summary>Removes all items from the collection. </summary>
      <keywords>SQLiteParameterCollection.Clear method </keywords>
    </member>
    <member name="M:Devart.Data.SQLite.SQLiteParameterCollection.Insert(System.Int32,System.Object)">
      <summary>Inserts a <see cref="T:Devart.Data.SQLite.SQLiteParameter" /> into the collection at the specified index. </summary>
      <keywords>SQLiteParameterCollection.Insert method </keywords>
      <param name="index">The zero-based index where the parameter is to be inserted within the collection. </param>
      <param name="value">The <see cref="T:Devart.Data.SQLite.SQLiteParameter" /> object to add to the collection. </param>
    </member>
    <member name="P:Devart.Data.SQLite.SQLiteParameterCollection.Item(System.Int32)">
      <summary>Gets or sets the <see cref="T:Devart.Data.SQLite.SQLiteParameter" /> at the specified index. </summary>
      <keywords>SQLiteParameterCollection.Item property </keywords>
      <param name="index">The zero-based index of the parameter to retrieve. </param>
      <value>The <see cref="T:Devart.Data.SQLite.SQLiteParameter" /> at the specified index. </value>
    </member>
    <member name="P:Devart.Data.SQLite.SQLiteParameterCollection.Item(System.String)">
      <summary>Gets or sets the <see cref="T:Devart.Data.SQLite.SQLiteParameter" /> with the specified name. </summary>
      <keywords>SQLiteParameterCollection.Item property </keywords>
      <param name="parameterName">The name of the parameter to retrieve. </param>
      <value>The <see cref="T:Devart.Data.SQLite.SQLiteParameter" /> with the specified name. </value>
    </member>
    <member name="M:Devart.Data.SQLite.SQLiteParameterCollection.Remove(System.Object)">
      <summary>Removes the specified <see cref="T:Devart.Data.SQLite.SQLiteParameter" /> from the collection. </summary>
      <keywords>SQLiteParameterCollection.Remove method </keywords>
      <param name="value">The <see cref="T:Devart.Data.SQLite.SQLiteParameter" /> object to remove from the collection. </param>
    </member>
    <member name="M:Devart.Data.SQLite.SQLiteParameterCollection.RemoveAt(System.Int32)">
      <summary>Removes the <see cref="T:Devart.Data.SQLite.SQLiteParameter" /> at the specified index from the collection. </summary>
      <keywords>SQLiteParameterCollection.RemoveAt method </keywords>
      <param name="index">The zero-based index of the parameter to remove. </param>
      <overloads>Removes the specified <see cref="T:Devart.Data.SQLite.SQLiteParameter" /> from the collection. </overloads>
    </member>
    <member name="M:Devart.Data.SQLite.SQLiteParameterCollection.RemoveAt(System.String)">
      <summary>Removes the <see cref="T:Devart.Data.SQLite.SQLiteParameter" /> with the specified name from the collection. </summary>
      <keywords>SQLiteParameterCollection.RemoveAt method </keywords>
      <param name="parameterName">The name of the parameter to remove. </param>
    </member>
    <member name="T:Devart.Data.SQLite.SQLiteProgressCallback">
      <summary>Represents the method that can be registered as a callback function to be called periodically during long running calls to the database. </summary>
      <keywords>SQLiteProgressCallback delegate </keywords>
    </member>
    <member name="T:Devart.Data.SQLite.SQLiteProviderFactory">
      <summary>Represents a factory required to create inheritors of generic base classes to use with dotConnect for SQLite. </summary>
    </member>
    <member name="M:Devart.Data.SQLite.SQLiteProviderFactory.#ctor()">
      <summary>Creates an instance of <see cref="T:Devart.Data.SQLite.SQLiteProviderFactory" />. </summary>
    </member>
    <member name="P:Devart.Data.SQLite.SQLiteProviderFactory.CanCreateDataSourceEnumerator">
      <summary>Gets a value indicating whether the <see cref="T:Devart.Data.SQLite.SQLiteProviderFactory" /> can create a <see cref="T:Devart.Common.DbDataSourceEnumerator" /> object. </summary>
      <keywords>SQLiteProviderFactory.CanCreateDataSourceEnumerator property </keywords>
      <value><see langword="true" />, if a <see cref="T:Devart.Common.DbDataSourceEnumerator" /> object can be created; otherwise, <see langword="false" />. </value>
    </member>
    <member name="M:Devart.Data.SQLite.SQLiteProviderFactory.CreateCommand()">
      <summary>Creates and returns a <see cref="T:Devart.Data.SQLite.SQLiteCommand" /> object. </summary>
      <keywords>SQLiteProviderFactory.CreateCommand method </keywords>
      <returns>A <see cref="T:Devart.Data.SQLite.SQLiteCommand" /> object. </returns>
    </member>
    <member name="M:Devart.Data.SQLite.SQLiteProviderFactory.CreateCommandBuilder()">
      <summary>Creates and returns a <see cref="T:Devart.Data.SQLite.SQLiteCommandBuilder" /> object. </summary>
      <keywords>SQLiteProviderFactory.CreateCommandBuilder method </keywords>
      <returns>A <see cref="T:Devart.Data.SQLite.SQLiteCommandBuilder" /> object. </returns>
    </member>
    <member name="M:Devart.Data.SQLite.SQLiteProviderFactory.CreateConnection()">
      <summary>Creates and returns a <see cref="T:Devart.Data.SQLite.SQLiteConnection" /> object. </summary>
      <keywords>SQLiteProviderFactory.CreateConnection method </keywords>
      <returns>A <see cref="T:Devart.Data.SQLite.SQLiteConnection" /> object. </returns>
    </member>
    <member name="M:Devart.Data.SQLite.SQLiteProviderFactory.CreateConnectionStringBuilder()">
      <summary>Creates and returns a <see cref="T:Devart.Data.SQLite.SQLiteConnectionStringBuilder" /> object. </summary>
      <keywords>SQLiteProviderFactory.CreateConnectionStringBuilder method </keywords>
      <returns>A <see cref="T:Devart.Data.SQLite.SQLiteConnectionStringBuilder" /> object. </returns>
    </member>
    <member name="M:Devart.Data.SQLite.SQLiteProviderFactory.CreateDataAdapter()">
      <summary>Creates and returns a <see cref="T:Devart.Data.SQLite.SQLiteDataAdapter" /> object. </summary>
      <keywords>SQLiteProviderFactory.CreateDataAdapter method </keywords>
      <returns>A <see cref="T:Devart.Data.SQLite.SQLiteDataAdapter" /> object. </returns>
    </member>
    <member name="M:Devart.Data.SQLite.SQLiteProviderFactory.CreateParameter()">
      <summary>Creates and returns a <see cref="T:Devart.Data.SQLite.SQLiteParameter" /> object. </summary>
      <keywords>SQLiteProviderFactory.CreateParameter method </keywords>
      <returns>A <see cref="T:Devart.Data.SQLite.SQLiteParameter" /> object. </returns>
    </member>
    <member name="F:Devart.Data.SQLite.SQLiteProviderFactory.Instance">
      <summary>Returns the instance of <see cref="T:Devart.Data.SQLite.SQLiteProviderFactory" />. </summary>
      <keywords>SQLiteProviderFactory.Instance field </keywords>
    </member>
    <member name="T:Devart.Data.SQLite.SQLiteRowUpdatedEventArgs">
      <summary>Provides data for the <see cref="E:Devart.Data.SQLite.SQLiteDataAdapter.RowUpdated" /> event. </summary>
    </member>
    <member name="M:Devart.Data.SQLite.SQLiteRowUpdatedEventArgs.#ctor(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)">
      <summary>Initializes a new instance of the <see cref="T:Devart.Data.SQLite.SQLiteRowUpdatedEventArgs" /> class. </summary>
      <param name="row">The <see cref="T:System.Data.DataRow" /> sent through an update operation. </param>
      <param name="command">The <see cref="T:Devart.Data.SQLite.SQLiteCommand" /> executed when <see cref="M:System.Data.Common.DbDataAdapter.Update()" /> is called. </param>
      <param name="statementType">One of the <see cref="T:System.Data.StatementType" /> values that specifies the type of query executed. </param>
      <param name="tableMapping">The <see cref="T:System.Data.Common.DataTableMapping" /> sent through <see cref="M:System.Data.Common.DbDataAdapter.Update()" />. </param>
    </member>
    <member name="P:Devart.Data.SQLite.SQLiteRowUpdatedEventArgs.Command">
      <summary>Gets the <see cref="T:Devart.Data.SQLite.SQLiteCommand" /> executed when <see cref="M:System.Data.Common.DbDataAdapter.Update()" /> is called. </summary>
      <keywords>SQLiteRowUpdatedEventArgs.Command property </keywords>
      <value>The <see cref="T:Devart.Data.SQLite.SQLiteCommand" /> to execute when <see cref="M:System.Data.Common.DbDataAdapter.Update()" /> is called. </value>
    </member>
    <member name="T:Devart.Data.SQLite.SQLiteRowUpdatedEventHandler">
      <summary>Represents the method that will handle the <see cref="E:Devart.Data.SQLite.SQLiteDataAdapter.RowUpdated" /> event of an <see cref="T:Devart.Data.SQLite.SQLiteDataAdapter" />. </summary>
      <keywords>SQLiteRowUpdatedEventHandler delegate </keywords>
      <param name="sender">The source of the event. </param>
      <param name="e">The <see cref="T:Devart.Data.SQLite.SQLiteRowUpdatedEventArgs" /> object that contains the event data. </param>
    </member>
    <member name="T:Devart.Data.SQLite.SQLiteRowUpdatingEventArgs">
      <summary>Provides data for the <see cref="E:Devart.Data.SQLite.SQLiteDataAdapter.RowUpdating" /> event. This class cannot be inherited. </summary>
    </member>
    <member name="M:Devart.Data.SQLite.SQLiteRowUpdatingEventArgs.#ctor(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)">
      <summary>Initializes a new instance of the <see cref="T:Devart.Data.SQLite.SQLiteRowUpdatingEventArgs" /> class. </summary>
      <param name="row">The <see cref="T:System.Data.DataRow" /> to update. </param>
      <param name="command">The <see cref="T:Devart.Data.SQLite.SQLiteCommand" /> to execute during <see cref="M:System.Data.Common.DbDataAdapter.Update()" /> is called. </param>
      <param name="statementType">One of the <see cref="T:System.Data.StatementType" /> values that specifies the type of query executed. </param>
      <param name="tableMapping">The <see cref="T:System.Data.Common.DataTableMapping" /> sent through <see cref="M:System.Data.Common.DbDataAdapter.Update()" />. </param>
    </member>
    <member name="P:Devart.Data.SQLite.SQLiteRowUpdatingEventArgs.Command">
      <summary>Gets or sets the <see cref="T:Devart.Data.SQLite.SQLiteCommand" /> to execute when <see cref="M:System.Data.Common.DbDataAdapter.Update()" /> is called. </summary>
      <keywords>SQLiteRowUpdatingEventArgs.Command property </keywords>
      <value>The <see cref="T:Devart.Data.SQLite.SQLiteCommand" /> to execute when <see cref="M:System.Data.Common.DbDataAdapter.Update()" /> is called. </value>
    </member>
    <member name="T:Devart.Data.SQLite.SQLiteRowUpdatingEventHandler">
      <summary>Represents the method that will handle the <see cref="E:Devart.Data.SQLite.SQLiteDataAdapter.RowUpdating" /> event of an <see cref="T:Devart.Data.SQLite.SQLiteDataAdapter" />. </summary>
      <keywords>SQLiteRowUpdatingEventHandler delegate </keywords>
      <param name="sender">The source of the event. </param>
      <param name="e">The <see cref="T:Devart.Data.SQLite.SQLiteRowUpdatingEventArgs" /> object that contains the event data. </param>
    </member>
    <member name="T:Devart.Data.SQLite.SQLiteScalarFunction">
      <summary>Base class for user-defined scalar functions. </summary>
    </member>
    <member name="M:Devart.Data.SQLite.SQLiteScalarFunction.#ctor(System.String,System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:Devart.Data.SQLite.SQLiteScalarFunction" /> class. </summary>
      <param name="name">User-defined function name to register. </param>
      <param name="argumentCount">Number of arguments, the user-defined function accepts. </param>
    </member>
    <member name="M:Devart.Data.SQLite.SQLiteScalarFunction.Invoke(System.Object[],Devart.Data.SQLite.SQLiteConnection)">
      <summary>Should implement the user-defined function. </summary>
      <keywords>SQLiteScalarFunction.Invoke method </keywords>
      <param name="args">User-defined function arguments. </param>
      <param name="connection">The connection to register the function in. </param>
      <returns>Result of the user-defined scalar function. </returns>
    </member>
    <member name="T:Devart.Data.SQLite.SQLiteScalarFunction`1">
      <summary>Base class for user-defined scalar functions with no parameters. </summary>
      <typeparam name="TResult">Type of the user-defined function result. </typeparam>
    </member>
    <member name="M:Devart.Data.SQLite.SQLiteScalarFunction`1.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:Devart.Data.SQLite.SQLiteScalarFunction`1" /> class. </summary>
      <param name="name">User-defined function name to register. </param>
    </member>
    <member name="M:Devart.Data.SQLite.SQLiteScalarFunction`1.Execute(Devart.Data.SQLite.SQLiteConnection)">
      <summary>Should implement the user-defined function. </summary>
      <keywords>SQLiteScalarFunction`1.Execute method </keywords>
      <param name="connection">The connection to register the function in. </param>
      <returns>Result of the user-defined scalar function. </returns>
    </member>
    <member name="M:Devart.Data.SQLite.SQLiteScalarFunction`1.Invoke(System.Object[],Devart.Data.SQLite.SQLiteConnection)">
      <summary>Should implement the user-defined function. </summary>
      <keywords>SQLiteScalarFunction`1.Invoke method </keywords>
      <param name="args">User-defined function arguments. </param>
      <param name="connection">The connection to register the function in. </param>
      <returns>Result of the user-defined scalar function. </returns>
    </member>
    <member name="T:Devart.Data.SQLite.SQLiteScalarFunction`2">
      <summary>Base class for user-defined scalar functions with one parameter. </summary>
      <typeparam name="T1">Type of the user-defined function parameter. </typeparam>
      <typeparam name="TResult">Type of the user-defined function result. </typeparam>
    </member>
    <member name="M:Devart.Data.SQLite.SQLiteScalarFunction`2.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:Devart.Data.SQLite.SQLiteScalarFunction`1" /> class. </summary>
      <param name="name">User-defined function name to register. </param>
    </member>
    <member name="M:Devart.Data.SQLite.SQLiteScalarFunction`2.Execute(`0,Devart.Data.SQLite.SQLiteConnection)">
      <summary>Should implement the user-defined function. </summary>
      <keywords>SQLiteScalarFunction`2.Execute method </keywords>
      <param name="arg1">User-defined function argument. </param>
      <param name="connection">The connection to register the function in. </param>
      <returns>Result of the user-defined scalar function. </returns>
    </member>
    <member name="M:Devart.Data.SQLite.SQLiteScalarFunction`2.Invoke(System.Object[],Devart.Data.SQLite.SQLiteConnection)">
      <summary>Should implement the user-defined function. </summary>
      <keywords>SQLiteScalarFunction`2.Invoke method </keywords>
      <param name="args">User-defined function arguments. </param>
      <param name="connection">The connection to register the function in. </param>
      <returns>Result of the user-defined scalar function. </returns>
    </member>
    <member name="T:Devart.Data.SQLite.SQLiteScalarFunction`3">
      <summary>Base class for user-defined scalar functions with two parameters. </summary>
      <typeparam name="T1">Type of the first user-defined function parameter. </typeparam>
      <typeparam name="T2">Type of the second user-defined function parameter. </typeparam>
      <typeparam name="TResult">Type of the user-defined function result. </typeparam>
    </member>
    <member name="M:Devart.Data.SQLite.SQLiteScalarFunction`3.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:Devart.Data.SQLite.SQLiteScalarFunction`1" /> class. </summary>
      <param name="name">User-defined function name to register. </param>
    </member>
    <member name="M:Devart.Data.SQLite.SQLiteScalarFunction`3.Execute(`0,`1,Devart.Data.SQLite.SQLiteConnection)">
      <summary>Should implement the user-defined function. </summary>
      <keywords>SQLiteScalarFunction`3.Execute method </keywords>
      <param name="arg1">First user-defined function argument. </param>
      <param name="arg2">Second user-defined function argument. </param>
      <param name="connection">The connection to register the function in. </param>
      <returns>Result of the user-defined scalar function. </returns>
    </member>
    <member name="M:Devart.Data.SQLite.SQLiteScalarFunction`3.Invoke(System.Object[],Devart.Data.SQLite.SQLiteConnection)">
      <summary>Should implement the user-defined function. </summary>
      <keywords>SQLiteScalarFunction`3.Invoke method </keywords>
      <param name="args">User-defined function arguments. </param>
      <param name="connection">The connection to register the function in. </param>
      <returns>Result of the user-defined scalar function. </returns>
    </member>
    <member name="T:Devart.Data.SQLite.SQLiteScalarFunction`4">
      <summary>Base class for user-defined scalar functions with three parameters. </summary>
      <typeparam name="T1">Type of the first user-defined function parameter. </typeparam>
      <typeparam name="T2">Type of the second user-defined function parameter. </typeparam>
      <typeparam name="T3">Type of the third user-defined function parameter. </typeparam>
      <typeparam name="TResult">Type of the user-defined function result. </typeparam>
    </member>
    <member name="M:Devart.Data.SQLite.SQLiteScalarFunction`4.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:Devart.Data.SQLite.SQLiteScalarFunction`1" /> class. </summary>
      <param name="name">User-defined function name to register. </param>
    </member>
    <member name="M:Devart.Data.SQLite.SQLiteScalarFunction`4.Execute(`0,`1,`2,Devart.Data.SQLite.SQLiteConnection)">
      <summary>Should implement the user-defined function. </summary>
      <keywords>SQLiteScalarFunction`4.Execute method </keywords>
      <param name="arg1">First user-defined function argument. </param>
      <param name="arg2">Second user-defined function argument. </param>
      <param name="arg3">Third user-defined function argument. </param>
      <param name="connection">The connection to register the function in. </param>
      <returns>Result of the user-defined scalar function. </returns>
    </member>
    <member name="M:Devart.Data.SQLite.SQLiteScalarFunction`4.Invoke(System.Object[],Devart.Data.SQLite.SQLiteConnection)">
      <summary>Should implement the user-defined function. </summary>
      <keywords>SQLiteScalarFunction`4.Invoke method </keywords>
      <param name="args">User-defined function arguments. </param>
      <param name="connection">The connection to register the function in. </param>
      <returns>Result of the user-defined scalar function. </returns>
    </member>
    <member name="T:Devart.Data.SQLite.SQLiteScalarFunction`5">
      <summary>Base class for user-defined scalar functions with four parameters. </summary>
      <typeparam name="T1">Type of the first user-defined function parameter. </typeparam>
      <typeparam name="T2">Type of the second user-defined function parameter. </typeparam>
      <typeparam name="T3">Type of the third user-defined function parameter. </typeparam>
      <typeparam name="T4">Type of the fourth user-defined function parameter. </typeparam>
      <typeparam name="TResult">Type of the user-defined function result. </typeparam>
    </member>
    <member name="M:Devart.Data.SQLite.SQLiteScalarFunction`5.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:Devart.Data.SQLite.SQLiteScalarFunction`1" /> class. </summary>
      <param name="name">User-defined function name to register. </param>
    </member>
    <member name="M:Devart.Data.SQLite.SQLiteScalarFunction`5.Execute(`0,`1,`2,`3,Devart.Data.SQLite.SQLiteConnection)">
      <summary>Should implement the user-defined function. </summary>
      <keywords>SQLiteScalarFunction`5.Execute method </keywords>
      <param name="arg1">First user-defined function argument. </param>
      <param name="arg2">Second user-defined function argument. </param>
      <param name="arg3">Third user-defined function argument. </param>
      <param name="arg4">Fourth user-defined function argument. </param>
      <param name="connection">The connection to register the function in. </param>
      <returns>Result of the user-defined scalar function. </returns>
    </member>
    <member name="M:Devart.Data.SQLite.SQLiteScalarFunction`5.Invoke(System.Object[],Devart.Data.SQLite.SQLiteConnection)">
      <summary>Should implement the user-defined function. </summary>
      <keywords>SQLiteScalarFunction`5.Invoke method </keywords>
      <param name="args">User-defined function arguments. </param>
      <param name="connection">The connection to register the function in. </param>
      <returns>Result of the user-defined scalar function. </returns>
    </member>
    <member name="T:Devart.Data.SQLite.SQLiteScript">
      <summary>Serves to execute series of SQL statements separated by special symbols. </summary>
    </member>
    <member name="M:Devart.Data.SQLite.SQLiteScript.#ctor()">
      <summary>Initializes a new instance of the <see cref="T:Devart.Data.SQLite.SQLiteScript" /> class. </summary>
      <overloads>Initializes a new instance of the <see cref="T:Devart.Data.SQLite.SQLiteScript" /> class. </overloads>
    </member>
    <member name="M:Devart.Data.SQLite.SQLiteScript.#ctor(System.IO.Stream)">
      <summary>Initializes a new instance of the <see cref="T:Devart.Data.SQLite.SQLiteScript" /> class with a <b>Stream</b> object to get SQL statements from. </summary>
      <param name="stream">A <b>Stream</b> object that contains the script text. </param>
    </member>
    <member name="M:Devart.Data.SQLite.SQLiteScript.#ctor(System.IO.Stream,Devart.Data.SQLite.SQLiteConnection)">
      <summary>Initializes a new instance of the <see cref="T:Devart.Data.SQLite.SQLiteScript" /> class with a <b>Stream</b> object to get SQL statements from and a <see cref="T:Devart.Data.SQLite.SQLiteConnection" /> object. </summary>
      <param name="stream">A <b>Stream</b> object that contains the script text. </param>
      <param name="connection">A <see cref="T:Devart.Data.SQLite.SQLiteConnection" /> object that represents the connection to a database. </param>
    </member>
    <member name="M:Devart.Data.SQLite.SQLiteScript.#ctor(System.IO.TextReader)">
      <summary>Initializes a new instance of the <see cref="T:Devart.Data.SQLite.SQLiteScript" /> class with a <b>TextReader</b> object to get SQL statements from. </summary>
      <param name="reader">A <b>TextReader</b> object that contains the script text. </param>
    </member>
    <member name="M:Devart.Data.SQLite.SQLiteScript.#ctor(System.IO.TextReader,Devart.Data.SQLite.SQLiteConnection)">
      <summary>Initializes a new instance of the <see cref="T:Devart.Data.SQLite.SQLiteScript" /> class with a <b>TextReader</b> object to get SQL statements from and a <see cref="T:Devart.Data.SQLite.SQLiteConnection" /> object. </summary>
      <param name="reader">A <b>TextReader</b> object that contains the script text. </param>
      <param name="connection">A <see cref="T:Devart.Data.SQLite.SQLiteConnection" /> object that represents the connection to a database. </param>
    </member>
    <member name="M:Devart.Data.SQLite.SQLiteScript.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:Devart.Data.SQLite.SQLiteScript" /> class with the text of the query. </summary>
      <param name="scriptText">The text of the query. </param>
    </member>
    <member name="M:Devart.Data.SQLite.SQLiteScript.#ctor(System.String,Devart.Data.SQLite.SQLiteConnection)">
      <summary>Initializes a new instance of the <see cref="T:Devart.Data.SQLite.SQLiteScript" /> class  with the text of the query and a <see cref="T:Devart.Data.SQLite.SQLiteConnection" /> object. </summary>
      <param name="scriptText">The text of the query. </param>
      <param name="connection">A <see cref="T:Devart.Data.SQLite.SQLiteConnection" /> object that represents the connection to a database. </param>
    </member>
    <member name="P:Devart.Data.SQLite.SQLiteScript.Connection">
      <summary>Gets or sets the <see cref="T:Devart.Data.SQLite.SQLiteConnection" /> used by this instance of the <see cref="T:Devart.Data.SQLite.SQLiteScript" />. </summary>
      <keywords>SQLiteScript.Connection property </keywords>
      <value>The connection to a data source. The default value is a null reference. </value>
    </member>
    <member name="P:Devart.Data.SQLite.SQLiteScript.ScriptText">
      <summary>Gets or sets text of the script. </summary>
      <keywords>SQLiteScript.ScriptText property </keywords>
      <value>Script text. The default value is an empty string (""). </value>
    </member>
    <member name="T:Devart.Data.SQLite.SQLiteSecureDelete">
      <summary>Determines whether to overwrite the deleted data with zeroes. </summary>
    </member>
    <member name="F:Devart.Data.SQLite.SQLiteSecureDelete.Default">
      <summary>Use default SQLite secure deleting settings. </summary>
    </member>
    <member name="F:Devart.Data.SQLite.SQLiteSecureDelete.Off">
      <summary>The deleted data is not overwritten with zeroes. </summary>
    </member>
    <member name="F:Devart.Data.SQLite.SQLiteSecureDelete.On">
      <summary>The deleted data is overwritten with zeroes. </summary>
    </member>
    <member name="T:Devart.Data.SQLite.SQLiteSelectLimit">
      <summary>Represents SQLite LIMIT clause. </summary>
    </member>
    <member name="M:Devart.Data.SQLite.SQLiteSelectLimit.#ctor()">
      <summary>Initializes a new instance of the <see cref="T:Devart.Data.SQLite.SQLiteSelectLimit" /> class. </summary>
      <overloads>Initializes a new instance of the <see cref="T:Devart.Data.SQLite.SQLiteSelectLimit" /> class. </overloads>
    </member>
    <member name="M:Devart.Data.SQLite.SQLiteSelectLimit.#ctor(System.Int32,System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:Devart.Data.SQLite.SQLiteSelectLimit" /> class with given offset and count values. </summary>
      <param name="offset">The limit offset value. </param>
      <param name="count">The limit count value. </param>
    </member>
    <member name="M:Devart.Data.SQLite.SQLiteSelectLimit.#ctor(System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:Devart.Data.SQLite.SQLiteSelectLimit" /> class with given offset and count values. </summary>
      <param name="offset">The limit offset value. </param>
      <param name="count">The limit count value. </param>
    </member>
    <member name="P:Devart.Data.SQLite.SQLiteSelectLimit.Count">
      <summary>Gets or sets the limit count value. </summary>
      <keywords>SQLiteSelectLimit.Count property </keywords>
      <value>The limit count value. </value>
    </member>
    <member name="P:Devart.Data.SQLite.SQLiteSelectLimit.Offset">
      <summary>Gets or sets the limit offset value. </summary>
      <keywords>SQLiteSelectLimit.Offset property </keywords>
      <value>The limit offset value. </value>
    </member>
    <member name="M:Devart.Data.SQLite.SQLiteSelectLimit.ToString()">
      <summary>Returns a <see cref="T:System.String" /> that represents the current <see cref="T:System.Object" />. </summary>
      <keywords>SQLiteSelectLimit.ToString method </keywords>
      <returns>A <see cref="T:System.String" /> that represents the current <see cref="T:System.Object" />. </returns>
    </member>
    <member name="T:Devart.Data.SQLite.SQLiteSelectStatement">
      <summary>Represents SQLite SELECT statement. </summary>
    </member>
    <member name="M:Devart.Data.SQLite.SQLiteSelectStatement.#ctor()">
      <summary>Creates a new instance of the <see cref="T:Devart.Data.SQLite.SQLiteSelectStatement" /> class. </summary>
    </member>
    <member name="M:Devart.Data.SQLite.SQLiteSelectStatement.Clear()">
      <summary>Clears all parts of the <see cref="T:Devart.Data.SQLite.SQLiteSelectStatement" />. </summary>
      <keywords>SQLiteSelectStatement.Clear method </keywords>
    </member>
    <member name="P:Devart.Data.SQLite.SQLiteSelectStatement.Limit">
      <summary>Gets or sets the LIMIT clause for the statement. </summary>
      <keywords>SQLiteSelectStatement.Limit property </keywords>
      <value>The LIMIT clause for the statement. </value>
    </member>
    <member name="M:Devart.Data.SQLite.SQLiteSelectStatement.Parse(System.String,Devart.Common.ParserBehavior)">
      <summary>Converts the specified SELECT statement to a <see cref="T:Devart.Data.SQLite.SQLiteSelectStatement" /> object. </summary>
      <keywords>SQLiteSelectStatement.Parse method </keywords>
      <param name="text">The statement to parse. </param>
      <param name="behavior">One of the <see cref="T:Devart.Common.ParserBehavior" /> values. Determines what parts of the statement to analyze. </param>
      <returns>A <see cref="T:Devart.Data.SQLite.SQLiteSelectStatement" /> object that represents the specified SELECT statement. </returns>
    </member>
    <member name="M:Devart.Data.SQLite.SQLiteSelectStatement.TryParse(System.String,Devart.Common.ParserBehavior,Devart.Data.SQLite.SQLiteSelectStatement@)">
      <summary>Tries to convert the specified SELECT statement to a <see cref="T:Devart.Data.SQLite.SQLiteSelectStatement" /> object. </summary>
      <keywords>SQLiteSelectStatement.TryParse method </keywords>
      <param name="text">The statement to parse. </param>
      <param name="behavior">One of the <see cref="T:Devart.Common.ParserBehavior" /> values. Determines what parts of the statement to analyze. </param>
      <param name="statement">A <see cref="T:Devart.Data.SQLite.SQLiteSelectStatement" /> object that represents the specified SELECT statement. </param>
      <returns>
        <see langword="true" /> if the conversion was successful; otherwise, <see langword="false" /> </returns>
    </member>
    <member name="T:Devart.Data.SQLite.SQLiteText">
      <summary>Represents a variable-length stream of characters to be stored in or retrieved from the database. </summary>
    </member>
    <member name="M:Devart.Data.SQLite.SQLiteText.#ctor()">
      <summary>Initializes a new instance of the <see cref="T:Devart.Data.SQLite.SQLiteText" /> class. </summary>
      <overloads>Initializes a new instance of the <see cref="T:Devart.Data.SQLite.SQLiteText" /> class. </overloads>
    </member>
    <member name="M:Devart.Data.SQLite.SQLiteText.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:Devart.Data.SQLite.SQLiteText" /> class, setting the <see cref="P:Devart.Data.SQLite.SQLiteText.Value" /> property to the specified string. </summary>
      <param name="value">The string to store. </param>
    </member>
    <member name="M:Devart.Data.SQLite.SQLiteText.#ctor(System.String,System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:Devart.Data.SQLite.SQLiteText" /> class, setting the <see cref="P:Devart.Data.SQLite.SQLiteText.Value" /> property to the specified string and specifying what encoding will be used. </summary>
      <param name="value">The string to store. </param>
      <param name="isUnicode16"><see langword="true" />, if client charset UTF8 is used; <see langword="false" />, if default client charset is used. </param>
    </member>
    <member name="M:Devart.Data.SQLite.SQLiteText.Equals(System.Object)">
      <summary>Compares the specified object parameter to the <see cref="T:Devart.Data.SQLite.SQLiteText" /> value. </summary>
      <keywords>SQLiteText.Equals method </keywords>
      <param name="obj">The object to be compared. </param>
      <returns><see langword="true" /> if object is an instance of the <see cref="T:Devart.Data.SQLite.SQLiteText" /> and has the same date and time; otherwise, <see langword="false" />. </returns>
    </member>
    <member name="P:Devart.Data.SQLite.SQLiteText.IsUnicode16">
      <summary>Gets or sets a value indicating whether the <see cref="T:Devart.Data.SQLite.SQLiteText" /> uses UTF16 encoding. </summary>
      <keywords>SQLiteText.IsUnicode16 property </keywords>
      <value>If <b>true</b>, the  <see cref="T:Devart.Data.SQLite.SQLiteText" /> connection uses UTF16 encoding; otherwise it uses UTF8. </value>
    </member>
    <member name="F:Devart.Data.SQLite.SQLiteText.Null">
      <summary>Represents a null value that can be assigned to the <see cref="P:Devart.Data.SQLite.SQLiteText.Value" /> property of the <see cref="T:Devart.Data.SQLite.SQLiteText" /> object. </summary>
      <keywords>SQLiteText.Null field </keywords>
    </member>
    <member name="M:Devart.Data.SQLite.SQLiteText.ToString()">
      <summary>Gets the string representation of the <see cref="T:Devart.Data.SQLite.SQLiteText" /> object. </summary>
      <keywords>SQLiteText.ToString method </keywords>
      <returns>The string representation of the <see cref="T:Devart.Data.SQLite.SQLiteText" /> object. </returns>
    </member>
    <member name="P:Devart.Data.SQLite.SQLiteText.Value">
      <summary>Gets the string that is stored in the specified <see cref="T:Devart.Data.SQLite.SQLiteText" /> object. </summary>
      <keywords>SQLiteText.Value property </keywords>
      <value>The string to be stored or value retrieved from database. </value>
    </member>
    <member name="T:Devart.Data.SQLite.SQLiteTransaction">
      <summary>Represents a SQL transaction to be made in the SQLite database. </summary>
    </member>
    <member name="M:Devart.Data.SQLite.SQLiteTransaction.Commit()">
      <summary>Commits the database transaction. </summary>
      <keywords>SQLiteTransaction.Commit method </keywords>
    </member>
    <member name="P:Devart.Data.SQLite.SQLiteTransaction.Connection">
      <summary>Gets the <see cref="T:Devart.Data.SQLite.SQLiteConnection" /> object associated with the transaction, or <see langword="null" /> if the transaction is no longer valid. </summary>
      <keywords>SQLiteTransaction.Connection property </keywords>
      <value>The <see cref="T:Devart.Data.SQLite.SQLiteConnection" /> object associated with the transaction. </value>
    </member>
    <member name="P:Devart.Data.SQLite.SQLiteTransaction.IsolationLevel">
      <summary>Specifies the <see cref="T:System.Data.IsolationLevel" /> for this transaction. </summary>
      <keywords>SQLiteTransaction.IsolationLevel property </keywords>
      <value>The <see cref="T:System.Data.IsolationLevel" /> for this transaction. The default value is IsolationLevel.ReadCommitted. </value>
    </member>
    <member name="M:Devart.Data.SQLite.SQLiteTransaction.Rollback()">
      <summary>Rolls back a database transaction from a pending state. </summary>
      <keywords>SQLiteTransaction.Rollback method </keywords>
    </member>
    <member name="T:Devart.Data.SQLite.SQLiteTransactionMode">
      <summary>Determines how the database is locked during transactions. </summary>
    </member>
    <member name="F:Devart.Data.SQLite.SQLiteTransactionMode.Deferred">
      <summary>No locks are acquired on the database until the database is first accessed. The first read operation against a database creates a shared lock and the first write operation creates a reserved lock. This is the default behavior. </summary>
    </member>
    <member name="F:Devart.Data.SQLite.SQLiteTransactionMode.Exclusive">
      <summary>An exclusive transaction causes exclusive locks to be acquired on all databases. No other thread or process will be able to read or write the database until the transaction is complete. </summary>
    </member>
    <member name="F:Devart.Data.SQLite.SQLiteTransactionMode.Immediate">
      <summary>Reserved locks are acquired on all databases without waiting for the database to be used. No other thread or process will be able to write to the database or initiate immediate or exclusive transactions. However, other processes can continue to read from the database. </summary>
    </member>
    <member name="T:Devart.Data.SQLite.SQLiteType">
      <summary>Specifies the data type of a field or a parameter. </summary>
    </member>
    <member name="F:Devart.Data.SQLite.SQLiteType.Blob">
      <summary>The SQLite BLOB data type that contains a variable-length stream of binary data. Represented as the array of <see cref="T:System.Byte" />. </summary>
    </member>
    <member name="F:Devart.Data.SQLite.SQLiteType.DateTime">
      <summary>The SQLite DATETIME data type that contains a fixed-length representation of a date and time value. Represented as the <see cref="T:System.DateTime" />. </summary>
    </member>
    <member name="F:Devart.Data.SQLite.SQLiteType.Double">
      <summary>The SQLite DOUBLE data type. Represented as the <see cref="T:System.Double" />. </summary>
    </member>
    <member name="F:Devart.Data.SQLite.SQLiteType.Guid">
      <summary>The GUID data type that contains a 16-byte Guid. Represented as the <see cref="T:System.Guid" />. </summary>
    </member>
    <member name="F:Devart.Data.SQLite.SQLiteType.Int16">
      <summary>The SQLite SMALLINT data type that contains a 32-bit signed integer. Represented as the <see cref="T:System.Int16" />. </summary>
    </member>
    <member name="F:Devart.Data.SQLite.SQLiteType.Int32">
      <summary>The SQLite INT data type that contains a 32-bit signed integer. Represented as the <see cref="T:System.Int32" />. </summary>
    </member>
    <member name="F:Devart.Data.SQLite.SQLiteType.Int64">
      <summary>The SQLite LONG data type that contains a 32-bit signed integer. Represented as the <see cref="T:System.Int64" />. </summary>
    </member>
    <member name="F:Devart.Data.SQLite.SQLiteType.Null">
      <summary>The database NULL value, represented as <b>DBNull.Value</b>. </summary>
    </member>
    <member name="F:Devart.Data.SQLite.SQLiteType.Text">
      <summary>The SQLite TEXT data type that contains a variable-length character string. Represented as the <see cref="T:System.String" />. </summary>
    </member>
    <member name="F:Devart.Data.SQLite.SQLiteType.Time">
      <summary>The TIME data type that contains a fixed-length representation of a time value. Represented as the <see cref="T:System.TimeSpan" />. </summary>
    </member>
    <member name="F:Devart.Data.SQLite.SQLiteType.Uninitialized">
      <summary>Data type not initialized. </summary>
    </member>
    <member name="T:Devart.Data.SQLite.SynchronizationMode">
      <summary>Determines how the database is synchronized with writing to hard disk. </summary>
    </member>
    <member name="F:Devart.Data.SQLite.SynchronizationMode.Full">
      <summary>The database engine will pause at critical moments to make sure that data has actually been written to the disk surface before continuing. </summary>
    </member>
    <member name="F:Devart.Data.SQLite.SynchronizationMode.Normal">
      <summary>The database engine will still pause at the most critical moments, but less often than in Full mode. The Normal mode is faster than the Full mode. This is the default mode. </summary>
    </member>
    <member name="F:Devart.Data.SQLite.SynchronizationMode.Off">
      <summary>The database engine continues without pausing as soon as it has handed data off to the operating system. The database might become corrupted if the operating system crashes or the computer loses power. This is the fastest mode. </summary>
    </member>
    <member name="T:Devart.Data.SQLite.TempStoreMode">
      <summary>Determines where temporary tables and indices are stored. </summary>
    </member>
    <member name="F:Devart.Data.SQLite.TempStoreMode.Default">
      <summary>The location of temporary data is defined by C preprocessor macro TEMP_STORE. Currently the generally available library stores temporary data in memory. </summary>
    </member>
    <member name="F:Devart.Data.SQLite.TempStoreMode.File">
      <summary>The temporary data is located in a file, in the directory specified by the <see cref="P:Devart.Data.SQLite.SQLiteConnectionStringBuilder.TempStoreDirectory" /> property. </summary>
    </member>
    <member name="F:Devart.Data.SQLite.TempStoreMode.Memory">
      <summary>The temporary data is located in memory. </summary>
    </member>
  </members>
</doc>